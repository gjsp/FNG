'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.17929
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="FNG")>  _
Partial Public Class dcDBDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub Insertasset(instance As asset)
    End Sub
  Partial Private Sub Updateasset(instance As asset)
    End Sub
  Partial Private Sub Deleteasset(instance As asset)
    End Sub
  Partial Private Sub Insertgold_type(instance As gold_type)
    End Sub
  Partial Private Sub Updategold_type(instance As gold_type)
    End Sub
  Partial Private Sub Deletegold_type(instance As gold_type)
    End Sub
  Partial Private Sub Insertquantity_order(instance As quantity_order)
    End Sub
  Partial Private Sub Updatequantity_order(instance As quantity_order)
    End Sub
  Partial Private Sub Deletequantity_order(instance As quantity_order)
    End Sub
  Partial Private Sub Insertticket_split(instance As ticket_split)
    End Sub
  Partial Private Sub Updateticket_split(instance As ticket_split)
    End Sub
  Partial Private Sub Deleteticket_split(instance As ticket_split)
    End Sub
  Partial Private Sub Inserttrade(instance As trade)
    End Sub
  Partial Private Sub Updatetrade(instance As trade)
    End Sub
  Partial Private Sub Deletetrade(instance As trade)
    End Sub
  Partial Private Sub Insertusername(instance As username)
    End Sub
  Partial Private Sub Updateusername(instance As username)
    End Sub
  Partial Private Sub Deleteusername(instance As username)
    End Sub
  Partial Private Sub Insertcustomer(instance As customer)
    End Sub
  Partial Private Sub Updatecustomer(instance As customer)
    End Sub
  Partial Private Sub Deletecustomer(instance As customer)
    End Sub
  Partial Private Sub Insertcustomer_tran(instance As customer_tran)
    End Sub
  Partial Private Sub Updatecustomer_tran(instance As customer_tran)
    End Sub
  Partial Private Sub Deletecustomer_tran(instance As customer_tran)
    End Sub
  Partial Private Sub Insertactual(instance As actual)
    End Sub
  Partial Private Sub Updateactual(instance As actual)
    End Sub
  Partial Private Sub Deleteactual(instance As actual)
    End Sub
  Partial Private Sub Insertguarantee(instance As guarantee)
    End Sub
  Partial Private Sub Updateguarantee(instance As guarantee)
    End Sub
  Partial Private Sub Deleteguarantee(instance As guarantee)
    End Sub
  Partial Private Sub Insertusers_menu(instance As users_menu)
    End Sub
  Partial Private Sub Updateusers_menu(instance As users_menu)
    End Sub
  Partial Private Sub Deleteusers_menu(instance As users_menu)
    End Sub
  Partial Private Sub Insertusers_role(instance As users_role)
    End Sub
  Partial Private Sub Updateusers_role(instance As users_role)
    End Sub
  Partial Private Sub Deleteusers_role(instance As users_role)
    End Sub
  Partial Private Sub Insertspot_log(instance As spot_log)
    End Sub
  Partial Private Sub Updatespot_log(instance As spot_log)
    End Sub
  Partial Private Sub Deletespot_log(instance As spot_log)
    End Sub
  Partial Private Sub Insertuser(instance As user)
    End Sub
  Partial Private Sub Updateuser(instance As user)
    End Sub
  Partial Private Sub Deleteuser(instance As user)
    End Sub
  Partial Private Sub Insertstock_online(instance As stock_online)
    End Sub
  Partial Private Sub Updatestock_online(instance As stock_online)
    End Sub
  Partial Private Sub Deletestock_online(instance As stock_online)
    End Sub
  Partial Private Sub Insertticket(instance As ticket)
    End Sub
  Partial Private Sub Updateticket(instance As ticket)
    End Sub
  Partial Private Sub Deleteticket(instance As ticket)
    End Sub
  Partial Private Sub Insertstock(instance As stock)
    End Sub
  Partial Private Sub Updatestock(instance As stock)
    End Sub
  Partial Private Sub Deletestock(instance As stock)
    End Sub
  Partial Private Sub Insertticket_log(instance As ticket_log)
    End Sub
  Partial Private Sub Updateticket_log(instance As ticket_log)
    End Sub
  Partial Private Sub Deleteticket_log(instance As ticket_log)
    End Sub
  Partial Private Sub Insertpayment(instance As payment)
    End Sub
  Partial Private Sub Updatepayment(instance As payment)
    End Sub
  Partial Private Sub Deletepayment(instance As payment)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("GTCConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property assets() As System.Data.Linq.Table(Of asset)
		Get
			Return Me.GetTable(Of asset)
		End Get
	End Property
	
	Public ReadOnly Property gold_types() As System.Data.Linq.Table(Of gold_type)
		Get
			Return Me.GetTable(Of gold_type)
		End Get
	End Property
	
	Public ReadOnly Property quantity_accepts() As System.Data.Linq.Table(Of quantity_accept)
		Get
			Return Me.GetTable(Of quantity_accept)
		End Get
	End Property
	
	Public ReadOnly Property quantity_orders() As System.Data.Linq.Table(Of quantity_order)
		Get
			Return Me.GetTable(Of quantity_order)
		End Get
	End Property
	
	Public ReadOnly Property ticket_runnos() As System.Data.Linq.Table(Of ticket_runno)
		Get
			Return Me.GetTable(Of ticket_runno)
		End Get
	End Property
	
	Public ReadOnly Property ticket_splits() As System.Data.Linq.Table(Of ticket_split)
		Get
			Return Me.GetTable(Of ticket_split)
		End Get
	End Property
	
	Public ReadOnly Property trades() As System.Data.Linq.Table(Of trade)
		Get
			Return Me.GetTable(Of trade)
		End Get
	End Property
	
	Public ReadOnly Property trade_runnos() As System.Data.Linq.Table(Of trade_runno)
		Get
			Return Me.GetTable(Of trade_runno)
		End Get
	End Property
	
	Public ReadOnly Property usernames() As System.Data.Linq.Table(Of username)
		Get
			Return Me.GetTable(Of username)
		End Get
	End Property
	
	Public ReadOnly Property cust_lists() As System.Data.Linq.Table(Of cust_list)
		Get
			Return Me.GetTable(Of cust_list)
		End Get
	End Property
	
	Public ReadOnly Property customers() As System.Data.Linq.Table(Of customer)
		Get
			Return Me.GetTable(Of customer)
		End Get
	End Property
	
	Public ReadOnly Property customer_trans() As System.Data.Linq.Table(Of customer_tran)
		Get
			Return Me.GetTable(Of customer_tran)
		End Get
	End Property
	
	Public ReadOnly Property actuals() As System.Data.Linq.Table(Of actual)
		Get
			Return Me.GetTable(Of actual)
		End Get
	End Property
	
	Public ReadOnly Property guarantees() As System.Data.Linq.Table(Of guarantee)
		Get
			Return Me.GetTable(Of guarantee)
		End Get
	End Property
	
	Public ReadOnly Property v_grts() As System.Data.Linq.Table(Of v_grt)
		Get
			Return Me.GetTable(Of v_grt)
		End Get
	End Property
	
	Public ReadOnly Property users_menus() As System.Data.Linq.Table(Of users_menu)
		Get
			Return Me.GetTable(Of users_menu)
		End Get
	End Property
	
	Public ReadOnly Property users_roles() As System.Data.Linq.Table(Of users_role)
		Get
			Return Me.GetTable(Of users_role)
		End Get
	End Property
	
	Public ReadOnly Property spot_logs() As System.Data.Linq.Table(Of spot_log)
		Get
			Return Me.GetTable(Of spot_log)
		End Get
	End Property
	
	Public ReadOnly Property users() As System.Data.Linq.Table(Of user)
		Get
			Return Me.GetTable(Of user)
		End Get
	End Property
	
	Public ReadOnly Property stock_onlines() As System.Data.Linq.Table(Of stock_online)
		Get
			Return Me.GetTable(Of stock_online)
		End Get
	End Property
	
	Public ReadOnly Property tickets() As System.Data.Linq.Table(Of ticket)
		Get
			Return Me.GetTable(Of ticket)
		End Get
	End Property
	
	Public ReadOnly Property v_ticket_sum_splits() As System.Data.Linq.Table(Of v_ticket_sum_split)
		Get
			Return Me.GetTable(Of v_ticket_sum_split)
		End Get
	End Property
	
	Public ReadOnly Property v_payments() As System.Data.Linq.Table(Of v_payment)
		Get
			Return Me.GetTable(Of v_payment)
		End Get
	End Property
	
	Public ReadOnly Property stocks() As System.Data.Linq.Table(Of stock)
		Get
			Return Me.GetTable(Of stock)
		End Get
	End Property
	
	Public ReadOnly Property ticket_logs() As System.Data.Linq.Table(Of ticket_log)
		Get
			Return Me.GetTable(Of ticket_log)
		End Get
	End Property
	
	Public ReadOnly Property payments() As System.Data.Linq.Table(Of payment)
		Get
			Return Me.GetTable(Of payment)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.getQuantityAcceptAdap")>  _
	Public Function getQuantityAcceptAdap(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(5)")> ByVal type As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(5)")> ByVal purity As String) As ISingleResult(Of getQuantityAcceptAdapResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), type, purity)
		Return CType(result.ReturnValue,ISingleResult(Of getQuantityAcceptAdapResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.getQuantityOrder")>  _
	Public Function getQuantityOrder(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(5)")> ByVal type As String, <Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(5)")> ByVal purity As String) As ISingleResult(Of getQuantityOrderResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), type, purity)
		Return CType(result.ReturnValue,ISingleResult(Of getQuantityOrderResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.getStock")>  _
	Public Function getStock() As ISingleResult(Of getStockResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,ISingleResult(Of getStockResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.getSummaryStock")>  _
	Public Function getSummaryStock() As ISingleResult(Of getSummaryStockResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,ISingleResult(Of getSummaryStockResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.getSummaryStockActual")>  _
	Public Function getSummaryStockActual() As ISingleResult(Of getSummaryStockActualResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,ISingleResult(Of getSummaryStockActualResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.getSummaryStockPlanning")>  _
	Public Function getSummaryStockPlanning(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal day As System.Nullable(Of Integer)) As ISingleResult(Of getSummaryStockPlanningResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), day)
		Return CType(result.ReturnValue,ISingleResult(Of getSummaryStockPlanningResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.getSumPortfolioByCust_id")>  _
	Public Function getSumPortfolioByCust_id(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(5)")> ByVal cust_id As String) As ISingleResult(Of getSumPortfolioByCust_idResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), cust_id)
		Return CType(result.ReturnValue,ISingleResult(Of getSumPortfolioByCust_idResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.getStockSumDeposit")>  _
	Public Function getStockSumDeposit() As ISingleResult(Of getStockSumDepositResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,ISingleResult(Of getStockSumDepositResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.getSummaryBuySellByCust_id")>  _
	Public Function getSummaryBuySellByCust_id(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(5)")> ByVal cust_id As String) As ISingleResult(Of getSummaryBuySellByCust_idResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), cust_id)
		Return CType(result.ReturnValue,ISingleResult(Of getSummaryBuySellByCust_idResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.getSpot")>  _
	Public Function getSpot() As ISingleResult(Of getSpotResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,ISingleResult(Of getSpotResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.getStockOnline")>  _
	Public Function getStockOnline() As ISingleResult(Of getStockOnlineResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo))
		Return CType(result.ReturnValue,ISingleResult(Of getStockOnlineResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.getStockOnlineForPrice")>  _
	Public Function getStockOnlineForPrice(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="VarChar(5)")> ByVal cust_id As String) As ISingleResult(Of getStockOnlineForPriceResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), cust_id)
		Return CType(result.ReturnValue,ISingleResult(Of getStockOnlineForPriceResult))
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.asset")>  _
Partial Public Class asset
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _asset_id As Integer
	
	Private _asset_type As String
	
	Private _type As String
	
	Private _purity As String
	
	Private _quantity As System.Nullable(Of Decimal)
	
	Private _status As String
	
	Private _remark As String
	
	Private _created_by As String
	
	Private _datetime As System.Nullable(Of Date)
	
	Private _created_date As System.Nullable(Of Date)
	
	Private _modifier_by As String
	
	Private _modifier_date As System.Nullable(Of Date)
	
	Private _payment As String
	
	Private _payment_bank As String
	
	Private _payment_duedate As System.Nullable(Of Date)
	
	Private _payment_cheq_no As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onasset_idChanging(value As Integer)
    End Sub
    Partial Private Sub Onasset_idChanged()
    End Sub
    Partial Private Sub Onasset_typeChanging(value As String)
    End Sub
    Partial Private Sub Onasset_typeChanged()
    End Sub
    Partial Private Sub OntypeChanging(value As String)
    End Sub
    Partial Private Sub OntypeChanged()
    End Sub
    Partial Private Sub OnpurityChanging(value As String)
    End Sub
    Partial Private Sub OnpurityChanged()
    End Sub
    Partial Private Sub OnquantityChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnquantityChanged()
    End Sub
    Partial Private Sub OnstatusChanging(value As String)
    End Sub
    Partial Private Sub OnstatusChanged()
    End Sub
    Partial Private Sub OnremarkChanging(value As String)
    End Sub
    Partial Private Sub OnremarkChanged()
    End Sub
    Partial Private Sub Oncreated_byChanging(value As String)
    End Sub
    Partial Private Sub Oncreated_byChanged()
    End Sub
    Partial Private Sub OndatetimeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndatetimeChanged()
    End Sub
    Partial Private Sub Oncreated_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncreated_dateChanged()
    End Sub
    Partial Private Sub Onmodifier_byChanging(value As String)
    End Sub
    Partial Private Sub Onmodifier_byChanged()
    End Sub
    Partial Private Sub Onmodifier_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onmodifier_dateChanged()
    End Sub
    Partial Private Sub OnpaymentChanging(value As String)
    End Sub
    Partial Private Sub OnpaymentChanged()
    End Sub
    Partial Private Sub Onpayment_bankChanging(value As String)
    End Sub
    Partial Private Sub Onpayment_bankChanged()
    End Sub
    Partial Private Sub Onpayment_duedateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onpayment_duedateChanged()
    End Sub
    Partial Private Sub Onpayment_cheq_noChanging(value As String)
    End Sub
    Partial Private Sub Onpayment_cheq_noChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_asset_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property asset_id() As Integer
		Get
			Return Me._asset_id
		End Get
		Set
			If ((Me._asset_id = value)  _
						= false) Then
				Me.Onasset_idChanging(value)
				Me.SendPropertyChanging
				Me._asset_id = value
				Me.SendPropertyChanged("asset_id")
				Me.Onasset_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_asset_type", DbType:="VarChar(10)")>  _
	Public Property asset_type() As String
		Get
			Return Me._asset_type
		End Get
		Set
			If (String.Equals(Me._asset_type, value) = false) Then
				Me.Onasset_typeChanging(value)
				Me.SendPropertyChanging
				Me._asset_type = value
				Me.SendPropertyChanged("asset_type")
				Me.Onasset_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_type", DbType:="VarChar(10)")>  _
	Public Property type() As String
		Get
			Return Me._type
		End Get
		Set
			If (String.Equals(Me._type, value) = false) Then
				Me.OntypeChanging(value)
				Me.SendPropertyChanging
				Me._type = value
				Me.SendPropertyChanged("type")
				Me.OntypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_purity", DbType:="VarChar(10)")>  _
	Public Property purity() As String
		Get
			Return Me._purity
		End Get
		Set
			If (String.Equals(Me._purity, value) = false) Then
				Me.OnpurityChanging(value)
				Me.SendPropertyChanging
				Me._purity = value
				Me.SendPropertyChanged("purity")
				Me.OnpurityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quantity", DbType:="Decimal(18,5)")>  _
	Public Property quantity() As System.Nullable(Of Decimal)
		Get
			Return Me._quantity
		End Get
		Set
			If (Me._quantity.Equals(value) = false) Then
				Me.OnquantityChanging(value)
				Me.SendPropertyChanging
				Me._quantity = value
				Me.SendPropertyChanged("quantity")
				Me.OnquantityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status", DbType:="VarChar(50)")>  _
	Public Property status() As String
		Get
			Return Me._status
		End Get
		Set
			If (String.Equals(Me._status, value) = false) Then
				Me.OnstatusChanging(value)
				Me.SendPropertyChanging
				Me._status = value
				Me.SendPropertyChanged("status")
				Me.OnstatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_remark", DbType:="VarChar(2000)")>  _
	Public Property remark() As String
		Get
			Return Me._remark
		End Get
		Set
			If (String.Equals(Me._remark, value) = false) Then
				Me.OnremarkChanging(value)
				Me.SendPropertyChanging
				Me._remark = value
				Me.SendPropertyChanged("remark")
				Me.OnremarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_created_by", DbType:="VarChar(50)")>  _
	Public Property created_by() As String
		Get
			Return Me._created_by
		End Get
		Set
			If (String.Equals(Me._created_by, value) = false) Then
				Me.Oncreated_byChanging(value)
				Me.SendPropertyChanging
				Me._created_by = value
				Me.SendPropertyChanged("created_by")
				Me.Oncreated_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_datetime", DbType:="DateTime")>  _
	Public Property datetime() As System.Nullable(Of Date)
		Get
			Return Me._datetime
		End Get
		Set
			If (Me._datetime.Equals(value) = false) Then
				Me.OndatetimeChanging(value)
				Me.SendPropertyChanging
				Me._datetime = value
				Me.SendPropertyChanged("datetime")
				Me.OndatetimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_created_date", DbType:="DateTime")>  _
	Public Property created_date() As System.Nullable(Of Date)
		Get
			Return Me._created_date
		End Get
		Set
			If (Me._created_date.Equals(value) = false) Then
				Me.Oncreated_dateChanging(value)
				Me.SendPropertyChanging
				Me._created_date = value
				Me.SendPropertyChanged("created_date")
				Me.Oncreated_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modifier_by", DbType:="VarChar(50)")>  _
	Public Property modifier_by() As String
		Get
			Return Me._modifier_by
		End Get
		Set
			If (String.Equals(Me._modifier_by, value) = false) Then
				Me.Onmodifier_byChanging(value)
				Me.SendPropertyChanging
				Me._modifier_by = value
				Me.SendPropertyChanged("modifier_by")
				Me.Onmodifier_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modifier_date", DbType:="DateTime")>  _
	Public Property modifier_date() As System.Nullable(Of Date)
		Get
			Return Me._modifier_date
		End Get
		Set
			If (Me._modifier_date.Equals(value) = false) Then
				Me.Onmodifier_dateChanging(value)
				Me.SendPropertyChanging
				Me._modifier_date = value
				Me.SendPropertyChanged("modifier_date")
				Me.Onmodifier_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment", DbType:="VarChar(50)")>  _
	Public Property payment() As String
		Get
			Return Me._payment
		End Get
		Set
			If (String.Equals(Me._payment, value) = false) Then
				Me.OnpaymentChanging(value)
				Me.SendPropertyChanging
				Me._payment = value
				Me.SendPropertyChanged("payment")
				Me.OnpaymentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_bank", DbType:="VarChar(50)")>  _
	Public Property payment_bank() As String
		Get
			Return Me._payment_bank
		End Get
		Set
			If (String.Equals(Me._payment_bank, value) = false) Then
				Me.Onpayment_bankChanging(value)
				Me.SendPropertyChanging
				Me._payment_bank = value
				Me.SendPropertyChanged("payment_bank")
				Me.Onpayment_bankChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_duedate", DbType:="DateTime")>  _
	Public Property payment_duedate() As System.Nullable(Of Date)
		Get
			Return Me._payment_duedate
		End Get
		Set
			If (Me._payment_duedate.Equals(value) = false) Then
				Me.Onpayment_duedateChanging(value)
				Me.SendPropertyChanging
				Me._payment_duedate = value
				Me.SendPropertyChanged("payment_duedate")
				Me.Onpayment_duedateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_cheq_no", DbType:="VarChar(50)")>  _
	Public Property payment_cheq_no() As String
		Get
			Return Me._payment_cheq_no
		End Get
		Set
			If (String.Equals(Me._payment_cheq_no, value) = false) Then
				Me.Onpayment_cheq_noChanging(value)
				Me.SendPropertyChanging
				Me._payment_cheq_no = value
				Me.SendPropertyChanged("payment_cheq_no")
				Me.Onpayment_cheq_noChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.gold_type")>  _
Partial Public Class gold_type
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _gold_type_id As String
	
	Private _gold_type_name As String
	
	Private _detail As String
	
	Private _gold_unit As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Ongold_type_idChanging(value As String)
    End Sub
    Partial Private Sub Ongold_type_idChanged()
    End Sub
    Partial Private Sub Ongold_type_nameChanging(value As String)
    End Sub
    Partial Private Sub Ongold_type_nameChanged()
    End Sub
    Partial Private Sub OndetailChanging(value As String)
    End Sub
    Partial Private Sub OndetailChanged()
    End Sub
    Partial Private Sub Ongold_unitChanging(value As String)
    End Sub
    Partial Private Sub Ongold_unitChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_type_id", DbType:="VarChar(4) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property gold_type_id() As String
		Get
			Return Me._gold_type_id
		End Get
		Set
			If (String.Equals(Me._gold_type_id, value) = false) Then
				Me.Ongold_type_idChanging(value)
				Me.SendPropertyChanging
				Me._gold_type_id = value
				Me.SendPropertyChanged("gold_type_id")
				Me.Ongold_type_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_type_name", DbType:="VarChar(50)")>  _
	Public Property gold_type_name() As String
		Get
			Return Me._gold_type_name
		End Get
		Set
			If (String.Equals(Me._gold_type_name, value) = false) Then
				Me.Ongold_type_nameChanging(value)
				Me.SendPropertyChanging
				Me._gold_type_name = value
				Me.SendPropertyChanged("gold_type_name")
				Me.Ongold_type_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_detail", DbType:="VarChar(50)")>  _
	Public Property detail() As String
		Get
			Return Me._detail
		End Get
		Set
			If (String.Equals(Me._detail, value) = false) Then
				Me.OndetailChanging(value)
				Me.SendPropertyChanging
				Me._detail = value
				Me.SendPropertyChanged("detail")
				Me.OndetailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_unit", DbType:="VarChar(10)")>  _
	Public Property gold_unit() As String
		Get
			Return Me._gold_unit
		End Get
		Set
			If (String.Equals(Me._gold_unit, value) = false) Then
				Me.Ongold_unitChanging(value)
				Me.SendPropertyChanging
				Me._gold_unit = value
				Me.SendPropertyChanged("gold_unit")
				Me.Ongold_unitChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.quantity_accept")>  _
Partial Public Class quantity_accept
	
	Private _quan_max96_buy As System.Nullable(Of Integer)
	
	Private _quan_per96_buy As System.Nullable(Of Integer)
	
	Private _quan_max96_sell As System.Nullable(Of Integer)
	
	Private _quan_per96_sell As System.Nullable(Of Integer)
	
	Private _quan_max99_buy As System.Nullable(Of Integer)
	
	Private _quan_per99_buy As System.Nullable(Of Integer)
	
	Private _quan_max99_sell As System.Nullable(Of Integer)
	
	Private _quan_per99_sell As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quan_max96_buy", DbType:="Int")>  _
	Public Property quan_max96_buy() As System.Nullable(Of Integer)
		Get
			Return Me._quan_max96_buy
		End Get
		Set
			If (Me._quan_max96_buy.Equals(value) = false) Then
				Me._quan_max96_buy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quan_per96_buy", DbType:="Int")>  _
	Public Property quan_per96_buy() As System.Nullable(Of Integer)
		Get
			Return Me._quan_per96_buy
		End Get
		Set
			If (Me._quan_per96_buy.Equals(value) = false) Then
				Me._quan_per96_buy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quan_max96_sell", DbType:="Int")>  _
	Public Property quan_max96_sell() As System.Nullable(Of Integer)
		Get
			Return Me._quan_max96_sell
		End Get
		Set
			If (Me._quan_max96_sell.Equals(value) = false) Then
				Me._quan_max96_sell = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quan_per96_sell", DbType:="Int")>  _
	Public Property quan_per96_sell() As System.Nullable(Of Integer)
		Get
			Return Me._quan_per96_sell
		End Get
		Set
			If (Me._quan_per96_sell.Equals(value) = false) Then
				Me._quan_per96_sell = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quan_max99_buy", DbType:="Int")>  _
	Public Property quan_max99_buy() As System.Nullable(Of Integer)
		Get
			Return Me._quan_max99_buy
		End Get
		Set
			If (Me._quan_max99_buy.Equals(value) = false) Then
				Me._quan_max99_buy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quan_per99_buy", DbType:="Int")>  _
	Public Property quan_per99_buy() As System.Nullable(Of Integer)
		Get
			Return Me._quan_per99_buy
		End Get
		Set
			If (Me._quan_per99_buy.Equals(value) = false) Then
				Me._quan_per99_buy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quan_max99_sell", DbType:="Int")>  _
	Public Property quan_max99_sell() As System.Nullable(Of Integer)
		Get
			Return Me._quan_max99_sell
		End Get
		Set
			If (Me._quan_max99_sell.Equals(value) = false) Then
				Me._quan_max99_sell = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quan_per99_sell", DbType:="Int")>  _
	Public Property quan_per99_sell() As System.Nullable(Of Integer)
		Get
			Return Me._quan_per99_sell
		End Get
		Set
			If (Me._quan_per99_sell.Equals(value) = false) Then
				Me._quan_per99_sell = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.quantity_order")>  _
Partial Public Class quantity_order
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _price As Integer
	
	Private _type As String
	
	Private _purity As String
	
	Private _quantity As System.Nullable(Of Integer)
	
	Private _max As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnpriceChanging(value As Integer)
    End Sub
    Partial Private Sub OnpriceChanged()
    End Sub
    Partial Private Sub OntypeChanging(value As String)
    End Sub
    Partial Private Sub OntypeChanged()
    End Sub
    Partial Private Sub OnpurityChanging(value As String)
    End Sub
    Partial Private Sub OnpurityChanged()
    End Sub
    Partial Private Sub OnquantityChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnquantityChanged()
    End Sub
    Partial Private Sub OnmaxChanging(value As String)
    End Sub
    Partial Private Sub OnmaxChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_price", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property price() As Integer
		Get
			Return Me._price
		End Get
		Set
			If ((Me._price = value)  _
						= false) Then
				Me.OnpriceChanging(value)
				Me.SendPropertyChanging
				Me._price = value
				Me.SendPropertyChanged("price")
				Me.OnpriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_type", DbType:="VarChar(5) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property type() As String
		Get
			Return Me._type
		End Get
		Set
			If (String.Equals(Me._type, value) = false) Then
				Me.OntypeChanging(value)
				Me.SendPropertyChanging
				Me._type = value
				Me.SendPropertyChanged("type")
				Me.OntypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_purity", DbType:="VarChar(5) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property purity() As String
		Get
			Return Me._purity
		End Get
		Set
			If (String.Equals(Me._purity, value) = false) Then
				Me.OnpurityChanging(value)
				Me.SendPropertyChanging
				Me._purity = value
				Me.SendPropertyChanged("purity")
				Me.OnpurityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quantity", DbType:="Int")>  _
	Public Property quantity() As System.Nullable(Of Integer)
		Get
			Return Me._quantity
		End Get
		Set
			If (Me._quantity.Equals(value) = false) Then
				Me.OnquantityChanging(value)
				Me.SendPropertyChanging
				Me._quantity = value
				Me.SendPropertyChanged("quantity")
				Me.OnquantityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_max", DbType:="VarChar(1)")>  _
	Public Property max() As String
		Get
			Return Me._max
		End Get
		Set
			If (String.Equals(Me._max, value) = false) Then
				Me.OnmaxChanging(value)
				Me.SendPropertyChanging
				Me._max = value
				Me.SendPropertyChanged("max")
				Me.OnmaxChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ticket_runno")>  _
Partial Public Class ticket_runno
	
	Private _run_no As System.Nullable(Of Integer)
	
	Private _stringWord As System.Nullable(Of Char)
	
	Private _datetime As System.Nullable(Of Date)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_run_no", DbType:="Int")>  _
	Public Property run_no() As System.Nullable(Of Integer)
		Get
			Return Me._run_no
		End Get
		Set
			If (Me._run_no.Equals(value) = false) Then
				Me._run_no = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stringWord", DbType:="Char(1)")>  _
	Public Property stringWord() As System.Nullable(Of Char)
		Get
			Return Me._stringWord
		End Get
		Set
			If (Me._stringWord.Equals(value) = false) Then
				Me._stringWord = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_datetime", DbType:="DateTime")>  _
	Public Property datetime() As System.Nullable(Of Date)
		Get
			Return Me._datetime
		End Get
		Set
			If (Me._datetime.Equals(value) = false) Then
				Me._datetime = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ticket_split")>  _
Partial Public Class ticket_split
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ticket_sp_id As Integer
	
	Private _ref_no As String
	
	Private _row As System.Nullable(Of Integer)
	
	Private _type As String
	
	Private _quantity As System.Nullable(Of Decimal)
	
	Private _price As System.Nullable(Of Decimal)
	
	Private _amount As System.Nullable(Of Decimal)
	
	Private _payment As String
	
	Private _payment_bank As String
	
	Private _payment_cheq_no As String
	
	Private _payment_duedate As System.Nullable(Of Date)
	
	Private _created_date As System.Nullable(Of Date)
	
	Private _created_by As String
	
	Private _status_id As String
	
	Private _receipt As System.Nullable(Of Boolean)
	
	Private _paid As System.Nullable(Of Boolean)
	
	Private _dep As System.Nullable(Of Char)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onticket_sp_idChanging(value As Integer)
    End Sub
    Partial Private Sub Onticket_sp_idChanged()
    End Sub
    Partial Private Sub Onref_noChanging(value As String)
    End Sub
    Partial Private Sub Onref_noChanged()
    End Sub
    Partial Private Sub OnrowChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrowChanged()
    End Sub
    Partial Private Sub OntypeChanging(value As String)
    End Sub
    Partial Private Sub OntypeChanged()
    End Sub
    Partial Private Sub OnquantityChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnquantityChanged()
    End Sub
    Partial Private Sub OnpriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnpriceChanged()
    End Sub
    Partial Private Sub OnamountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnamountChanged()
    End Sub
    Partial Private Sub OnpaymentChanging(value As String)
    End Sub
    Partial Private Sub OnpaymentChanged()
    End Sub
    Partial Private Sub Onpayment_bankChanging(value As String)
    End Sub
    Partial Private Sub Onpayment_bankChanged()
    End Sub
    Partial Private Sub Onpayment_cheq_noChanging(value As String)
    End Sub
    Partial Private Sub Onpayment_cheq_noChanged()
    End Sub
    Partial Private Sub Onpayment_duedateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onpayment_duedateChanged()
    End Sub
    Partial Private Sub Oncreated_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncreated_dateChanged()
    End Sub
    Partial Private Sub Oncreated_byChanging(value As String)
    End Sub
    Partial Private Sub Oncreated_byChanged()
    End Sub
    Partial Private Sub Onstatus_idChanging(value As String)
    End Sub
    Partial Private Sub Onstatus_idChanged()
    End Sub
    Partial Private Sub OnreceiptChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnreceiptChanged()
    End Sub
    Partial Private Sub OnpaidChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnpaidChanged()
    End Sub
    Partial Private Sub OndepChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OndepChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ticket_sp_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ticket_sp_id() As Integer
		Get
			Return Me._ticket_sp_id
		End Get
		Set
			If ((Me._ticket_sp_id = value)  _
						= false) Then
				Me.Onticket_sp_idChanging(value)
				Me.SendPropertyChanging
				Me._ticket_sp_id = value
				Me.SendPropertyChanged("ticket_sp_id")
				Me.Onticket_sp_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ref_no", DbType:="VarChar(50)")>  _
	Public Property ref_no() As String
		Get
			Return Me._ref_no
		End Get
		Set
			If (String.Equals(Me._ref_no, value) = false) Then
				Me.Onref_noChanging(value)
				Me.SendPropertyChanging
				Me._ref_no = value
				Me.SendPropertyChanged("ref_no")
				Me.Onref_noChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_row", DbType:="Int")>  _
	Public Property row() As System.Nullable(Of Integer)
		Get
			Return Me._row
		End Get
		Set
			If (Me._row.Equals(value) = false) Then
				Me.OnrowChanging(value)
				Me.SendPropertyChanging
				Me._row = value
				Me.SendPropertyChanged("row")
				Me.OnrowChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_type", DbType:="VarChar(50)")>  _
	Public Property type() As String
		Get
			Return Me._type
		End Get
		Set
			If (String.Equals(Me._type, value) = false) Then
				Me.OntypeChanging(value)
				Me.SendPropertyChanging
				Me._type = value
				Me.SendPropertyChanged("type")
				Me.OntypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quantity", DbType:="Decimal(18,5)")>  _
	Public Property quantity() As System.Nullable(Of Decimal)
		Get
			Return Me._quantity
		End Get
		Set
			If (Me._quantity.Equals(value) = false) Then
				Me.OnquantityChanging(value)
				Me.SendPropertyChanging
				Me._quantity = value
				Me.SendPropertyChanged("quantity")
				Me.OnquantityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_price", DbType:="Decimal(18,3)")>  _
	Public Property price() As System.Nullable(Of Decimal)
		Get
			Return Me._price
		End Get
		Set
			If (Me._price.Equals(value) = false) Then
				Me.OnpriceChanging(value)
				Me.SendPropertyChanging
				Me._price = value
				Me.SendPropertyChanged("price")
				Me.OnpriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amount", DbType:="Decimal(18,3)")>  _
	Public Property amount() As System.Nullable(Of Decimal)
		Get
			Return Me._amount
		End Get
		Set
			If (Me._amount.Equals(value) = false) Then
				Me.OnamountChanging(value)
				Me.SendPropertyChanging
				Me._amount = value
				Me.SendPropertyChanged("amount")
				Me.OnamountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment", DbType:="VarChar(50)")>  _
	Public Property payment() As String
		Get
			Return Me._payment
		End Get
		Set
			If (String.Equals(Me._payment, value) = false) Then
				Me.OnpaymentChanging(value)
				Me.SendPropertyChanging
				Me._payment = value
				Me.SendPropertyChanged("payment")
				Me.OnpaymentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_bank", DbType:="VarChar(50)")>  _
	Public Property payment_bank() As String
		Get
			Return Me._payment_bank
		End Get
		Set
			If (String.Equals(Me._payment_bank, value) = false) Then
				Me.Onpayment_bankChanging(value)
				Me.SendPropertyChanging
				Me._payment_bank = value
				Me.SendPropertyChanged("payment_bank")
				Me.Onpayment_bankChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_cheq_no", DbType:="VarChar(50)")>  _
	Public Property payment_cheq_no() As String
		Get
			Return Me._payment_cheq_no
		End Get
		Set
			If (String.Equals(Me._payment_cheq_no, value) = false) Then
				Me.Onpayment_cheq_noChanging(value)
				Me.SendPropertyChanging
				Me._payment_cheq_no = value
				Me.SendPropertyChanged("payment_cheq_no")
				Me.Onpayment_cheq_noChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_duedate", DbType:="DateTime")>  _
	Public Property payment_duedate() As System.Nullable(Of Date)
		Get
			Return Me._payment_duedate
		End Get
		Set
			If (Me._payment_duedate.Equals(value) = false) Then
				Me.Onpayment_duedateChanging(value)
				Me.SendPropertyChanging
				Me._payment_duedate = value
				Me.SendPropertyChanged("payment_duedate")
				Me.Onpayment_duedateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_created_date", DbType:="DateTime")>  _
	Public Property created_date() As System.Nullable(Of Date)
		Get
			Return Me._created_date
		End Get
		Set
			If (Me._created_date.Equals(value) = false) Then
				Me.Oncreated_dateChanging(value)
				Me.SendPropertyChanging
				Me._created_date = value
				Me.SendPropertyChanged("created_date")
				Me.Oncreated_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_created_by", DbType:="VarChar(10)")>  _
	Public Property created_by() As String
		Get
			Return Me._created_by
		End Get
		Set
			If (String.Equals(Me._created_by, value) = false) Then
				Me.Oncreated_byChanging(value)
				Me.SendPropertyChanging
				Me._created_by = value
				Me.SendPropertyChanged("created_by")
				Me.Oncreated_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status_id", DbType:="VarChar(5)")>  _
	Public Property status_id() As String
		Get
			Return Me._status_id
		End Get
		Set
			If (String.Equals(Me._status_id, value) = false) Then
				Me.Onstatus_idChanging(value)
				Me.SendPropertyChanging
				Me._status_id = value
				Me.SendPropertyChanged("status_id")
				Me.Onstatus_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_receipt", DbType:="Bit")>  _
	Public Property receipt() As System.Nullable(Of Boolean)
		Get
			Return Me._receipt
		End Get
		Set
			If (Me._receipt.Equals(value) = false) Then
				Me.OnreceiptChanging(value)
				Me.SendPropertyChanging
				Me._receipt = value
				Me.SendPropertyChanged("receipt")
				Me.OnreceiptChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_paid", DbType:="Bit")>  _
	Public Property paid() As System.Nullable(Of Boolean)
		Get
			Return Me._paid
		End Get
		Set
			If (Me._paid.Equals(value) = false) Then
				Me.OnpaidChanging(value)
				Me.SendPropertyChanging
				Me._paid = value
				Me.SendPropertyChanged("paid")
				Me.OnpaidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dep", DbType:="NChar(1)")>  _
	Public Property dep() As System.Nullable(Of Char)
		Get
			Return Me._dep
		End Get
		Set
			If (Me._dep.Equals(value) = false) Then
				Me.OndepChanging(value)
				Me.SendPropertyChanging
				Me._dep = value
				Me.SendPropertyChanged("dep")
				Me.OndepChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.trade")>  _
Partial Public Class trade
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _trade_id As Integer
	
	Private _ref_no As String
	
	Private _cust_id As String
	
	Private _type As String
	
	Private _gold_type_id As String
	
	Private _quantity As System.Nullable(Of Decimal)
	
	Private _price As System.Nullable(Of Decimal)
	
	Private _amount As System.Nullable(Of Decimal)
	
	Private _remark As String
	
	Private _leave_order As System.Nullable(Of Char)
	
	Private _ip As String
	
	Private _reject_type As String
	
	Private _accept_type As String
	
	Private _mode As String
	
	Private _created_date As System.Nullable(Of Date)
	
	Private _created_by As String
	
	Private _modifier_date As System.Nullable(Of Date)
	
	Private _modifier_by As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Ontrade_idChanging(value As Integer)
    End Sub
    Partial Private Sub Ontrade_idChanged()
    End Sub
    Partial Private Sub Onref_noChanging(value As String)
    End Sub
    Partial Private Sub Onref_noChanged()
    End Sub
    Partial Private Sub Oncust_idChanging(value As String)
    End Sub
    Partial Private Sub Oncust_idChanged()
    End Sub
    Partial Private Sub OntypeChanging(value As String)
    End Sub
    Partial Private Sub OntypeChanged()
    End Sub
    Partial Private Sub Ongold_type_idChanging(value As String)
    End Sub
    Partial Private Sub Ongold_type_idChanged()
    End Sub
    Partial Private Sub OnquantityChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnquantityChanged()
    End Sub
    Partial Private Sub OnpriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnpriceChanged()
    End Sub
    Partial Private Sub OnamountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnamountChanged()
    End Sub
    Partial Private Sub OnremarkChanging(value As String)
    End Sub
    Partial Private Sub OnremarkChanged()
    End Sub
    Partial Private Sub Onleave_orderChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onleave_orderChanged()
    End Sub
    Partial Private Sub OnipChanging(value As String)
    End Sub
    Partial Private Sub OnipChanged()
    End Sub
    Partial Private Sub Onreject_typeChanging(value As String)
    End Sub
    Partial Private Sub Onreject_typeChanged()
    End Sub
    Partial Private Sub Onaccept_typeChanging(value As String)
    End Sub
    Partial Private Sub Onaccept_typeChanged()
    End Sub
    Partial Private Sub OnmodeChanging(value As String)
    End Sub
    Partial Private Sub OnmodeChanged()
    End Sub
    Partial Private Sub Oncreated_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncreated_dateChanged()
    End Sub
    Partial Private Sub Oncreated_byChanging(value As String)
    End Sub
    Partial Private Sub Oncreated_byChanged()
    End Sub
    Partial Private Sub Onmodifier_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onmodifier_dateChanged()
    End Sub
    Partial Private Sub Onmodifier_byChanging(value As String)
    End Sub
    Partial Private Sub Onmodifier_byChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trade_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property trade_id() As Integer
		Get
			Return Me._trade_id
		End Get
		Set
			If ((Me._trade_id = value)  _
						= false) Then
				Me.Ontrade_idChanging(value)
				Me.SendPropertyChanging
				Me._trade_id = value
				Me.SendPropertyChanged("trade_id")
				Me.Ontrade_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ref_no", DbType:="VarChar(20)")>  _
	Public Property ref_no() As String
		Get
			Return Me._ref_no
		End Get
		Set
			If (String.Equals(Me._ref_no, value) = false) Then
				Me.Onref_noChanging(value)
				Me.SendPropertyChanging
				Me._ref_no = value
				Me.SendPropertyChanged("ref_no")
				Me.Onref_noChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cust_id", DbType:="VarChar(5)")>  _
	Public Property cust_id() As String
		Get
			Return Me._cust_id
		End Get
		Set
			If (String.Equals(Me._cust_id, value) = false) Then
				Me.Oncust_idChanging(value)
				Me.SendPropertyChanging
				Me._cust_id = value
				Me.SendPropertyChanged("cust_id")
				Me.Oncust_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_type", DbType:="VarChar(5)")>  _
	Public Property type() As String
		Get
			Return Me._type
		End Get
		Set
			If (String.Equals(Me._type, value) = false) Then
				Me.OntypeChanging(value)
				Me.SendPropertyChanging
				Me._type = value
				Me.SendPropertyChanged("type")
				Me.OntypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_type_id", DbType:="VarChar(4)")>  _
	Public Property gold_type_id() As String
		Get
			Return Me._gold_type_id
		End Get
		Set
			If (String.Equals(Me._gold_type_id, value) = false) Then
				Me.Ongold_type_idChanging(value)
				Me.SendPropertyChanging
				Me._gold_type_id = value
				Me.SendPropertyChanged("gold_type_id")
				Me.Ongold_type_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quantity", DbType:="Decimal(18,5)")>  _
	Public Property quantity() As System.Nullable(Of Decimal)
		Get
			Return Me._quantity
		End Get
		Set
			If (Me._quantity.Equals(value) = false) Then
				Me.OnquantityChanging(value)
				Me.SendPropertyChanging
				Me._quantity = value
				Me.SendPropertyChanged("quantity")
				Me.OnquantityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_price", DbType:="Decimal(18,2)")>  _
	Public Property price() As System.Nullable(Of Decimal)
		Get
			Return Me._price
		End Get
		Set
			If (Me._price.Equals(value) = false) Then
				Me.OnpriceChanging(value)
				Me.SendPropertyChanging
				Me._price = value
				Me.SendPropertyChanged("price")
				Me.OnpriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amount", DbType:="Decimal(18,2)")>  _
	Public Property amount() As System.Nullable(Of Decimal)
		Get
			Return Me._amount
		End Get
		Set
			If (Me._amount.Equals(value) = false) Then
				Me.OnamountChanging(value)
				Me.SendPropertyChanging
				Me._amount = value
				Me.SendPropertyChanged("amount")
				Me.OnamountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_remark", DbType:="VarChar(MAX)")>  _
	Public Property remark() As String
		Get
			Return Me._remark
		End Get
		Set
			If (String.Equals(Me._remark, value) = false) Then
				Me.OnremarkChanging(value)
				Me.SendPropertyChanging
				Me._remark = value
				Me.SendPropertyChanged("remark")
				Me.OnremarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_leave_order", DbType:="NChar(1)")>  _
	Public Property leave_order() As System.Nullable(Of Char)
		Get
			Return Me._leave_order
		End Get
		Set
			If (Me._leave_order.Equals(value) = false) Then
				Me.Onleave_orderChanging(value)
				Me.SendPropertyChanging
				Me._leave_order = value
				Me.SendPropertyChanged("leave_order")
				Me.Onleave_orderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ip", DbType:="VarChar(50)")>  _
	Public Property ip() As String
		Get
			Return Me._ip
		End Get
		Set
			If (String.Equals(Me._ip, value) = false) Then
				Me.OnipChanging(value)
				Me.SendPropertyChanging
				Me._ip = value
				Me.SendPropertyChanged("ip")
				Me.OnipChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_reject_type", DbType:="VarChar(50)")>  _
	Public Property reject_type() As String
		Get
			Return Me._reject_type
		End Get
		Set
			If (String.Equals(Me._reject_type, value) = false) Then
				Me.Onreject_typeChanging(value)
				Me.SendPropertyChanging
				Me._reject_type = value
				Me.SendPropertyChanged("reject_type")
				Me.Onreject_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_accept_type", DbType:="VarChar(50)")>  _
	Public Property accept_type() As String
		Get
			Return Me._accept_type
		End Get
		Set
			If (String.Equals(Me._accept_type, value) = false) Then
				Me.Onaccept_typeChanging(value)
				Me.SendPropertyChanging
				Me._accept_type = value
				Me.SendPropertyChanged("accept_type")
				Me.Onaccept_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mode", DbType:="VarChar(50)")>  _
	Public Property mode() As String
		Get
			Return Me._mode
		End Get
		Set
			If (String.Equals(Me._mode, value) = false) Then
				Me.OnmodeChanging(value)
				Me.SendPropertyChanging
				Me._mode = value
				Me.SendPropertyChanged("mode")
				Me.OnmodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_created_date", DbType:="DateTime")>  _
	Public Property created_date() As System.Nullable(Of Date)
		Get
			Return Me._created_date
		End Get
		Set
			If (Me._created_date.Equals(value) = false) Then
				Me.Oncreated_dateChanging(value)
				Me.SendPropertyChanging
				Me._created_date = value
				Me.SendPropertyChanged("created_date")
				Me.Oncreated_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_created_by", DbType:="VarChar(10)")>  _
	Public Property created_by() As String
		Get
			Return Me._created_by
		End Get
		Set
			If (String.Equals(Me._created_by, value) = false) Then
				Me.Oncreated_byChanging(value)
				Me.SendPropertyChanging
				Me._created_by = value
				Me.SendPropertyChanged("created_by")
				Me.Oncreated_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modifier_date", DbType:="DateTime")>  _
	Public Property modifier_date() As System.Nullable(Of Date)
		Get
			Return Me._modifier_date
		End Get
		Set
			If (Me._modifier_date.Equals(value) = false) Then
				Me.Onmodifier_dateChanging(value)
				Me.SendPropertyChanging
				Me._modifier_date = value
				Me.SendPropertyChanged("modifier_date")
				Me.Onmodifier_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modifier_by", DbType:="VarChar(10)")>  _
	Public Property modifier_by() As String
		Get
			Return Me._modifier_by
		End Get
		Set
			If (String.Equals(Me._modifier_by, value) = false) Then
				Me.Onmodifier_byChanging(value)
				Me.SendPropertyChanging
				Me._modifier_by = value
				Me.SendPropertyChanged("modifier_by")
				Me.Onmodifier_byChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.trade_runno")>  _
Partial Public Class trade_runno
	
	Private _type As String
	
	Private _book_word_bill As String
	
	Private _book_run_bill As System.Nullable(Of Integer)
	
	Private _no_run_bill As System.Nullable(Of Integer)
	
	Private _book_word_nobill As String
	
	Private _book_run_nobill As System.Nullable(Of Integer)
	
	Private _no_run_nobill As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_type", DbType:="VarChar(50)")>  _
	Public Property type() As String
		Get
			Return Me._type
		End Get
		Set
			If (String.Equals(Me._type, value) = false) Then
				Me._type = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_book_word_bill", DbType:="VarChar(1)")>  _
	Public Property book_word_bill() As String
		Get
			Return Me._book_word_bill
		End Get
		Set
			If (String.Equals(Me._book_word_bill, value) = false) Then
				Me._book_word_bill = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_book_run_bill", DbType:="Int")>  _
	Public Property book_run_bill() As System.Nullable(Of Integer)
		Get
			Return Me._book_run_bill
		End Get
		Set
			If (Me._book_run_bill.Equals(value) = false) Then
				Me._book_run_bill = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_no_run_bill", DbType:="Int")>  _
	Public Property no_run_bill() As System.Nullable(Of Integer)
		Get
			Return Me._no_run_bill
		End Get
		Set
			If (Me._no_run_bill.Equals(value) = false) Then
				Me._no_run_bill = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_book_word_nobill", DbType:="VarChar(1)")>  _
	Public Property book_word_nobill() As String
		Get
			Return Me._book_word_nobill
		End Get
		Set
			If (String.Equals(Me._book_word_nobill, value) = false) Then
				Me._book_word_nobill = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_book_run_nobill", DbType:="Int")>  _
	Public Property book_run_nobill() As System.Nullable(Of Integer)
		Get
			Return Me._book_run_nobill
		End Get
		Set
			If (Me._book_run_nobill.Equals(value) = false) Then
				Me._book_run_nobill = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_no_run_nobill", DbType:="Int")>  _
	Public Property no_run_nobill() As System.Nullable(Of Integer)
		Get
			Return Me._no_run_nobill
		End Get
		Set
			If (Me._no_run_nobill.Equals(value) = false) Then
				Me._no_run_nobill = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.usernames")>  _
Partial Public Class username
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _user_id As Integer
	
	Private _cust_id As String
	
	Private _username As String
	
	Private _password As String
	
	Private _role As String
	
	Private _cust_level As System.Nullable(Of Integer)
	
	Private _active As System.Nullable(Of Char)
	
	Private _halt As System.Nullable(Of Char)
	
	Private _reg_code As String
	
	Private _first_trade As System.Nullable(Of Char)
	
	Private _lock_time As System.Nullable(Of Date)
	
	Private _online As System.Nullable(Of Char)
	
	Private _online_time As System.Nullable(Of Date)
	
	Private _online_id As String
	
	Private _created_date As System.Nullable(Of Date)
	
	Private _created_by As String
	
	Private _modifier_date As System.Nullable(Of Date)
	
	Private _modifier_by As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onuser_idChanging(value As Integer)
    End Sub
    Partial Private Sub Onuser_idChanged()
    End Sub
    Partial Private Sub Oncust_idChanging(value As String)
    End Sub
    Partial Private Sub Oncust_idChanged()
    End Sub
    Partial Private Sub OnusernameChanging(value As String)
    End Sub
    Partial Private Sub OnusernameChanged()
    End Sub
    Partial Private Sub OnpasswordChanging(value As String)
    End Sub
    Partial Private Sub OnpasswordChanged()
    End Sub
    Partial Private Sub OnroleChanging(value As String)
    End Sub
    Partial Private Sub OnroleChanged()
    End Sub
    Partial Private Sub Oncust_levelChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncust_levelChanged()
    End Sub
    Partial Private Sub OnactiveChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnactiveChanged()
    End Sub
    Partial Private Sub OnhaltChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnhaltChanged()
    End Sub
    Partial Private Sub Onreg_codeChanging(value As String)
    End Sub
    Partial Private Sub Onreg_codeChanged()
    End Sub
    Partial Private Sub Onfirst_tradeChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onfirst_tradeChanged()
    End Sub
    Partial Private Sub Onlock_timeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onlock_timeChanged()
    End Sub
    Partial Private Sub OnonlineChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnonlineChanged()
    End Sub
    Partial Private Sub Ononline_timeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ononline_timeChanged()
    End Sub
    Partial Private Sub Ononline_idChanging(value As String)
    End Sub
    Partial Private Sub Ononline_idChanged()
    End Sub
    Partial Private Sub Oncreated_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncreated_dateChanged()
    End Sub
    Partial Private Sub Oncreated_byChanging(value As String)
    End Sub
    Partial Private Sub Oncreated_byChanged()
    End Sub
    Partial Private Sub Onmodifier_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onmodifier_dateChanged()
    End Sub
    Partial Private Sub Onmodifier_byChanging(value As String)
    End Sub
    Partial Private Sub Onmodifier_byChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_user_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property user_id() As Integer
		Get
			Return Me._user_id
		End Get
		Set
			If ((Me._user_id = value)  _
						= false) Then
				Me.Onuser_idChanging(value)
				Me.SendPropertyChanging
				Me._user_id = value
				Me.SendPropertyChanged("user_id")
				Me.Onuser_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cust_id", DbType:="VarChar(5)")>  _
	Public Property cust_id() As String
		Get
			Return Me._cust_id
		End Get
		Set
			If (String.Equals(Me._cust_id, value) = false) Then
				Me.Oncust_idChanging(value)
				Me.SendPropertyChanging
				Me._cust_id = value
				Me.SendPropertyChanged("cust_id")
				Me.Oncust_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_username", DbType:="VarChar(50)")>  _
	Public Property username() As String
		Get
			Return Me._username
		End Get
		Set
			If (String.Equals(Me._username, value) = false) Then
				Me.OnusernameChanging(value)
				Me.SendPropertyChanging
				Me._username = value
				Me.SendPropertyChanged("username")
				Me.OnusernameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_password", DbType:="VarChar(50)")>  _
	Public Property password() As String
		Get
			Return Me._password
		End Get
		Set
			If (String.Equals(Me._password, value) = false) Then
				Me.OnpasswordChanging(value)
				Me.SendPropertyChanging
				Me._password = value
				Me.SendPropertyChanged("password")
				Me.OnpasswordChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_role", DbType:="VarChar(50)")>  _
	Public Property role() As String
		Get
			Return Me._role
		End Get
		Set
			If (String.Equals(Me._role, value) = false) Then
				Me.OnroleChanging(value)
				Me.SendPropertyChanging
				Me._role = value
				Me.SendPropertyChanged("role")
				Me.OnroleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cust_level", DbType:="Int")>  _
	Public Property cust_level() As System.Nullable(Of Integer)
		Get
			Return Me._cust_level
		End Get
		Set
			If (Me._cust_level.Equals(value) = false) Then
				Me.Oncust_levelChanging(value)
				Me.SendPropertyChanging
				Me._cust_level = value
				Me.SendPropertyChanged("cust_level")
				Me.Oncust_levelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_active", DbType:="Char(1)")>  _
	Public Property active() As System.Nullable(Of Char)
		Get
			Return Me._active
		End Get
		Set
			If (Me._active.Equals(value) = false) Then
				Me.OnactiveChanging(value)
				Me.SendPropertyChanging
				Me._active = value
				Me.SendPropertyChanged("active")
				Me.OnactiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_halt", DbType:="Char(1)")>  _
	Public Property halt() As System.Nullable(Of Char)
		Get
			Return Me._halt
		End Get
		Set
			If (Me._halt.Equals(value) = false) Then
				Me.OnhaltChanging(value)
				Me.SendPropertyChanging
				Me._halt = value
				Me.SendPropertyChanged("halt")
				Me.OnhaltChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_reg_code", DbType:="NVarChar(50)")>  _
	Public Property reg_code() As String
		Get
			Return Me._reg_code
		End Get
		Set
			If (String.Equals(Me._reg_code, value) = false) Then
				Me.Onreg_codeChanging(value)
				Me.SendPropertyChanging
				Me._reg_code = value
				Me.SendPropertyChanged("reg_code")
				Me.Onreg_codeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_first_trade", DbType:="Char(1)")>  _
	Public Property first_trade() As System.Nullable(Of Char)
		Get
			Return Me._first_trade
		End Get
		Set
			If (Me._first_trade.Equals(value) = false) Then
				Me.Onfirst_tradeChanging(value)
				Me.SendPropertyChanging
				Me._first_trade = value
				Me.SendPropertyChanged("first_trade")
				Me.Onfirst_tradeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lock_time", DbType:="DateTime")>  _
	Public Property lock_time() As System.Nullable(Of Date)
		Get
			Return Me._lock_time
		End Get
		Set
			If (Me._lock_time.Equals(value) = false) Then
				Me.Onlock_timeChanging(value)
				Me.SendPropertyChanging
				Me._lock_time = value
				Me.SendPropertyChanged("lock_time")
				Me.Onlock_timeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_online", DbType:="Char(1)")>  _
	Public Property online() As System.Nullable(Of Char)
		Get
			Return Me._online
		End Get
		Set
			If (Me._online.Equals(value) = false) Then
				Me.OnonlineChanging(value)
				Me.SendPropertyChanging
				Me._online = value
				Me.SendPropertyChanged("online")
				Me.OnonlineChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_online_time", DbType:="DateTime")>  _
	Public Property online_time() As System.Nullable(Of Date)
		Get
			Return Me._online_time
		End Get
		Set
			If (Me._online_time.Equals(value) = false) Then
				Me.Ononline_timeChanging(value)
				Me.SendPropertyChanging
				Me._online_time = value
				Me.SendPropertyChanged("online_time")
				Me.Ononline_timeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_online_id", DbType:="VarChar(50)")>  _
	Public Property online_id() As String
		Get
			Return Me._online_id
		End Get
		Set
			If (String.Equals(Me._online_id, value) = false) Then
				Me.Ononline_idChanging(value)
				Me.SendPropertyChanging
				Me._online_id = value
				Me.SendPropertyChanged("online_id")
				Me.Ononline_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_created_date", DbType:="DateTime")>  _
	Public Property created_date() As System.Nullable(Of Date)
		Get
			Return Me._created_date
		End Get
		Set
			If (Me._created_date.Equals(value) = false) Then
				Me.Oncreated_dateChanging(value)
				Me.SendPropertyChanging
				Me._created_date = value
				Me.SendPropertyChanged("created_date")
				Me.Oncreated_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_created_by", DbType:="VarChar(10)")>  _
	Public Property created_by() As String
		Get
			Return Me._created_by
		End Get
		Set
			If (String.Equals(Me._created_by, value) = false) Then
				Me.Oncreated_byChanging(value)
				Me.SendPropertyChanging
				Me._created_by = value
				Me.SendPropertyChanged("created_by")
				Me.Oncreated_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modifier_date", DbType:="DateTime")>  _
	Public Property modifier_date() As System.Nullable(Of Date)
		Get
			Return Me._modifier_date
		End Get
		Set
			If (Me._modifier_date.Equals(value) = false) Then
				Me.Onmodifier_dateChanging(value)
				Me.SendPropertyChanging
				Me._modifier_date = value
				Me.SendPropertyChanged("modifier_date")
				Me.Onmodifier_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modifier_by", DbType:="VarChar(10)")>  _
	Public Property modifier_by() As String
		Get
			Return Me._modifier_by
		End Get
		Set
			If (String.Equals(Me._modifier_by, value) = false) Then
				Me.Onmodifier_byChanging(value)
				Me.SendPropertyChanging
				Me._modifier_by = value
				Me.SendPropertyChanged("modifier_by")
				Me.Onmodifier_byChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.cust_list")>  _
Partial Public Class cust_list
	
	Private _No As System.Nullable(Of Integer)
	
	Private _title As String
	
	Private _name As String
	
	Private _lastname As String
	
	Private _bank As String
	
	Private _account_no As String
	
	Private _phone As String
	
	Private _username As String
	
	Private _pwd As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_No", DbType:="Int")>  _
	Public Property No() As System.Nullable(Of Integer)
		Get
			Return Me._No
		End Get
		Set
			If (Me._No.Equals(value) = false) Then
				Me._No = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_title", DbType:="NVarChar(255)")>  _
	Public Property title() As String
		Get
			Return Me._title
		End Get
		Set
			If (String.Equals(Me._title, value) = false) Then
				Me._title = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_name", DbType:="NVarChar(255)")>  _
	Public Property name() As String
		Get
			Return Me._name
		End Get
		Set
			If (String.Equals(Me._name, value) = false) Then
				Me._name = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lastname", DbType:="NVarChar(255)")>  _
	Public Property lastname() As String
		Get
			Return Me._lastname
		End Get
		Set
			If (String.Equals(Me._lastname, value) = false) Then
				Me._lastname = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bank", DbType:="NVarChar(255)")>  _
	Public Property bank() As String
		Get
			Return Me._bank
		End Get
		Set
			If (String.Equals(Me._bank, value) = false) Then
				Me._bank = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_account_no", DbType:="NVarChar(255)")>  _
	Public Property account_no() As String
		Get
			Return Me._account_no
		End Get
		Set
			If (String.Equals(Me._account_no, value) = false) Then
				Me._account_no = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_phone", DbType:="NVarChar(255)")>  _
	Public Property phone() As String
		Get
			Return Me._phone
		End Get
		Set
			If (String.Equals(Me._phone, value) = false) Then
				Me._phone = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_username", DbType:="NVarChar(255)")>  _
	Public Property username() As String
		Get
			Return Me._username
		End Get
		Set
			If (String.Equals(Me._username, value) = false) Then
				Me._username = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pwd", DbType:="NVarChar(255)")>  _
	Public Property pwd() As String
		Get
			Return Me._pwd
		End Get
		Set
			If (String.Equals(Me._pwd, value) = false) Then
				Me._pwd = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.customer")>  _
Partial Public Class customer
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _cust_id As String
	
	Private _cust_refno As String
	
	Private _cust_type_id As System.Nullable(Of Integer)
	
	Private _titlename As String
	
	Private _firstname As String
	
	Private _lastname As String
	
	Private _person_contact As String
	
	Private _bill_address As String
	
	Private _bank1 As String
	
	Private _account_no1 As String
	
	Private _account_name1 As String
	
	Private _account_type1 As String
	
	Private _account_branch1 As String
	
	Private _bank2 As String
	
	Private _account_no2 As String
	
	Private _account_name2 As String
	
	Private _account_type2 As String
	
	Private _account_branch2 As String
	
	Private _bank3 As String
	
	Private _account_no3 As String
	
	Private _account_name3 As String
	
	Private _account_type3 As String
	
	Private _account_branch3 As String
	
	Private _mobile As String
	
	Private _tel As String
	
	Private _fax As String
	
	Private _remark As String
	
	Private _cash_credit As System.Nullable(Of Decimal)
	
	Private _margin As System.Nullable(Of Double)
	
	Private _margin_call As System.Nullable(Of Double)
	
	Private _quan_96 As System.Nullable(Of Decimal)
	
	Private _quan_99N As System.Nullable(Of Decimal)
	
	Private _quan_99L As System.Nullable(Of Decimal)
	
	Private _created_by As String
	
	Private _created_date As System.Nullable(Of Date)
	
	Private _team_id As String
	
	Private _firstname_eng As String
	
	Private _lastname_eng As String
	
	Private _email As String
	
	Private _id_card As String
	
	Private _birthday As System.Nullable(Of Date)
	
	Private _free_margin As System.Nullable(Of Decimal)
	
	Private _trade_limit As System.Nullable(Of Decimal)
	
	Private _margin_unlimit As System.Nullable(Of Boolean)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Oncust_idChanging(value As String)
    End Sub
    Partial Private Sub Oncust_idChanged()
    End Sub
    Partial Private Sub Oncust_refnoChanging(value As String)
    End Sub
    Partial Private Sub Oncust_refnoChanged()
    End Sub
    Partial Private Sub Oncust_type_idChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Oncust_type_idChanged()
    End Sub
    Partial Private Sub OntitlenameChanging(value As String)
    End Sub
    Partial Private Sub OntitlenameChanged()
    End Sub
    Partial Private Sub OnfirstnameChanging(value As String)
    End Sub
    Partial Private Sub OnfirstnameChanged()
    End Sub
    Partial Private Sub OnlastnameChanging(value As String)
    End Sub
    Partial Private Sub OnlastnameChanged()
    End Sub
    Partial Private Sub Onperson_contactChanging(value As String)
    End Sub
    Partial Private Sub Onperson_contactChanged()
    End Sub
    Partial Private Sub Onbill_addressChanging(value As String)
    End Sub
    Partial Private Sub Onbill_addressChanged()
    End Sub
    Partial Private Sub Onbank1Changing(value As String)
    End Sub
    Partial Private Sub Onbank1Changed()
    End Sub
    Partial Private Sub Onaccount_no1Changing(value As String)
    End Sub
    Partial Private Sub Onaccount_no1Changed()
    End Sub
    Partial Private Sub Onaccount_name1Changing(value As String)
    End Sub
    Partial Private Sub Onaccount_name1Changed()
    End Sub
    Partial Private Sub Onaccount_type1Changing(value As String)
    End Sub
    Partial Private Sub Onaccount_type1Changed()
    End Sub
    Partial Private Sub Onaccount_branch1Changing(value As String)
    End Sub
    Partial Private Sub Onaccount_branch1Changed()
    End Sub
    Partial Private Sub Onbank2Changing(value As String)
    End Sub
    Partial Private Sub Onbank2Changed()
    End Sub
    Partial Private Sub Onaccount_no2Changing(value As String)
    End Sub
    Partial Private Sub Onaccount_no2Changed()
    End Sub
    Partial Private Sub Onaccount_name2Changing(value As String)
    End Sub
    Partial Private Sub Onaccount_name2Changed()
    End Sub
    Partial Private Sub Onaccount_type2Changing(value As String)
    End Sub
    Partial Private Sub Onaccount_type2Changed()
    End Sub
    Partial Private Sub Onaccount_branch2Changing(value As String)
    End Sub
    Partial Private Sub Onaccount_branch2Changed()
    End Sub
    Partial Private Sub Onbank3Changing(value As String)
    End Sub
    Partial Private Sub Onbank3Changed()
    End Sub
    Partial Private Sub Onaccount_no3Changing(value As String)
    End Sub
    Partial Private Sub Onaccount_no3Changed()
    End Sub
    Partial Private Sub Onaccount_name3Changing(value As String)
    End Sub
    Partial Private Sub Onaccount_name3Changed()
    End Sub
    Partial Private Sub Onaccount_type3Changing(value As String)
    End Sub
    Partial Private Sub Onaccount_type3Changed()
    End Sub
    Partial Private Sub Onaccount_branch3Changing(value As String)
    End Sub
    Partial Private Sub Onaccount_branch3Changed()
    End Sub
    Partial Private Sub OnmobileChanging(value As String)
    End Sub
    Partial Private Sub OnmobileChanged()
    End Sub
    Partial Private Sub OntelChanging(value As String)
    End Sub
    Partial Private Sub OntelChanged()
    End Sub
    Partial Private Sub OnfaxChanging(value As String)
    End Sub
    Partial Private Sub OnfaxChanged()
    End Sub
    Partial Private Sub OnremarkChanging(value As String)
    End Sub
    Partial Private Sub OnremarkChanged()
    End Sub
    Partial Private Sub Oncash_creditChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncash_creditChanged()
    End Sub
    Partial Private Sub OnmarginChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnmarginChanged()
    End Sub
    Partial Private Sub Onmargin_callChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub Onmargin_callChanged()
    End Sub
    Partial Private Sub Onquan_96Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onquan_96Changed()
    End Sub
    Partial Private Sub Onquan_99NChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onquan_99NChanged()
    End Sub
    Partial Private Sub Onquan_99LChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onquan_99LChanged()
    End Sub
    Partial Private Sub Oncreated_byChanging(value As String)
    End Sub
    Partial Private Sub Oncreated_byChanged()
    End Sub
    Partial Private Sub Oncreated_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncreated_dateChanged()
    End Sub
    Partial Private Sub Onteam_idChanging(value As String)
    End Sub
    Partial Private Sub Onteam_idChanged()
    End Sub
    Partial Private Sub Onfirstname_engChanging(value As String)
    End Sub
    Partial Private Sub Onfirstname_engChanged()
    End Sub
    Partial Private Sub Onlastname_engChanging(value As String)
    End Sub
    Partial Private Sub Onlastname_engChanged()
    End Sub
    Partial Private Sub OnemailChanging(value As String)
    End Sub
    Partial Private Sub OnemailChanged()
    End Sub
    Partial Private Sub Onid_cardChanging(value As String)
    End Sub
    Partial Private Sub Onid_cardChanged()
    End Sub
    Partial Private Sub OnbirthdayChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnbirthdayChanged()
    End Sub
    Partial Private Sub Onfree_marginChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onfree_marginChanged()
    End Sub
    Partial Private Sub Ontrade_limitChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ontrade_limitChanged()
    End Sub
    Partial Private Sub Onmargin_unlimitChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub Onmargin_unlimitChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cust_id", DbType:="VarChar(5) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property cust_id() As String
		Get
			Return Me._cust_id
		End Get
		Set
			If (String.Equals(Me._cust_id, value) = false) Then
				Me.Oncust_idChanging(value)
				Me.SendPropertyChanging
				Me._cust_id = value
				Me.SendPropertyChanged("cust_id")
				Me.Oncust_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cust_refno", DbType:="VarChar(50)")>  _
	Public Property cust_refno() As String
		Get
			Return Me._cust_refno
		End Get
		Set
			If (String.Equals(Me._cust_refno, value) = false) Then
				Me.Oncust_refnoChanging(value)
				Me.SendPropertyChanging
				Me._cust_refno = value
				Me.SendPropertyChanged("cust_refno")
				Me.Oncust_refnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cust_type_id", DbType:="Int")>  _
	Public Property cust_type_id() As System.Nullable(Of Integer)
		Get
			Return Me._cust_type_id
		End Get
		Set
			If (Me._cust_type_id.Equals(value) = false) Then
				Me.Oncust_type_idChanging(value)
				Me.SendPropertyChanging
				Me._cust_type_id = value
				Me.SendPropertyChanged("cust_type_id")
				Me.Oncust_type_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_titlename", DbType:="VarChar(50)")>  _
	Public Property titlename() As String
		Get
			Return Me._titlename
		End Get
		Set
			If (String.Equals(Me._titlename, value) = false) Then
				Me.OntitlenameChanging(value)
				Me.SendPropertyChanging
				Me._titlename = value
				Me.SendPropertyChanged("titlename")
				Me.OntitlenameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_firstname", DbType:="VarChar(50)")>  _
	Public Property firstname() As String
		Get
			Return Me._firstname
		End Get
		Set
			If (String.Equals(Me._firstname, value) = false) Then
				Me.OnfirstnameChanging(value)
				Me.SendPropertyChanging
				Me._firstname = value
				Me.SendPropertyChanged("firstname")
				Me.OnfirstnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lastname", DbType:="VarChar(50)")>  _
	Public Property lastname() As String
		Get
			Return Me._lastname
		End Get
		Set
			If (String.Equals(Me._lastname, value) = false) Then
				Me.OnlastnameChanging(value)
				Me.SendPropertyChanging
				Me._lastname = value
				Me.SendPropertyChanged("lastname")
				Me.OnlastnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_person_contact", DbType:="VarChar(50)")>  _
	Public Property person_contact() As String
		Get
			Return Me._person_contact
		End Get
		Set
			If (String.Equals(Me._person_contact, value) = false) Then
				Me.Onperson_contactChanging(value)
				Me.SendPropertyChanging
				Me._person_contact = value
				Me.SendPropertyChanged("person_contact")
				Me.Onperson_contactChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bill_address", DbType:="VarChar(500)")>  _
	Public Property bill_address() As String
		Get
			Return Me._bill_address
		End Get
		Set
			If (String.Equals(Me._bill_address, value) = false) Then
				Me.Onbill_addressChanging(value)
				Me.SendPropertyChanging
				Me._bill_address = value
				Me.SendPropertyChanged("bill_address")
				Me.Onbill_addressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bank1", DbType:="VarChar(50)")>  _
	Public Property bank1() As String
		Get
			Return Me._bank1
		End Get
		Set
			If (String.Equals(Me._bank1, value) = false) Then
				Me.Onbank1Changing(value)
				Me.SendPropertyChanging
				Me._bank1 = value
				Me.SendPropertyChanged("bank1")
				Me.Onbank1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_account_no1", DbType:="VarChar(50)")>  _
	Public Property account_no1() As String
		Get
			Return Me._account_no1
		End Get
		Set
			If (String.Equals(Me._account_no1, value) = false) Then
				Me.Onaccount_no1Changing(value)
				Me.SendPropertyChanging
				Me._account_no1 = value
				Me.SendPropertyChanged("account_no1")
				Me.Onaccount_no1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_account_name1", DbType:="VarChar(50)")>  _
	Public Property account_name1() As String
		Get
			Return Me._account_name1
		End Get
		Set
			If (String.Equals(Me._account_name1, value) = false) Then
				Me.Onaccount_name1Changing(value)
				Me.SendPropertyChanging
				Me._account_name1 = value
				Me.SendPropertyChanged("account_name1")
				Me.Onaccount_name1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_account_type1", DbType:="VarChar(50)")>  _
	Public Property account_type1() As String
		Get
			Return Me._account_type1
		End Get
		Set
			If (String.Equals(Me._account_type1, value) = false) Then
				Me.Onaccount_type1Changing(value)
				Me.SendPropertyChanging
				Me._account_type1 = value
				Me.SendPropertyChanged("account_type1")
				Me.Onaccount_type1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_account_branch1", DbType:="VarChar(50)")>  _
	Public Property account_branch1() As String
		Get
			Return Me._account_branch1
		End Get
		Set
			If (String.Equals(Me._account_branch1, value) = false) Then
				Me.Onaccount_branch1Changing(value)
				Me.SendPropertyChanging
				Me._account_branch1 = value
				Me.SendPropertyChanged("account_branch1")
				Me.Onaccount_branch1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bank2", DbType:="VarChar(50)")>  _
	Public Property bank2() As String
		Get
			Return Me._bank2
		End Get
		Set
			If (String.Equals(Me._bank2, value) = false) Then
				Me.Onbank2Changing(value)
				Me.SendPropertyChanging
				Me._bank2 = value
				Me.SendPropertyChanged("bank2")
				Me.Onbank2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_account_no2", DbType:="VarChar(50)")>  _
	Public Property account_no2() As String
		Get
			Return Me._account_no2
		End Get
		Set
			If (String.Equals(Me._account_no2, value) = false) Then
				Me.Onaccount_no2Changing(value)
				Me.SendPropertyChanging
				Me._account_no2 = value
				Me.SendPropertyChanged("account_no2")
				Me.Onaccount_no2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_account_name2", DbType:="VarChar(50)")>  _
	Public Property account_name2() As String
		Get
			Return Me._account_name2
		End Get
		Set
			If (String.Equals(Me._account_name2, value) = false) Then
				Me.Onaccount_name2Changing(value)
				Me.SendPropertyChanging
				Me._account_name2 = value
				Me.SendPropertyChanged("account_name2")
				Me.Onaccount_name2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_account_type2", DbType:="VarChar(50)")>  _
	Public Property account_type2() As String
		Get
			Return Me._account_type2
		End Get
		Set
			If (String.Equals(Me._account_type2, value) = false) Then
				Me.Onaccount_type2Changing(value)
				Me.SendPropertyChanging
				Me._account_type2 = value
				Me.SendPropertyChanged("account_type2")
				Me.Onaccount_type2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_account_branch2", DbType:="VarChar(50)")>  _
	Public Property account_branch2() As String
		Get
			Return Me._account_branch2
		End Get
		Set
			If (String.Equals(Me._account_branch2, value) = false) Then
				Me.Onaccount_branch2Changing(value)
				Me.SendPropertyChanging
				Me._account_branch2 = value
				Me.SendPropertyChanged("account_branch2")
				Me.Onaccount_branch2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bank3", DbType:="VarChar(50)")>  _
	Public Property bank3() As String
		Get
			Return Me._bank3
		End Get
		Set
			If (String.Equals(Me._bank3, value) = false) Then
				Me.Onbank3Changing(value)
				Me.SendPropertyChanging
				Me._bank3 = value
				Me.SendPropertyChanged("bank3")
				Me.Onbank3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_account_no3", DbType:="VarChar(50)")>  _
	Public Property account_no3() As String
		Get
			Return Me._account_no3
		End Get
		Set
			If (String.Equals(Me._account_no3, value) = false) Then
				Me.Onaccount_no3Changing(value)
				Me.SendPropertyChanging
				Me._account_no3 = value
				Me.SendPropertyChanged("account_no3")
				Me.Onaccount_no3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_account_name3", DbType:="VarChar(50)")>  _
	Public Property account_name3() As String
		Get
			Return Me._account_name3
		End Get
		Set
			If (String.Equals(Me._account_name3, value) = false) Then
				Me.Onaccount_name3Changing(value)
				Me.SendPropertyChanging
				Me._account_name3 = value
				Me.SendPropertyChanged("account_name3")
				Me.Onaccount_name3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_account_type3", DbType:="VarChar(50)")>  _
	Public Property account_type3() As String
		Get
			Return Me._account_type3
		End Get
		Set
			If (String.Equals(Me._account_type3, value) = false) Then
				Me.Onaccount_type3Changing(value)
				Me.SendPropertyChanging
				Me._account_type3 = value
				Me.SendPropertyChanged("account_type3")
				Me.Onaccount_type3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_account_branch3", DbType:="VarChar(50)")>  _
	Public Property account_branch3() As String
		Get
			Return Me._account_branch3
		End Get
		Set
			If (String.Equals(Me._account_branch3, value) = false) Then
				Me.Onaccount_branch3Changing(value)
				Me.SendPropertyChanging
				Me._account_branch3 = value
				Me.SendPropertyChanged("account_branch3")
				Me.Onaccount_branch3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mobile", DbType:="VarChar(50)")>  _
	Public Property mobile() As String
		Get
			Return Me._mobile
		End Get
		Set
			If (String.Equals(Me._mobile, value) = false) Then
				Me.OnmobileChanging(value)
				Me.SendPropertyChanging
				Me._mobile = value
				Me.SendPropertyChanged("mobile")
				Me.OnmobileChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel", DbType:="VarChar(50)")>  _
	Public Property tel() As String
		Get
			Return Me._tel
		End Get
		Set
			If (String.Equals(Me._tel, value) = false) Then
				Me.OntelChanging(value)
				Me.SendPropertyChanging
				Me._tel = value
				Me.SendPropertyChanged("tel")
				Me.OntelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fax", DbType:="VarChar(50)")>  _
	Public Property fax() As String
		Get
			Return Me._fax
		End Get
		Set
			If (String.Equals(Me._fax, value) = false) Then
				Me.OnfaxChanging(value)
				Me.SendPropertyChanging
				Me._fax = value
				Me.SendPropertyChanged("fax")
				Me.OnfaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_remark", DbType:="VarChar(1000)")>  _
	Public Property remark() As String
		Get
			Return Me._remark
		End Get
		Set
			If (String.Equals(Me._remark, value) = false) Then
				Me.OnremarkChanging(value)
				Me.SendPropertyChanging
				Me._remark = value
				Me.SendPropertyChanged("remark")
				Me.OnremarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash_credit", DbType:="Decimal(18,2)")>  _
	Public Property cash_credit() As System.Nullable(Of Decimal)
		Get
			Return Me._cash_credit
		End Get
		Set
			If (Me._cash_credit.Equals(value) = false) Then
				Me.Oncash_creditChanging(value)
				Me.SendPropertyChanging
				Me._cash_credit = value
				Me.SendPropertyChanged("cash_credit")
				Me.Oncash_creditChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_margin", DbType:="Float")>  _
	Public Property margin() As System.Nullable(Of Double)
		Get
			Return Me._margin
		End Get
		Set
			If (Me._margin.Equals(value) = false) Then
				Me.OnmarginChanging(value)
				Me.SendPropertyChanging
				Me._margin = value
				Me.SendPropertyChanged("margin")
				Me.OnmarginChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_margin_call", DbType:="Float")>  _
	Public Property margin_call() As System.Nullable(Of Double)
		Get
			Return Me._margin_call
		End Get
		Set
			If (Me._margin_call.Equals(value) = false) Then
				Me.Onmargin_callChanging(value)
				Me.SendPropertyChanging
				Me._margin_call = value
				Me.SendPropertyChanged("margin_call")
				Me.Onmargin_callChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quan_96", DbType:="Decimal(18,5)")>  _
	Public Property quan_96() As System.Nullable(Of Decimal)
		Get
			Return Me._quan_96
		End Get
		Set
			If (Me._quan_96.Equals(value) = false) Then
				Me.Onquan_96Changing(value)
				Me.SendPropertyChanging
				Me._quan_96 = value
				Me.SendPropertyChanged("quan_96")
				Me.Onquan_96Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quan_99N", DbType:="Decimal(18,5)")>  _
	Public Property quan_99N() As System.Nullable(Of Decimal)
		Get
			Return Me._quan_99N
		End Get
		Set
			If (Me._quan_99N.Equals(value) = false) Then
				Me.Onquan_99NChanging(value)
				Me.SendPropertyChanging
				Me._quan_99N = value
				Me.SendPropertyChanged("quan_99N")
				Me.Onquan_99NChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quan_99L", DbType:="Decimal(18,5)")>  _
	Public Property quan_99L() As System.Nullable(Of Decimal)
		Get
			Return Me._quan_99L
		End Get
		Set
			If (Me._quan_99L.Equals(value) = false) Then
				Me.Onquan_99LChanging(value)
				Me.SendPropertyChanging
				Me._quan_99L = value
				Me.SendPropertyChanged("quan_99L")
				Me.Onquan_99LChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_created_by", DbType:="VarChar(50)")>  _
	Public Property created_by() As String
		Get
			Return Me._created_by
		End Get
		Set
			If (String.Equals(Me._created_by, value) = false) Then
				Me.Oncreated_byChanging(value)
				Me.SendPropertyChanging
				Me._created_by = value
				Me.SendPropertyChanged("created_by")
				Me.Oncreated_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_created_date", DbType:="DateTime")>  _
	Public Property created_date() As System.Nullable(Of Date)
		Get
			Return Me._created_date
		End Get
		Set
			If (Me._created_date.Equals(value) = false) Then
				Me.Oncreated_dateChanging(value)
				Me.SendPropertyChanging
				Me._created_date = value
				Me.SendPropertyChanged("created_date")
				Me.Oncreated_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_team_id", DbType:="VarChar(50)")>  _
	Public Property team_id() As String
		Get
			Return Me._team_id
		End Get
		Set
			If (String.Equals(Me._team_id, value) = false) Then
				Me.Onteam_idChanging(value)
				Me.SendPropertyChanging
				Me._team_id = value
				Me.SendPropertyChanged("team_id")
				Me.Onteam_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_firstname_eng", DbType:="VarChar(50)")>  _
	Public Property firstname_eng() As String
		Get
			Return Me._firstname_eng
		End Get
		Set
			If (String.Equals(Me._firstname_eng, value) = false) Then
				Me.Onfirstname_engChanging(value)
				Me.SendPropertyChanging
				Me._firstname_eng = value
				Me.SendPropertyChanged("firstname_eng")
				Me.Onfirstname_engChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lastname_eng", DbType:="VarChar(50)")>  _
	Public Property lastname_eng() As String
		Get
			Return Me._lastname_eng
		End Get
		Set
			If (String.Equals(Me._lastname_eng, value) = false) Then
				Me.Onlastname_engChanging(value)
				Me.SendPropertyChanging
				Me._lastname_eng = value
				Me.SendPropertyChanged("lastname_eng")
				Me.Onlastname_engChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_email", DbType:="VarChar(50)")>  _
	Public Property email() As String
		Get
			Return Me._email
		End Get
		Set
			If (String.Equals(Me._email, value) = false) Then
				Me.OnemailChanging(value)
				Me.SendPropertyChanging
				Me._email = value
				Me.SendPropertyChanged("email")
				Me.OnemailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id_card", DbType:="VarChar(50)")>  _
	Public Property id_card() As String
		Get
			Return Me._id_card
		End Get
		Set
			If (String.Equals(Me._id_card, value) = false) Then
				Me.Onid_cardChanging(value)
				Me.SendPropertyChanging
				Me._id_card = value
				Me.SendPropertyChanged("id_card")
				Me.Onid_cardChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_birthday", DbType:="DateTime")>  _
	Public Property birthday() As System.Nullable(Of Date)
		Get
			Return Me._birthday
		End Get
		Set
			If (Me._birthday.Equals(value) = false) Then
				Me.OnbirthdayChanging(value)
				Me.SendPropertyChanging
				Me._birthday = value
				Me.SendPropertyChanged("birthday")
				Me.OnbirthdayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_free_margin", DbType:="Decimal(18,0)")>  _
	Public Property free_margin() As System.Nullable(Of Decimal)
		Get
			Return Me._free_margin
		End Get
		Set
			If (Me._free_margin.Equals(value) = false) Then
				Me.Onfree_marginChanging(value)
				Me.SendPropertyChanging
				Me._free_margin = value
				Me.SendPropertyChanged("free_margin")
				Me.Onfree_marginChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trade_limit", DbType:="Decimal(18,0)")>  _
	Public Property trade_limit() As System.Nullable(Of Decimal)
		Get
			Return Me._trade_limit
		End Get
		Set
			If (Me._trade_limit.Equals(value) = false) Then
				Me.Ontrade_limitChanging(value)
				Me.SendPropertyChanging
				Me._trade_limit = value
				Me.SendPropertyChanged("trade_limit")
				Me.Ontrade_limitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_margin_unlimit", DbType:="Bit")>  _
	Public Property margin_unlimit() As System.Nullable(Of Boolean)
		Get
			Return Me._margin_unlimit
		End Get
		Set
			If (Me._margin_unlimit.Equals(value) = false) Then
				Me.Onmargin_unlimitChanging(value)
				Me.SendPropertyChanging
				Me._margin_unlimit = value
				Me.SendPropertyChanged("margin_unlimit")
				Me.Onmargin_unlimitChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.customer_trans")>  _
Partial Public Class customer_tran
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _cust_tran_id As Integer
	
	Private _cust_id As String
	
	Private _row As System.Nullable(Of Integer)
	
	Private _datetime As System.Nullable(Of Date)
	
	Private _cash_type As String
	
	Private _type As String
	
	Private _bill_no As String
	
	Private _gold_type_id As String
	
	Private _quantity As System.Nullable(Of Decimal)
	
	Private _amount As System.Nullable(Of Decimal)
	
	Private _price As System.Nullable(Of Decimal)
	
	Private _remark As String
	
	Private _created_by As String
	
	Private _created_date As System.Nullable(Of Date)
	
	Private _ticket_refno As String
	
	Private _pre As System.Nullable(Of Char)
	
	Private _ref_no As String
	
	Private _payment As String
	
	Private _payment_bank As String
	
	Private _payment_duedate As System.Nullable(Of Date)
	
	Private _payment_cheq_no As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Oncust_tran_idChanging(value As Integer)
    End Sub
    Partial Private Sub Oncust_tran_idChanged()
    End Sub
    Partial Private Sub Oncust_idChanging(value As String)
    End Sub
    Partial Private Sub Oncust_idChanged()
    End Sub
    Partial Private Sub OnrowChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnrowChanged()
    End Sub
    Partial Private Sub OndatetimeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndatetimeChanged()
    End Sub
    Partial Private Sub Oncash_typeChanging(value As String)
    End Sub
    Partial Private Sub Oncash_typeChanged()
    End Sub
    Partial Private Sub OntypeChanging(value As String)
    End Sub
    Partial Private Sub OntypeChanged()
    End Sub
    Partial Private Sub Onbill_noChanging(value As String)
    End Sub
    Partial Private Sub Onbill_noChanged()
    End Sub
    Partial Private Sub Ongold_type_idChanging(value As String)
    End Sub
    Partial Private Sub Ongold_type_idChanged()
    End Sub
    Partial Private Sub OnquantityChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnquantityChanged()
    End Sub
    Partial Private Sub OnamountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnamountChanged()
    End Sub
    Partial Private Sub OnpriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnpriceChanged()
    End Sub
    Partial Private Sub OnremarkChanging(value As String)
    End Sub
    Partial Private Sub OnremarkChanged()
    End Sub
    Partial Private Sub Oncreated_byChanging(value As String)
    End Sub
    Partial Private Sub Oncreated_byChanged()
    End Sub
    Partial Private Sub Oncreated_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncreated_dateChanged()
    End Sub
    Partial Private Sub Onticket_refnoChanging(value As String)
    End Sub
    Partial Private Sub Onticket_refnoChanged()
    End Sub
    Partial Private Sub OnpreChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnpreChanged()
    End Sub
    Partial Private Sub Onref_noChanging(value As String)
    End Sub
    Partial Private Sub Onref_noChanged()
    End Sub
    Partial Private Sub OnpaymentChanging(value As String)
    End Sub
    Partial Private Sub OnpaymentChanged()
    End Sub
    Partial Private Sub Onpayment_bankChanging(value As String)
    End Sub
    Partial Private Sub Onpayment_bankChanged()
    End Sub
    Partial Private Sub Onpayment_duedateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onpayment_duedateChanged()
    End Sub
    Partial Private Sub Onpayment_cheq_noChanging(value As String)
    End Sub
    Partial Private Sub Onpayment_cheq_noChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cust_tran_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property cust_tran_id() As Integer
		Get
			Return Me._cust_tran_id
		End Get
		Set
			If ((Me._cust_tran_id = value)  _
						= false) Then
				Me.Oncust_tran_idChanging(value)
				Me.SendPropertyChanging
				Me._cust_tran_id = value
				Me.SendPropertyChanged("cust_tran_id")
				Me.Oncust_tran_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cust_id", DbType:="VarChar(5)")>  _
	Public Property cust_id() As String
		Get
			Return Me._cust_id
		End Get
		Set
			If (String.Equals(Me._cust_id, value) = false) Then
				Me.Oncust_idChanging(value)
				Me.SendPropertyChanging
				Me._cust_id = value
				Me.SendPropertyChanged("cust_id")
				Me.Oncust_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_row", DbType:="Int")>  _
	Public Property row() As System.Nullable(Of Integer)
		Get
			Return Me._row
		End Get
		Set
			If (Me._row.Equals(value) = false) Then
				Me.OnrowChanging(value)
				Me.SendPropertyChanging
				Me._row = value
				Me.SendPropertyChanged("row")
				Me.OnrowChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_datetime", DbType:="DateTime")>  _
	Public Property datetime() As System.Nullable(Of Date)
		Get
			Return Me._datetime
		End Get
		Set
			If (Me._datetime.Equals(value) = false) Then
				Me.OndatetimeChanging(value)
				Me.SendPropertyChanging
				Me._datetime = value
				Me.SendPropertyChanged("datetime")
				Me.OndatetimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash_type", DbType:="VarChar(10)")>  _
	Public Property cash_type() As String
		Get
			Return Me._cash_type
		End Get
		Set
			If (String.Equals(Me._cash_type, value) = false) Then
				Me.Oncash_typeChanging(value)
				Me.SendPropertyChanging
				Me._cash_type = value
				Me.SendPropertyChanged("cash_type")
				Me.Oncash_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_type", DbType:="VarChar(50)")>  _
	Public Property type() As String
		Get
			Return Me._type
		End Get
		Set
			If (String.Equals(Me._type, value) = false) Then
				Me.OntypeChanging(value)
				Me.SendPropertyChanging
				Me._type = value
				Me.SendPropertyChanged("type")
				Me.OntypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bill_no", DbType:="VarChar(50)")>  _
	Public Property bill_no() As String
		Get
			Return Me._bill_no
		End Get
		Set
			If (String.Equals(Me._bill_no, value) = false) Then
				Me.Onbill_noChanging(value)
				Me.SendPropertyChanging
				Me._bill_no = value
				Me.SendPropertyChanged("bill_no")
				Me.Onbill_noChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_type_id", DbType:="VarChar(10)")>  _
	Public Property gold_type_id() As String
		Get
			Return Me._gold_type_id
		End Get
		Set
			If (String.Equals(Me._gold_type_id, value) = false) Then
				Me.Ongold_type_idChanging(value)
				Me.SendPropertyChanging
				Me._gold_type_id = value
				Me.SendPropertyChanged("gold_type_id")
				Me.Ongold_type_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quantity", DbType:="Decimal(18,3)")>  _
	Public Property quantity() As System.Nullable(Of Decimal)
		Get
			Return Me._quantity
		End Get
		Set
			If (Me._quantity.Equals(value) = false) Then
				Me.OnquantityChanging(value)
				Me.SendPropertyChanging
				Me._quantity = value
				Me.SendPropertyChanged("quantity")
				Me.OnquantityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amount", DbType:="Decimal(18,2)")>  _
	Public Property amount() As System.Nullable(Of Decimal)
		Get
			Return Me._amount
		End Get
		Set
			If (Me._amount.Equals(value) = false) Then
				Me.OnamountChanging(value)
				Me.SendPropertyChanging
				Me._amount = value
				Me.SendPropertyChanged("amount")
				Me.OnamountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_price", DbType:="Decimal(18,2)")>  _
	Public Property price() As System.Nullable(Of Decimal)
		Get
			Return Me._price
		End Get
		Set
			If (Me._price.Equals(value) = false) Then
				Me.OnpriceChanging(value)
				Me.SendPropertyChanging
				Me._price = value
				Me.SendPropertyChanged("price")
				Me.OnpriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_remark", DbType:="VarChar(5000)")>  _
	Public Property remark() As String
		Get
			Return Me._remark
		End Get
		Set
			If (String.Equals(Me._remark, value) = false) Then
				Me.OnremarkChanging(value)
				Me.SendPropertyChanging
				Me._remark = value
				Me.SendPropertyChanged("remark")
				Me.OnremarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_created_by", DbType:="VarChar(10)")>  _
	Public Property created_by() As String
		Get
			Return Me._created_by
		End Get
		Set
			If (String.Equals(Me._created_by, value) = false) Then
				Me.Oncreated_byChanging(value)
				Me.SendPropertyChanging
				Me._created_by = value
				Me.SendPropertyChanged("created_by")
				Me.Oncreated_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_created_date", DbType:="DateTime")>  _
	Public Property created_date() As System.Nullable(Of Date)
		Get
			Return Me._created_date
		End Get
		Set
			If (Me._created_date.Equals(value) = false) Then
				Me.Oncreated_dateChanging(value)
				Me.SendPropertyChanging
				Me._created_date = value
				Me.SendPropertyChanged("created_date")
				Me.Oncreated_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ticket_refno", DbType:="VarChar(20)")>  _
	Public Property ticket_refno() As String
		Get
			Return Me._ticket_refno
		End Get
		Set
			If (String.Equals(Me._ticket_refno, value) = false) Then
				Me.Onticket_refnoChanging(value)
				Me.SendPropertyChanging
				Me._ticket_refno = value
				Me.SendPropertyChanged("ticket_refno")
				Me.Onticket_refnoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pre", DbType:="NChar(1)")>  _
	Public Property pre() As System.Nullable(Of Char)
		Get
			Return Me._pre
		End Get
		Set
			If (Me._pre.Equals(value) = false) Then
				Me.OnpreChanging(value)
				Me.SendPropertyChanging
				Me._pre = value
				Me.SendPropertyChanged("pre")
				Me.OnpreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ref_no", DbType:="VarChar(20)")>  _
	Public Property ref_no() As String
		Get
			Return Me._ref_no
		End Get
		Set
			If (String.Equals(Me._ref_no, value) = false) Then
				Me.Onref_noChanging(value)
				Me.SendPropertyChanging
				Me._ref_no = value
				Me.SendPropertyChanged("ref_no")
				Me.Onref_noChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment", DbType:="VarChar(50)")>  _
	Public Property payment() As String
		Get
			Return Me._payment
		End Get
		Set
			If (String.Equals(Me._payment, value) = false) Then
				Me.OnpaymentChanging(value)
				Me.SendPropertyChanging
				Me._payment = value
				Me.SendPropertyChanged("payment")
				Me.OnpaymentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_bank", DbType:="VarChar(50)")>  _
	Public Property payment_bank() As String
		Get
			Return Me._payment_bank
		End Get
		Set
			If (String.Equals(Me._payment_bank, value) = false) Then
				Me.Onpayment_bankChanging(value)
				Me.SendPropertyChanging
				Me._payment_bank = value
				Me.SendPropertyChanged("payment_bank")
				Me.Onpayment_bankChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_duedate", DbType:="DateTime")>  _
	Public Property payment_duedate() As System.Nullable(Of Date)
		Get
			Return Me._payment_duedate
		End Get
		Set
			If (Me._payment_duedate.Equals(value) = false) Then
				Me.Onpayment_duedateChanging(value)
				Me.SendPropertyChanging
				Me._payment_duedate = value
				Me.SendPropertyChanged("payment_duedate")
				Me.Onpayment_duedateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_cheq_no", DbType:="VarChar(50)")>  _
	Public Property payment_cheq_no() As String
		Get
			Return Me._payment_cheq_no
		End Get
		Set
			If (String.Equals(Me._payment_cheq_no, value) = false) Then
				Me.Onpayment_cheq_noChanging(value)
				Me.SendPropertyChanging
				Me._payment_cheq_no = value
				Me.SendPropertyChanged("payment_cheq_no")
				Me.Onpayment_cheq_noChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.actual")>  _
Partial Public Class actual
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _actual_id As Integer
	
	Private _asset_id As System.Nullable(Of Integer)
	
	Private _ref_no As String
	
	Private _cust_id As String
	
	Private _asset_type As String
	
	Private _created_by As String
	
	Private _datetime As System.Nullable(Of Date)
	
	Private _purity As String
	
	Private _quantity As System.Nullable(Of Decimal)
	
	Private _amount As System.Nullable(Of Decimal)
	
	Private _status_id As String
	
	Private _before_status_id As String
	
	Private _status_name As String
	
	Private _note As String
	
	Private _type As String
	
	Private _order_type As String
	
	Private _price_base As System.Nullable(Of Decimal)
	
	Private _G96_base As System.Nullable(Of Decimal)
	
	Private _G96G_base As System.Nullable(Of Decimal)
	
	Private _G99_base As System.Nullable(Of Decimal)
	
	Private _payment As String
	
	Private _cash As System.Nullable(Of Decimal)
	
	Private _trans As System.Nullable(Of Decimal)
	
	Private _cheq As System.Nullable(Of Decimal)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onactual_idChanging(value As Integer)
    End Sub
    Partial Private Sub Onactual_idChanged()
    End Sub
    Partial Private Sub Onasset_idChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onasset_idChanged()
    End Sub
    Partial Private Sub Onref_noChanging(value As String)
    End Sub
    Partial Private Sub Onref_noChanged()
    End Sub
    Partial Private Sub Oncust_idChanging(value As String)
    End Sub
    Partial Private Sub Oncust_idChanged()
    End Sub
    Partial Private Sub Onasset_typeChanging(value As String)
    End Sub
    Partial Private Sub Onasset_typeChanged()
    End Sub
    Partial Private Sub Oncreated_byChanging(value As String)
    End Sub
    Partial Private Sub Oncreated_byChanged()
    End Sub
    Partial Private Sub OndatetimeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndatetimeChanged()
    End Sub
    Partial Private Sub OnpurityChanging(value As String)
    End Sub
    Partial Private Sub OnpurityChanged()
    End Sub
    Partial Private Sub OnquantityChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnquantityChanged()
    End Sub
    Partial Private Sub OnamountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnamountChanged()
    End Sub
    Partial Private Sub Onstatus_idChanging(value As String)
    End Sub
    Partial Private Sub Onstatus_idChanged()
    End Sub
    Partial Private Sub Onbefore_status_idChanging(value As String)
    End Sub
    Partial Private Sub Onbefore_status_idChanged()
    End Sub
    Partial Private Sub Onstatus_nameChanging(value As String)
    End Sub
    Partial Private Sub Onstatus_nameChanged()
    End Sub
    Partial Private Sub OnnoteChanging(value As String)
    End Sub
    Partial Private Sub OnnoteChanged()
    End Sub
    Partial Private Sub OntypeChanging(value As String)
    End Sub
    Partial Private Sub OntypeChanged()
    End Sub
    Partial Private Sub Onorder_typeChanging(value As String)
    End Sub
    Partial Private Sub Onorder_typeChanged()
    End Sub
    Partial Private Sub Onprice_baseChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onprice_baseChanged()
    End Sub
    Partial Private Sub OnG96_baseChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnG96_baseChanged()
    End Sub
    Partial Private Sub OnG96G_baseChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnG96G_baseChanged()
    End Sub
    Partial Private Sub OnG99_baseChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnG99_baseChanged()
    End Sub
    Partial Private Sub OnpaymentChanging(value As String)
    End Sub
    Partial Private Sub OnpaymentChanged()
    End Sub
    Partial Private Sub OncashChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OncashChanged()
    End Sub
    Partial Private Sub OntransChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OntransChanged()
    End Sub
    Partial Private Sub OncheqChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OncheqChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_actual_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property actual_id() As Integer
		Get
			Return Me._actual_id
		End Get
		Set
			If ((Me._actual_id = value)  _
						= false) Then
				Me.Onactual_idChanging(value)
				Me.SendPropertyChanging
				Me._actual_id = value
				Me.SendPropertyChanged("actual_id")
				Me.Onactual_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_asset_id", DbType:="Int")>  _
	Public Property asset_id() As System.Nullable(Of Integer)
		Get
			Return Me._asset_id
		End Get
		Set
			If (Me._asset_id.Equals(value) = false) Then
				Me.Onasset_idChanging(value)
				Me.SendPropertyChanging
				Me._asset_id = value
				Me.SendPropertyChanged("asset_id")
				Me.Onasset_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ref_no", DbType:="VarChar(20)")>  _
	Public Property ref_no() As String
		Get
			Return Me._ref_no
		End Get
		Set
			If (String.Equals(Me._ref_no, value) = false) Then
				Me.Onref_noChanging(value)
				Me.SendPropertyChanging
				Me._ref_no = value
				Me.SendPropertyChanged("ref_no")
				Me.Onref_noChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cust_id", DbType:="VarChar(5)")>  _
	Public Property cust_id() As String
		Get
			Return Me._cust_id
		End Get
		Set
			If (String.Equals(Me._cust_id, value) = false) Then
				Me.Oncust_idChanging(value)
				Me.SendPropertyChanging
				Me._cust_id = value
				Me.SendPropertyChanged("cust_id")
				Me.Oncust_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_asset_type", DbType:="VarChar(10)")>  _
	Public Property asset_type() As String
		Get
			Return Me._asset_type
		End Get
		Set
			If (String.Equals(Me._asset_type, value) = false) Then
				Me.Onasset_typeChanging(value)
				Me.SendPropertyChanging
				Me._asset_type = value
				Me.SendPropertyChanged("asset_type")
				Me.Onasset_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_created_by", DbType:="VarChar(10)")>  _
	Public Property created_by() As String
		Get
			Return Me._created_by
		End Get
		Set
			If (String.Equals(Me._created_by, value) = false) Then
				Me.Oncreated_byChanging(value)
				Me.SendPropertyChanging
				Me._created_by = value
				Me.SendPropertyChanged("created_by")
				Me.Oncreated_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_datetime", DbType:="DateTime")>  _
	Public Property datetime() As System.Nullable(Of Date)
		Get
			Return Me._datetime
		End Get
		Set
			If (Me._datetime.Equals(value) = false) Then
				Me.OndatetimeChanging(value)
				Me.SendPropertyChanging
				Me._datetime = value
				Me.SendPropertyChanged("datetime")
				Me.OndatetimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_purity", DbType:="VarChar(10)")>  _
	Public Property purity() As String
		Get
			Return Me._purity
		End Get
		Set
			If (String.Equals(Me._purity, value) = false) Then
				Me.OnpurityChanging(value)
				Me.SendPropertyChanging
				Me._purity = value
				Me.SendPropertyChanged("purity")
				Me.OnpurityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quantity", DbType:="Decimal(18,2)")>  _
	Public Property quantity() As System.Nullable(Of Decimal)
		Get
			Return Me._quantity
		End Get
		Set
			If (Me._quantity.Equals(value) = false) Then
				Me.OnquantityChanging(value)
				Me.SendPropertyChanging
				Me._quantity = value
				Me.SendPropertyChanged("quantity")
				Me.OnquantityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amount", DbType:="Decimal(18,2)")>  _
	Public Property amount() As System.Nullable(Of Decimal)
		Get
			Return Me._amount
		End Get
		Set
			If (Me._amount.Equals(value) = false) Then
				Me.OnamountChanging(value)
				Me.SendPropertyChanging
				Me._amount = value
				Me.SendPropertyChanged("amount")
				Me.OnamountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status_id", DbType:="VarChar(50)")>  _
	Public Property status_id() As String
		Get
			Return Me._status_id
		End Get
		Set
			If (String.Equals(Me._status_id, value) = false) Then
				Me.Onstatus_idChanging(value)
				Me.SendPropertyChanging
				Me._status_id = value
				Me.SendPropertyChanged("status_id")
				Me.Onstatus_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_before_status_id", DbType:="VarChar(50)")>  _
	Public Property before_status_id() As String
		Get
			Return Me._before_status_id
		End Get
		Set
			If (String.Equals(Me._before_status_id, value) = false) Then
				Me.Onbefore_status_idChanging(value)
				Me.SendPropertyChanging
				Me._before_status_id = value
				Me.SendPropertyChanged("before_status_id")
				Me.Onbefore_status_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status_name", DbType:="VarChar(200)")>  _
	Public Property status_name() As String
		Get
			Return Me._status_name
		End Get
		Set
			If (String.Equals(Me._status_name, value) = false) Then
				Me.Onstatus_nameChanging(value)
				Me.SendPropertyChanging
				Me._status_name = value
				Me.SendPropertyChanged("status_name")
				Me.Onstatus_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_note", DbType:="VarChar(500)")>  _
	Public Property note() As String
		Get
			Return Me._note
		End Get
		Set
			If (String.Equals(Me._note, value) = false) Then
				Me.OnnoteChanging(value)
				Me.SendPropertyChanging
				Me._note = value
				Me.SendPropertyChanged("note")
				Me.OnnoteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_type", DbType:="VarChar(20)")>  _
	Public Property type() As String
		Get
			Return Me._type
		End Get
		Set
			If (String.Equals(Me._type, value) = false) Then
				Me.OntypeChanging(value)
				Me.SendPropertyChanging
				Me._type = value
				Me.SendPropertyChanged("type")
				Me.OntypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_order_type", DbType:="VarChar(50)")>  _
	Public Property order_type() As String
		Get
			Return Me._order_type
		End Get
		Set
			If (String.Equals(Me._order_type, value) = false) Then
				Me.Onorder_typeChanging(value)
				Me.SendPropertyChanging
				Me._order_type = value
				Me.SendPropertyChanged("order_type")
				Me.Onorder_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_price_base", DbType:="Decimal(18,2)")>  _
	Public Property price_base() As System.Nullable(Of Decimal)
		Get
			Return Me._price_base
		End Get
		Set
			If (Me._price_base.Equals(value) = false) Then
				Me.Onprice_baseChanging(value)
				Me.SendPropertyChanging
				Me._price_base = value
				Me.SendPropertyChanged("price_base")
				Me.Onprice_baseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G96_base", DbType:="Decimal(18,2)")>  _
	Public Property G96_base() As System.Nullable(Of Decimal)
		Get
			Return Me._G96_base
		End Get
		Set
			If (Me._G96_base.Equals(value) = false) Then
				Me.OnG96_baseChanging(value)
				Me.SendPropertyChanging
				Me._G96_base = value
				Me.SendPropertyChanged("G96_base")
				Me.OnG96_baseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G96G_base", DbType:="Decimal(18,3)")>  _
	Public Property G96G_base() As System.Nullable(Of Decimal)
		Get
			Return Me._G96G_base
		End Get
		Set
			If (Me._G96G_base.Equals(value) = false) Then
				Me.OnG96G_baseChanging(value)
				Me.SendPropertyChanging
				Me._G96G_base = value
				Me.SendPropertyChanged("G96G_base")
				Me.OnG96G_baseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G99_base", DbType:="Decimal(18,2)")>  _
	Public Property G99_base() As System.Nullable(Of Decimal)
		Get
			Return Me._G99_base
		End Get
		Set
			If (Me._G99_base.Equals(value) = false) Then
				Me.OnG99_baseChanging(value)
				Me.SendPropertyChanging
				Me._G99_base = value
				Me.SendPropertyChanged("G99_base")
				Me.OnG99_baseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment", DbType:="VarChar(50)")>  _
	Public Property payment() As String
		Get
			Return Me._payment
		End Get
		Set
			If (String.Equals(Me._payment, value) = false) Then
				Me.OnpaymentChanging(value)
				Me.SendPropertyChanging
				Me._payment = value
				Me.SendPropertyChanged("payment")
				Me.OnpaymentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash", DbType:="Decimal(18,2)")>  _
	Public Property cash() As System.Nullable(Of Decimal)
		Get
			Return Me._cash
		End Get
		Set
			If (Me._cash.Equals(value) = false) Then
				Me.OncashChanging(value)
				Me.SendPropertyChanging
				Me._cash = value
				Me.SendPropertyChanged("cash")
				Me.OncashChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trans", DbType:="Decimal(18,2)")>  _
	Public Property trans() As System.Nullable(Of Decimal)
		Get
			Return Me._trans
		End Get
		Set
			If (Me._trans.Equals(value) = false) Then
				Me.OntransChanging(value)
				Me.SendPropertyChanging
				Me._trans = value
				Me.SendPropertyChanged("trans")
				Me.OntransChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cheq", DbType:="Decimal(18,2)")>  _
	Public Property cheq() As System.Nullable(Of Decimal)
		Get
			Return Me._cheq
		End Get
		Set
			If (Me._cheq.Equals(value) = false) Then
				Me.OncheqChanging(value)
				Me.SendPropertyChanging
				Me._cheq = value
				Me.SendPropertyChanged("cheq")
				Me.OncheqChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.guarantee")>  _
Partial Public Class guarantee
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _grt_id As Integer
	
	Private _grt_value As Integer
	
	Private _grt_type As System.Nullable(Of Char)
	
	Private _grt_rate As System.Nullable(Of Integer)
	
	Private _grt_trade96 As System.Nullable(Of Integer)
	
	Private _grt_trade99 As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Ongrt_idChanging(value As Integer)
    End Sub
    Partial Private Sub Ongrt_idChanged()
    End Sub
    Partial Private Sub Ongrt_valueChanging(value As Integer)
    End Sub
    Partial Private Sub Ongrt_valueChanged()
    End Sub
    Partial Private Sub Ongrt_typeChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ongrt_typeChanged()
    End Sub
    Partial Private Sub Ongrt_rateChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ongrt_rateChanged()
    End Sub
    Partial Private Sub Ongrt_trade96Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ongrt_trade96Changed()
    End Sub
    Partial Private Sub Ongrt_trade99Changing(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Ongrt_trade99Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grt_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property grt_id() As Integer
		Get
			Return Me._grt_id
		End Get
		Set
			If ((Me._grt_id = value)  _
						= false) Then
				Me.Ongrt_idChanging(value)
				Me.SendPropertyChanging
				Me._grt_id = value
				Me.SendPropertyChanged("grt_id")
				Me.Ongrt_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grt_value", DbType:="Int NOT NULL")>  _
	Public Property grt_value() As Integer
		Get
			Return Me._grt_value
		End Get
		Set
			If ((Me._grt_value = value)  _
						= false) Then
				Me.Ongrt_valueChanging(value)
				Me.SendPropertyChanging
				Me._grt_value = value
				Me.SendPropertyChanged("grt_value")
				Me.Ongrt_valueChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grt_type", DbType:="Char(1)")>  _
	Public Property grt_type() As System.Nullable(Of Char)
		Get
			Return Me._grt_type
		End Get
		Set
			If (Me._grt_type.Equals(value) = false) Then
				Me.Ongrt_typeChanging(value)
				Me.SendPropertyChanging
				Me._grt_type = value
				Me.SendPropertyChanged("grt_type")
				Me.Ongrt_typeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grt_rate", DbType:="Int")>  _
	Public Property grt_rate() As System.Nullable(Of Integer)
		Get
			Return Me._grt_rate
		End Get
		Set
			If (Me._grt_rate.Equals(value) = false) Then
				Me.Ongrt_rateChanging(value)
				Me.SendPropertyChanging
				Me._grt_rate = value
				Me.SendPropertyChanged("grt_rate")
				Me.Ongrt_rateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grt_trade96", DbType:="Int")>  _
	Public Property grt_trade96() As System.Nullable(Of Integer)
		Get
			Return Me._grt_trade96
		End Get
		Set
			If (Me._grt_trade96.Equals(value) = false) Then
				Me.Ongrt_trade96Changing(value)
				Me.SendPropertyChanging
				Me._grt_trade96 = value
				Me.SendPropertyChanged("grt_trade96")
				Me.Ongrt_trade96Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grt_trade99", DbType:="Int")>  _
	Public Property grt_trade99() As System.Nullable(Of Integer)
		Get
			Return Me._grt_trade99
		End Get
		Set
			If (Me._grt_trade99.Equals(value) = false) Then
				Me.Ongrt_trade99Changing(value)
				Me.SendPropertyChanging
				Me._grt_trade99 = value
				Me.SendPropertyChanged("grt_trade99")
				Me.Ongrt_trade99Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.v_grt")>  _
Partial Public Class v_grt
	
	Private _grt_value As System.Nullable(Of Double)
	
	Private _grt_type As System.Nullable(Of Char)
	
	Private _grt_trade96 As System.Nullable(Of Integer)
	
	Private _grt_trade99 As System.Nullable(Of Integer)
	
	Private _grt_id As Integer
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grt_value", DbType:="Float")>  _
	Public Property grt_value() As System.Nullable(Of Double)
		Get
			Return Me._grt_value
		End Get
		Set
			If (Me._grt_value.Equals(value) = false) Then
				Me._grt_value = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grt_type", DbType:="Char(1)")>  _
	Public Property grt_type() As System.Nullable(Of Char)
		Get
			Return Me._grt_type
		End Get
		Set
			If (Me._grt_type.Equals(value) = false) Then
				Me._grt_type = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grt_trade96", DbType:="Int")>  _
	Public Property grt_trade96() As System.Nullable(Of Integer)
		Get
			Return Me._grt_trade96
		End Get
		Set
			If (Me._grt_trade96.Equals(value) = false) Then
				Me._grt_trade96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grt_trade99", DbType:="Int")>  _
	Public Property grt_trade99() As System.Nullable(Of Integer)
		Get
			Return Me._grt_trade99
		End Get
		Set
			If (Me._grt_trade99.Equals(value) = false) Then
				Me._grt_trade99 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grt_id", DbType:="Int NOT NULL")>  _
	Public Property grt_id() As Integer
		Get
			Return Me._grt_id
		End Get
		Set
			If ((Me._grt_id = value)  _
						= false) Then
				Me._grt_id = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.users_menu")>  _
Partial Public Class users_menu
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _menu_id As Integer
	
	Private _menu_name As String
	
	Private _menu_group As System.Nullable(Of Integer)
	
	Private _detail As String
	
	Private _active As System.Nullable(Of Boolean)
	
	Private _created_date As System.Nullable(Of Date)
	
	Private _created_by As String
	
	Private _modifier_date As System.Nullable(Of Date)
	
	Private _modifier_by As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onmenu_idChanging(value As Integer)
    End Sub
    Partial Private Sub Onmenu_idChanged()
    End Sub
    Partial Private Sub Onmenu_nameChanging(value As String)
    End Sub
    Partial Private Sub Onmenu_nameChanged()
    End Sub
    Partial Private Sub Onmenu_groupChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onmenu_groupChanged()
    End Sub
    Partial Private Sub OndetailChanging(value As String)
    End Sub
    Partial Private Sub OndetailChanged()
    End Sub
    Partial Private Sub OnactiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnactiveChanged()
    End Sub
    Partial Private Sub Oncreated_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncreated_dateChanged()
    End Sub
    Partial Private Sub Oncreated_byChanging(value As String)
    End Sub
    Partial Private Sub Oncreated_byChanged()
    End Sub
    Partial Private Sub Onmodifier_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onmodifier_dateChanged()
    End Sub
    Partial Private Sub Onmodifier_byChanging(value As String)
    End Sub
    Partial Private Sub Onmodifier_byChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_menu_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property menu_id() As Integer
		Get
			Return Me._menu_id
		End Get
		Set
			If ((Me._menu_id = value)  _
						= false) Then
				Me.Onmenu_idChanging(value)
				Me.SendPropertyChanging
				Me._menu_id = value
				Me.SendPropertyChanged("menu_id")
				Me.Onmenu_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_menu_name", DbType:="VarChar(50)")>  _
	Public Property menu_name() As String
		Get
			Return Me._menu_name
		End Get
		Set
			If (String.Equals(Me._menu_name, value) = false) Then
				Me.Onmenu_nameChanging(value)
				Me.SendPropertyChanging
				Me._menu_name = value
				Me.SendPropertyChanged("menu_name")
				Me.Onmenu_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_menu_group", DbType:="Int")>  _
	Public Property menu_group() As System.Nullable(Of Integer)
		Get
			Return Me._menu_group
		End Get
		Set
			If (Me._menu_group.Equals(value) = false) Then
				Me.Onmenu_groupChanging(value)
				Me.SendPropertyChanging
				Me._menu_group = value
				Me.SendPropertyChanged("menu_group")
				Me.Onmenu_groupChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_detail", DbType:="VarChar(500)")>  _
	Public Property detail() As String
		Get
			Return Me._detail
		End Get
		Set
			If (String.Equals(Me._detail, value) = false) Then
				Me.OndetailChanging(value)
				Me.SendPropertyChanging
				Me._detail = value
				Me.SendPropertyChanged("detail")
				Me.OndetailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_active", DbType:="Bit")>  _
	Public Property active() As System.Nullable(Of Boolean)
		Get
			Return Me._active
		End Get
		Set
			If (Me._active.Equals(value) = false) Then
				Me.OnactiveChanging(value)
				Me.SendPropertyChanging
				Me._active = value
				Me.SendPropertyChanged("active")
				Me.OnactiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_created_date", DbType:="Date")>  _
	Public Property created_date() As System.Nullable(Of Date)
		Get
			Return Me._created_date
		End Get
		Set
			If (Me._created_date.Equals(value) = false) Then
				Me.Oncreated_dateChanging(value)
				Me.SendPropertyChanging
				Me._created_date = value
				Me.SendPropertyChanged("created_date")
				Me.Oncreated_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_created_by", DbType:="VarChar(50)")>  _
	Public Property created_by() As String
		Get
			Return Me._created_by
		End Get
		Set
			If (String.Equals(Me._created_by, value) = false) Then
				Me.Oncreated_byChanging(value)
				Me.SendPropertyChanging
				Me._created_by = value
				Me.SendPropertyChanged("created_by")
				Me.Oncreated_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modifier_date", DbType:="DateTime")>  _
	Public Property modifier_date() As System.Nullable(Of Date)
		Get
			Return Me._modifier_date
		End Get
		Set
			If (Me._modifier_date.Equals(value) = false) Then
				Me.Onmodifier_dateChanging(value)
				Me.SendPropertyChanging
				Me._modifier_date = value
				Me.SendPropertyChanged("modifier_date")
				Me.Onmodifier_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modifier_by", DbType:="VarChar(50)")>  _
	Public Property modifier_by() As String
		Get
			Return Me._modifier_by
		End Get
		Set
			If (String.Equals(Me._modifier_by, value) = false) Then
				Me.Onmodifier_byChanging(value)
				Me.SendPropertyChanging
				Me._modifier_by = value
				Me.SendPropertyChanged("modifier_by")
				Me.Onmodifier_byChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.users_role")>  _
Partial Public Class users_role
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _role_id As Integer
	
	Private _user_id As System.Nullable(Of Integer)
	
	Private _menu_id As System.Nullable(Of Integer)
	
	Private _role_view As System.Nullable(Of Boolean)
	
	Private _role_add As System.Nullable(Of Boolean)
	
	Private _role_update As System.Nullable(Of Boolean)
	
	Private _role_delete As System.Nullable(Of Boolean)
	
	Private _role_export As System.Nullable(Of Boolean)
	
	Private _role_print As System.Nullable(Of Boolean)
	
	Private _created_date As System.Nullable(Of Date)
	
	Private _created_by As String
	
	Private _modifier_date As System.Nullable(Of Date)
	
	Private _modifier_by As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onrole_idChanging(value As Integer)
    End Sub
    Partial Private Sub Onrole_idChanged()
    End Sub
    Partial Private Sub Onuser_idChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onuser_idChanged()
    End Sub
    Partial Private Sub Onmenu_idChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onmenu_idChanged()
    End Sub
    Partial Private Sub Onrole_viewChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub Onrole_viewChanged()
    End Sub
    Partial Private Sub Onrole_addChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub Onrole_addChanged()
    End Sub
    Partial Private Sub Onrole_updateChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub Onrole_updateChanged()
    End Sub
    Partial Private Sub Onrole_deleteChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub Onrole_deleteChanged()
    End Sub
    Partial Private Sub Onrole_exportChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub Onrole_exportChanged()
    End Sub
    Partial Private Sub Onrole_printChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub Onrole_printChanged()
    End Sub
    Partial Private Sub Oncreated_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncreated_dateChanged()
    End Sub
    Partial Private Sub Oncreated_byChanging(value As String)
    End Sub
    Partial Private Sub Oncreated_byChanged()
    End Sub
    Partial Private Sub Onmodifier_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onmodifier_dateChanged()
    End Sub
    Partial Private Sub Onmodifier_byChanging(value As String)
    End Sub
    Partial Private Sub Onmodifier_byChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_role_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property role_id() As Integer
		Get
			Return Me._role_id
		End Get
		Set
			If ((Me._role_id = value)  _
						= false) Then
				Me.Onrole_idChanging(value)
				Me.SendPropertyChanging
				Me._role_id = value
				Me.SendPropertyChanged("role_id")
				Me.Onrole_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_user_id", DbType:="Int")>  _
	Public Property user_id() As System.Nullable(Of Integer)
		Get
			Return Me._user_id
		End Get
		Set
			If (Me._user_id.Equals(value) = false) Then
				Me.Onuser_idChanging(value)
				Me.SendPropertyChanging
				Me._user_id = value
				Me.SendPropertyChanged("user_id")
				Me.Onuser_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_menu_id", DbType:="Int")>  _
	Public Property menu_id() As System.Nullable(Of Integer)
		Get
			Return Me._menu_id
		End Get
		Set
			If (Me._menu_id.Equals(value) = false) Then
				Me.Onmenu_idChanging(value)
				Me.SendPropertyChanging
				Me._menu_id = value
				Me.SendPropertyChanged("menu_id")
				Me.Onmenu_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_role_view", DbType:="Bit")>  _
	Public Property role_view() As System.Nullable(Of Boolean)
		Get
			Return Me._role_view
		End Get
		Set
			If (Me._role_view.Equals(value) = false) Then
				Me.Onrole_viewChanging(value)
				Me.SendPropertyChanging
				Me._role_view = value
				Me.SendPropertyChanged("role_view")
				Me.Onrole_viewChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_role_add", DbType:="Bit")>  _
	Public Property role_add() As System.Nullable(Of Boolean)
		Get
			Return Me._role_add
		End Get
		Set
			If (Me._role_add.Equals(value) = false) Then
				Me.Onrole_addChanging(value)
				Me.SendPropertyChanging
				Me._role_add = value
				Me.SendPropertyChanged("role_add")
				Me.Onrole_addChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_role_update", DbType:="Bit")>  _
	Public Property role_update() As System.Nullable(Of Boolean)
		Get
			Return Me._role_update
		End Get
		Set
			If (Me._role_update.Equals(value) = false) Then
				Me.Onrole_updateChanging(value)
				Me.SendPropertyChanging
				Me._role_update = value
				Me.SendPropertyChanged("role_update")
				Me.Onrole_updateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_role_delete", DbType:="Bit")>  _
	Public Property role_delete() As System.Nullable(Of Boolean)
		Get
			Return Me._role_delete
		End Get
		Set
			If (Me._role_delete.Equals(value) = false) Then
				Me.Onrole_deleteChanging(value)
				Me.SendPropertyChanging
				Me._role_delete = value
				Me.SendPropertyChanged("role_delete")
				Me.Onrole_deleteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_role_export", DbType:="Bit")>  _
	Public Property role_export() As System.Nullable(Of Boolean)
		Get
			Return Me._role_export
		End Get
		Set
			If (Me._role_export.Equals(value) = false) Then
				Me.Onrole_exportChanging(value)
				Me.SendPropertyChanging
				Me._role_export = value
				Me.SendPropertyChanged("role_export")
				Me.Onrole_exportChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_role_print", DbType:="Bit")>  _
	Public Property role_print() As System.Nullable(Of Boolean)
		Get
			Return Me._role_print
		End Get
		Set
			If (Me._role_print.Equals(value) = false) Then
				Me.Onrole_printChanging(value)
				Me.SendPropertyChanging
				Me._role_print = value
				Me.SendPropertyChanged("role_print")
				Me.Onrole_printChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_created_date", DbType:="DateTime")>  _
	Public Property created_date() As System.Nullable(Of Date)
		Get
			Return Me._created_date
		End Get
		Set
			If (Me._created_date.Equals(value) = false) Then
				Me.Oncreated_dateChanging(value)
				Me.SendPropertyChanging
				Me._created_date = value
				Me.SendPropertyChanged("created_date")
				Me.Oncreated_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_created_by", DbType:="VarChar(50)")>  _
	Public Property created_by() As String
		Get
			Return Me._created_by
		End Get
		Set
			If (String.Equals(Me._created_by, value) = false) Then
				Me.Oncreated_byChanging(value)
				Me.SendPropertyChanging
				Me._created_by = value
				Me.SendPropertyChanged("created_by")
				Me.Oncreated_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modifier_date", DbType:="DateTime")>  _
	Public Property modifier_date() As System.Nullable(Of Date)
		Get
			Return Me._modifier_date
		End Get
		Set
			If (Me._modifier_date.Equals(value) = false) Then
				Me.Onmodifier_dateChanging(value)
				Me.SendPropertyChanging
				Me._modifier_date = value
				Me.SendPropertyChanged("modifier_date")
				Me.Onmodifier_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modifier_by", DbType:="VarChar(50)")>  _
	Public Property modifier_by() As String
		Get
			Return Me._modifier_by
		End Get
		Set
			If (String.Equals(Me._modifier_by, value) = false) Then
				Me.Onmodifier_byChanging(value)
				Me.SendPropertyChanging
				Me._modifier_by = value
				Me.SendPropertyChanged("modifier_by")
				Me.Onmodifier_byChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.spot_log")>  _
Partial Public Class spot_log
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _spot_id As Integer
	
	Private _bid As System.Nullable(Of Decimal)
	
	Private _bid_1 As System.Nullable(Of Decimal)
	
	Private _ask As System.Nullable(Of Decimal)
	
	Private _ask_1 As System.Nullable(Of Decimal)
	
	Private _bid_thb As System.Nullable(Of Decimal)
	
	Private _ask_thb As System.Nullable(Of Decimal)
	
	Private _datetime As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onspot_idChanging(value As Integer)
    End Sub
    Partial Private Sub Onspot_idChanged()
    End Sub
    Partial Private Sub OnbidChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnbidChanged()
    End Sub
    Partial Private Sub Onbid_1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onbid_1Changed()
    End Sub
    Partial Private Sub OnaskChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnaskChanged()
    End Sub
    Partial Private Sub Onask_1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onask_1Changed()
    End Sub
    Partial Private Sub Onbid_thbChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onbid_thbChanged()
    End Sub
    Partial Private Sub Onask_thbChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onask_thbChanged()
    End Sub
    Partial Private Sub OndatetimeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndatetimeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_spot_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property spot_id() As Integer
		Get
			Return Me._spot_id
		End Get
		Set
			If ((Me._spot_id = value)  _
						= false) Then
				Me.Onspot_idChanging(value)
				Me.SendPropertyChanging
				Me._spot_id = value
				Me.SendPropertyChanged("spot_id")
				Me.Onspot_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid", DbType:="Decimal(18,2)")>  _
	Public Property bid() As System.Nullable(Of Decimal)
		Get
			Return Me._bid
		End Get
		Set
			If (Me._bid.Equals(value) = false) Then
				Me.OnbidChanging(value)
				Me.SendPropertyChanging
				Me._bid = value
				Me.SendPropertyChanged("bid")
				Me.OnbidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid_1", DbType:="Decimal(18,2)")>  _
	Public Property bid_1() As System.Nullable(Of Decimal)
		Get
			Return Me._bid_1
		End Get
		Set
			If (Me._bid_1.Equals(value) = false) Then
				Me.Onbid_1Changing(value)
				Me.SendPropertyChanging
				Me._bid_1 = value
				Me.SendPropertyChanged("bid_1")
				Me.Onbid_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask", DbType:="Decimal(18,2)")>  _
	Public Property ask() As System.Nullable(Of Decimal)
		Get
			Return Me._ask
		End Get
		Set
			If (Me._ask.Equals(value) = false) Then
				Me.OnaskChanging(value)
				Me.SendPropertyChanging
				Me._ask = value
				Me.SendPropertyChanged("ask")
				Me.OnaskChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask_1", DbType:="Decimal(18,2)")>  _
	Public Property ask_1() As System.Nullable(Of Decimal)
		Get
			Return Me._ask_1
		End Get
		Set
			If (Me._ask_1.Equals(value) = false) Then
				Me.Onask_1Changing(value)
				Me.SendPropertyChanging
				Me._ask_1 = value
				Me.SendPropertyChanged("ask_1")
				Me.Onask_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid_thb", DbType:="Decimal(18,2)")>  _
	Public Property bid_thb() As System.Nullable(Of Decimal)
		Get
			Return Me._bid_thb
		End Get
		Set
			If (Me._bid_thb.Equals(value) = false) Then
				Me.Onbid_thbChanging(value)
				Me.SendPropertyChanging
				Me._bid_thb = value
				Me.SendPropertyChanged("bid_thb")
				Me.Onbid_thbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask_thb", DbType:="Decimal(18,2)")>  _
	Public Property ask_thb() As System.Nullable(Of Decimal)
		Get
			Return Me._ask_thb
		End Get
		Set
			If (Me._ask_thb.Equals(value) = false) Then
				Me.Onask_thbChanging(value)
				Me.SendPropertyChanging
				Me._ask_thb = value
				Me.SendPropertyChanged("ask_thb")
				Me.Onask_thbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_datetime", DbType:="DateTime")>  _
	Public Property datetime() As System.Nullable(Of Date)
		Get
			Return Me._datetime
		End Get
		Set
			If (Me._datetime.Equals(value) = false) Then
				Me.OndatetimeChanging(value)
				Me.SendPropertyChanging
				Me._datetime = value
				Me.SendPropertyChanged("datetime")
				Me.OndatetimeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.users")>  _
Partial Public Class user
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _user_id As Integer
	
	Private _user_name As String
	
	Private _team_id As System.Nullable(Of Integer)
	
	Private _password As String
	
	Private _firstname As String
	
	Private _lastname As String
	
	Private _status As String
	
	Private _position As String
	
	Private _position_id As System.Nullable(Of Integer)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onuser_idChanging(value As Integer)
    End Sub
    Partial Private Sub Onuser_idChanged()
    End Sub
    Partial Private Sub Onuser_nameChanging(value As String)
    End Sub
    Partial Private Sub Onuser_nameChanged()
    End Sub
    Partial Private Sub Onteam_idChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onteam_idChanged()
    End Sub
    Partial Private Sub OnpasswordChanging(value As String)
    End Sub
    Partial Private Sub OnpasswordChanged()
    End Sub
    Partial Private Sub OnfirstnameChanging(value As String)
    End Sub
    Partial Private Sub OnfirstnameChanged()
    End Sub
    Partial Private Sub OnlastnameChanging(value As String)
    End Sub
    Partial Private Sub OnlastnameChanged()
    End Sub
    Partial Private Sub OnstatusChanging(value As String)
    End Sub
    Partial Private Sub OnstatusChanged()
    End Sub
    Partial Private Sub OnpositionChanging(value As String)
    End Sub
    Partial Private Sub OnpositionChanged()
    End Sub
    Partial Private Sub Onposition_idChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onposition_idChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_user_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property user_id() As Integer
		Get
			Return Me._user_id
		End Get
		Set
			If ((Me._user_id = value)  _
						= false) Then
				Me.Onuser_idChanging(value)
				Me.SendPropertyChanging
				Me._user_id = value
				Me.SendPropertyChanged("user_id")
				Me.Onuser_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_user_name", DbType:="VarChar(50)")>  _
	Public Property user_name() As String
		Get
			Return Me._user_name
		End Get
		Set
			If (String.Equals(Me._user_name, value) = false) Then
				Me.Onuser_nameChanging(value)
				Me.SendPropertyChanging
				Me._user_name = value
				Me.SendPropertyChanged("user_name")
				Me.Onuser_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_team_id", DbType:="Int")>  _
	Public Property team_id() As System.Nullable(Of Integer)
		Get
			Return Me._team_id
		End Get
		Set
			If (Me._team_id.Equals(value) = false) Then
				Me.Onteam_idChanging(value)
				Me.SendPropertyChanging
				Me._team_id = value
				Me.SendPropertyChanged("team_id")
				Me.Onteam_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_password", DbType:="VarChar(50)")>  _
	Public Property password() As String
		Get
			Return Me._password
		End Get
		Set
			If (String.Equals(Me._password, value) = false) Then
				Me.OnpasswordChanging(value)
				Me.SendPropertyChanging
				Me._password = value
				Me.SendPropertyChanged("password")
				Me.OnpasswordChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_firstname", DbType:="VarChar(50)")>  _
	Public Property firstname() As String
		Get
			Return Me._firstname
		End Get
		Set
			If (String.Equals(Me._firstname, value) = false) Then
				Me.OnfirstnameChanging(value)
				Me.SendPropertyChanging
				Me._firstname = value
				Me.SendPropertyChanged("firstname")
				Me.OnfirstnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lastname", DbType:="VarChar(50)")>  _
	Public Property lastname() As String
		Get
			Return Me._lastname
		End Get
		Set
			If (String.Equals(Me._lastname, value) = false) Then
				Me.OnlastnameChanging(value)
				Me.SendPropertyChanging
				Me._lastname = value
				Me.SendPropertyChanged("lastname")
				Me.OnlastnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status", DbType:="NChar(10)")>  _
	Public Property status() As String
		Get
			Return Me._status
		End Get
		Set
			If (String.Equals(Me._status, value) = false) Then
				Me.OnstatusChanging(value)
				Me.SendPropertyChanging
				Me._status = value
				Me.SendPropertyChanged("status")
				Me.OnstatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_position", DbType:="VarChar(50)")>  _
	Public Property position() As String
		Get
			Return Me._position
		End Get
		Set
			If (String.Equals(Me._position, value) = false) Then
				Me.OnpositionChanging(value)
				Me.SendPropertyChanging
				Me._position = value
				Me.SendPropertyChanged("position")
				Me.OnpositionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_position_id", DbType:="Int")>  _
	Public Property position_id() As System.Nullable(Of Integer)
		Get
			Return Me._position_id
		End Get
		Set
			If (Me._position_id.Equals(value) = false) Then
				Me.Onposition_idChanging(value)
				Me.SendPropertyChanging
				Me._position_id = value
				Me.SendPropertyChanged("position_id")
				Me.Onposition_idChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.stock_online")>  _
Partial Public Class stock_online
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _stock_id As Integer
	
	Private _price As System.Nullable(Of Decimal)
	
	Private _bid99_1 As System.Nullable(Of Decimal)
	
	Private _ask99_1 As System.Nullable(Of Decimal)
	
	Private _bid99_2 As System.Nullable(Of Decimal)
	
	Private _ask99_2 As System.Nullable(Of Decimal)
	
	Private _bid99_3 As System.Nullable(Of Decimal)
	
	Private _ask99_3 As System.Nullable(Of Decimal)
	
	Private _bid96_1 As System.Nullable(Of Decimal)
	
	Private _ask96_1 As System.Nullable(Of Decimal)
	
	Private _bid96_2 As System.Nullable(Of Decimal)
	
	Private _ask96_2 As System.Nullable(Of Decimal)
	
	Private _bid96_3 As System.Nullable(Of Decimal)
	
	Private _ask96_3 As System.Nullable(Of Decimal)
	
	Private _time As System.Nullable(Of Double)
	
	Private _time_update As System.Nullable(Of Date)
	
	Private _purity99_default As String
	
	Private _min As System.Nullable(Of Decimal)
	
	Private _max As System.Nullable(Of Decimal)
	
	Private _max_baht As System.Nullable(Of Decimal)
	
	Private _max_kg As System.Nullable(Of Decimal)
	
	Private _max_mini As System.Nullable(Of Decimal)
	
	Private _msg As String
	
	Private _pwd_auth As String
	
	Private _modifier_by As String
	
	Private _order_timeout As System.Nullable(Of Integer)
	
	Private _max_per As System.Nullable(Of Decimal)
	
	Private _min_ask_dif_9699 As System.Nullable(Of Decimal)
	
	Private _max_ask_dif_9699 As System.Nullable(Of Decimal)
	
	Private _halt As System.Nullable(Of Char)
	
	Private _range_leave_order As System.Nullable(Of Decimal)
	
	Private _bid99_plus As System.Nullable(Of Integer)
	
	Private _ask99_plus As System.Nullable(Of Integer)
	
	Private _bid96_plus As System.Nullable(Of Integer)
	
	Private _ask96_plus As System.Nullable(Of Integer)
	
	Private _self_price As System.Nullable(Of Char)
	
	Private _self_halt As System.Nullable(Of Char)
	
	Private _quantity_limit As System.Nullable(Of Decimal)
	
	Private _system_halt As System.Nullable(Of Char)
	
	Private _grt_pay As System.Nullable(Of Double)
	
	Private _grt_trade As System.Nullable(Of Double)
	
	Private _space_kg99 As System.Nullable(Of Decimal)
	
	Private _space_bg99 As System.Nullable(Of Decimal)
	
	Private _space_bg96 As System.Nullable(Of Decimal)
	
	Private _premium As System.Nullable(Of Decimal)
	
	Private _fx_bid As System.Nullable(Of Decimal)
	
	Private _fx_ask As System.Nullable(Of Decimal)
	
	Private _fx_ask_thb As System.Nullable(Of Decimal)
	
	Private _melting_cost As System.Nullable(Of Decimal)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onstock_idChanging(value As Integer)
    End Sub
    Partial Private Sub Onstock_idChanged()
    End Sub
    Partial Private Sub OnpriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnpriceChanged()
    End Sub
    Partial Private Sub Onbid99_1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onbid99_1Changed()
    End Sub
    Partial Private Sub Onask99_1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onask99_1Changed()
    End Sub
    Partial Private Sub Onbid99_2Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onbid99_2Changed()
    End Sub
    Partial Private Sub Onask99_2Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onask99_2Changed()
    End Sub
    Partial Private Sub Onbid99_3Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onbid99_3Changed()
    End Sub
    Partial Private Sub Onask99_3Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onask99_3Changed()
    End Sub
    Partial Private Sub Onbid96_1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onbid96_1Changed()
    End Sub
    Partial Private Sub Onask96_1Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onask96_1Changed()
    End Sub
    Partial Private Sub Onbid96_2Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onbid96_2Changed()
    End Sub
    Partial Private Sub Onask96_2Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onask96_2Changed()
    End Sub
    Partial Private Sub Onbid96_3Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onbid96_3Changed()
    End Sub
    Partial Private Sub Onask96_3Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onask96_3Changed()
    End Sub
    Partial Private Sub OntimeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OntimeChanged()
    End Sub
    Partial Private Sub Ontime_updateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ontime_updateChanged()
    End Sub
    Partial Private Sub Onpurity99_defaultChanging(value As String)
    End Sub
    Partial Private Sub Onpurity99_defaultChanged()
    End Sub
    Partial Private Sub OnminChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnminChanged()
    End Sub
    Partial Private Sub OnmaxChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnmaxChanged()
    End Sub
    Partial Private Sub Onmax_bahtChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onmax_bahtChanged()
    End Sub
    Partial Private Sub Onmax_kgChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onmax_kgChanged()
    End Sub
    Partial Private Sub Onmax_miniChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onmax_miniChanged()
    End Sub
    Partial Private Sub OnmsgChanging(value As String)
    End Sub
    Partial Private Sub OnmsgChanged()
    End Sub
    Partial Private Sub Onpwd_authChanging(value As String)
    End Sub
    Partial Private Sub Onpwd_authChanged()
    End Sub
    Partial Private Sub Onmodifier_byChanging(value As String)
    End Sub
    Partial Private Sub Onmodifier_byChanged()
    End Sub
    Partial Private Sub Onorder_timeoutChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onorder_timeoutChanged()
    End Sub
    Partial Private Sub Onmax_perChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onmax_perChanged()
    End Sub
    Partial Private Sub Onmin_ask_dif_9699Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onmin_ask_dif_9699Changed()
    End Sub
    Partial Private Sub Onmax_ask_dif_9699Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onmax_ask_dif_9699Changed()
    End Sub
    Partial Private Sub OnhaltChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnhaltChanged()
    End Sub
    Partial Private Sub Onrange_leave_orderChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onrange_leave_orderChanged()
    End Sub
    Partial Private Sub Onbid99_plusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onbid99_plusChanged()
    End Sub
    Partial Private Sub Onask99_plusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onask99_plusChanged()
    End Sub
    Partial Private Sub Onbid96_plusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onbid96_plusChanged()
    End Sub
    Partial Private Sub Onask96_plusChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onask96_plusChanged()
    End Sub
    Partial Private Sub Onself_priceChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onself_priceChanged()
    End Sub
    Partial Private Sub Onself_haltChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onself_haltChanged()
    End Sub
    Partial Private Sub Onquantity_limitChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onquantity_limitChanged()
    End Sub
    Partial Private Sub Onsystem_haltChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Onsystem_haltChanged()
    End Sub
    Partial Private Sub Ongrt_payChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub Ongrt_payChanged()
    End Sub
    Partial Private Sub Ongrt_tradeChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub Ongrt_tradeChanged()
    End Sub
    Partial Private Sub Onspace_kg99Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onspace_kg99Changed()
    End Sub
    Partial Private Sub Onspace_bg99Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onspace_bg99Changed()
    End Sub
    Partial Private Sub Onspace_bg96Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onspace_bg96Changed()
    End Sub
    Partial Private Sub OnpremiumChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnpremiumChanged()
    End Sub
    Partial Private Sub Onfx_bidChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onfx_bidChanged()
    End Sub
    Partial Private Sub Onfx_askChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onfx_askChanged()
    End Sub
    Partial Private Sub Onfx_ask_thbChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onfx_ask_thbChanged()
    End Sub
    Partial Private Sub Onmelting_costChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onmelting_costChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stock_id", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property stock_id() As Integer
		Get
			Return Me._stock_id
		End Get
		Set
			If ((Me._stock_id = value)  _
						= false) Then
				Me.Onstock_idChanging(value)
				Me.SendPropertyChanging
				Me._stock_id = value
				Me.SendPropertyChanged("stock_id")
				Me.Onstock_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_price", DbType:="Decimal(18,2)")>  _
	Public Property price() As System.Nullable(Of Decimal)
		Get
			Return Me._price
		End Get
		Set
			If (Me._price.Equals(value) = false) Then
				Me.OnpriceChanging(value)
				Me.SendPropertyChanging
				Me._price = value
				Me.SendPropertyChanged("price")
				Me.OnpriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid99_1", DbType:="Decimal(18,2)")>  _
	Public Property bid99_1() As System.Nullable(Of Decimal)
		Get
			Return Me._bid99_1
		End Get
		Set
			If (Me._bid99_1.Equals(value) = false) Then
				Me.Onbid99_1Changing(value)
				Me.SendPropertyChanging
				Me._bid99_1 = value
				Me.SendPropertyChanged("bid99_1")
				Me.Onbid99_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask99_1", DbType:="Decimal(18,2)")>  _
	Public Property ask99_1() As System.Nullable(Of Decimal)
		Get
			Return Me._ask99_1
		End Get
		Set
			If (Me._ask99_1.Equals(value) = false) Then
				Me.Onask99_1Changing(value)
				Me.SendPropertyChanging
				Me._ask99_1 = value
				Me.SendPropertyChanged("ask99_1")
				Me.Onask99_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid99_2", DbType:="Decimal(18,2)")>  _
	Public Property bid99_2() As System.Nullable(Of Decimal)
		Get
			Return Me._bid99_2
		End Get
		Set
			If (Me._bid99_2.Equals(value) = false) Then
				Me.Onbid99_2Changing(value)
				Me.SendPropertyChanging
				Me._bid99_2 = value
				Me.SendPropertyChanged("bid99_2")
				Me.Onbid99_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask99_2", DbType:="Decimal(18,2)")>  _
	Public Property ask99_2() As System.Nullable(Of Decimal)
		Get
			Return Me._ask99_2
		End Get
		Set
			If (Me._ask99_2.Equals(value) = false) Then
				Me.Onask99_2Changing(value)
				Me.SendPropertyChanging
				Me._ask99_2 = value
				Me.SendPropertyChanged("ask99_2")
				Me.Onask99_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid99_3", DbType:="Decimal(18,2)")>  _
	Public Property bid99_3() As System.Nullable(Of Decimal)
		Get
			Return Me._bid99_3
		End Get
		Set
			If (Me._bid99_3.Equals(value) = false) Then
				Me.Onbid99_3Changing(value)
				Me.SendPropertyChanging
				Me._bid99_3 = value
				Me.SendPropertyChanged("bid99_3")
				Me.Onbid99_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask99_3", DbType:="Decimal(18,2)")>  _
	Public Property ask99_3() As System.Nullable(Of Decimal)
		Get
			Return Me._ask99_3
		End Get
		Set
			If (Me._ask99_3.Equals(value) = false) Then
				Me.Onask99_3Changing(value)
				Me.SendPropertyChanging
				Me._ask99_3 = value
				Me.SendPropertyChanged("ask99_3")
				Me.Onask99_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid96_1", DbType:="Decimal(18,2)")>  _
	Public Property bid96_1() As System.Nullable(Of Decimal)
		Get
			Return Me._bid96_1
		End Get
		Set
			If (Me._bid96_1.Equals(value) = false) Then
				Me.Onbid96_1Changing(value)
				Me.SendPropertyChanging
				Me._bid96_1 = value
				Me.SendPropertyChanged("bid96_1")
				Me.Onbid96_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask96_1", DbType:="Decimal(18,2)")>  _
	Public Property ask96_1() As System.Nullable(Of Decimal)
		Get
			Return Me._ask96_1
		End Get
		Set
			If (Me._ask96_1.Equals(value) = false) Then
				Me.Onask96_1Changing(value)
				Me.SendPropertyChanging
				Me._ask96_1 = value
				Me.SendPropertyChanged("ask96_1")
				Me.Onask96_1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid96_2", DbType:="Decimal(18,2)")>  _
	Public Property bid96_2() As System.Nullable(Of Decimal)
		Get
			Return Me._bid96_2
		End Get
		Set
			If (Me._bid96_2.Equals(value) = false) Then
				Me.Onbid96_2Changing(value)
				Me.SendPropertyChanging
				Me._bid96_2 = value
				Me.SendPropertyChanged("bid96_2")
				Me.Onbid96_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask96_2", DbType:="Decimal(18,2)")>  _
	Public Property ask96_2() As System.Nullable(Of Decimal)
		Get
			Return Me._ask96_2
		End Get
		Set
			If (Me._ask96_2.Equals(value) = false) Then
				Me.Onask96_2Changing(value)
				Me.SendPropertyChanging
				Me._ask96_2 = value
				Me.SendPropertyChanged("ask96_2")
				Me.Onask96_2Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid96_3", DbType:="Decimal(18,2)")>  _
	Public Property bid96_3() As System.Nullable(Of Decimal)
		Get
			Return Me._bid96_3
		End Get
		Set
			If (Me._bid96_3.Equals(value) = false) Then
				Me.Onbid96_3Changing(value)
				Me.SendPropertyChanging
				Me._bid96_3 = value
				Me.SendPropertyChanged("bid96_3")
				Me.Onbid96_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask96_3", DbType:="Decimal(18,2)")>  _
	Public Property ask96_3() As System.Nullable(Of Decimal)
		Get
			Return Me._ask96_3
		End Get
		Set
			If (Me._ask96_3.Equals(value) = false) Then
				Me.Onask96_3Changing(value)
				Me.SendPropertyChanging
				Me._ask96_3 = value
				Me.SendPropertyChanged("ask96_3")
				Me.Onask96_3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_time", DbType:="Float")>  _
	Public Property time() As System.Nullable(Of Double)
		Get
			Return Me._time
		End Get
		Set
			If (Me._time.Equals(value) = false) Then
				Me.OntimeChanging(value)
				Me.SendPropertyChanging
				Me._time = value
				Me.SendPropertyChanged("time")
				Me.OntimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_time_update", DbType:="DateTime")>  _
	Public Property time_update() As System.Nullable(Of Date)
		Get
			Return Me._time_update
		End Get
		Set
			If (Me._time_update.Equals(value) = false) Then
				Me.Ontime_updateChanging(value)
				Me.SendPropertyChanging
				Me._time_update = value
				Me.SendPropertyChanged("time_update")
				Me.Ontime_updateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_purity99_default", DbType:="NChar(3)")>  _
	Public Property purity99_default() As String
		Get
			Return Me._purity99_default
		End Get
		Set
			If (String.Equals(Me._purity99_default, value) = false) Then
				Me.Onpurity99_defaultChanging(value)
				Me.SendPropertyChanging
				Me._purity99_default = value
				Me.SendPropertyChanged("purity99_default")
				Me.Onpurity99_defaultChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_min", DbType:="Decimal(18,2)")>  _
	Public Property min() As System.Nullable(Of Decimal)
		Get
			Return Me._min
		End Get
		Set
			If (Me._min.Equals(value) = false) Then
				Me.OnminChanging(value)
				Me.SendPropertyChanging
				Me._min = value
				Me.SendPropertyChanged("min")
				Me.OnminChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_max", DbType:="Decimal(18,2)")>  _
	Public Property max() As System.Nullable(Of Decimal)
		Get
			Return Me._max
		End Get
		Set
			If (Me._max.Equals(value) = false) Then
				Me.OnmaxChanging(value)
				Me.SendPropertyChanging
				Me._max = value
				Me.SendPropertyChanged("max")
				Me.OnmaxChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_max_baht", DbType:="Decimal(18,2)")>  _
	Public Property max_baht() As System.Nullable(Of Decimal)
		Get
			Return Me._max_baht
		End Get
		Set
			If (Me._max_baht.Equals(value) = false) Then
				Me.Onmax_bahtChanging(value)
				Me.SendPropertyChanging
				Me._max_baht = value
				Me.SendPropertyChanged("max_baht")
				Me.Onmax_bahtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_max_kg", DbType:="Decimal(18,2)")>  _
	Public Property max_kg() As System.Nullable(Of Decimal)
		Get
			Return Me._max_kg
		End Get
		Set
			If (Me._max_kg.Equals(value) = false) Then
				Me.Onmax_kgChanging(value)
				Me.SendPropertyChanging
				Me._max_kg = value
				Me.SendPropertyChanged("max_kg")
				Me.Onmax_kgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_max_mini", DbType:="Decimal(18,2)")>  _
	Public Property max_mini() As System.Nullable(Of Decimal)
		Get
			Return Me._max_mini
		End Get
		Set
			If (Me._max_mini.Equals(value) = false) Then
				Me.Onmax_miniChanging(value)
				Me.SendPropertyChanging
				Me._max_mini = value
				Me.SendPropertyChanged("max_mini")
				Me.Onmax_miniChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_msg", DbType:="VarChar(MAX)")>  _
	Public Property msg() As String
		Get
			Return Me._msg
		End Get
		Set
			If (String.Equals(Me._msg, value) = false) Then
				Me.OnmsgChanging(value)
				Me.SendPropertyChanging
				Me._msg = value
				Me.SendPropertyChanged("msg")
				Me.OnmsgChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pwd_auth", DbType:="VarChar(50)")>  _
	Public Property pwd_auth() As String
		Get
			Return Me._pwd_auth
		End Get
		Set
			If (String.Equals(Me._pwd_auth, value) = false) Then
				Me.Onpwd_authChanging(value)
				Me.SendPropertyChanging
				Me._pwd_auth = value
				Me.SendPropertyChanged("pwd_auth")
				Me.Onpwd_authChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modifier_by", DbType:="VarChar(50)")>  _
	Public Property modifier_by() As String
		Get
			Return Me._modifier_by
		End Get
		Set
			If (String.Equals(Me._modifier_by, value) = false) Then
				Me.Onmodifier_byChanging(value)
				Me.SendPropertyChanging
				Me._modifier_by = value
				Me.SendPropertyChanged("modifier_by")
				Me.Onmodifier_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_order_timeout", DbType:="Int")>  _
	Public Property order_timeout() As System.Nullable(Of Integer)
		Get
			Return Me._order_timeout
		End Get
		Set
			If (Me._order_timeout.Equals(value) = false) Then
				Me.Onorder_timeoutChanging(value)
				Me.SendPropertyChanging
				Me._order_timeout = value
				Me.SendPropertyChanged("order_timeout")
				Me.Onorder_timeoutChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_max_per", DbType:="Decimal(18,2)")>  _
	Public Property max_per() As System.Nullable(Of Decimal)
		Get
			Return Me._max_per
		End Get
		Set
			If (Me._max_per.Equals(value) = false) Then
				Me.Onmax_perChanging(value)
				Me.SendPropertyChanging
				Me._max_per = value
				Me.SendPropertyChanged("max_per")
				Me.Onmax_perChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_min_ask_dif_9699", DbType:="Decimal(18,2)")>  _
	Public Property min_ask_dif_9699() As System.Nullable(Of Decimal)
		Get
			Return Me._min_ask_dif_9699
		End Get
		Set
			If (Me._min_ask_dif_9699.Equals(value) = false) Then
				Me.Onmin_ask_dif_9699Changing(value)
				Me.SendPropertyChanging
				Me._min_ask_dif_9699 = value
				Me.SendPropertyChanged("min_ask_dif_9699")
				Me.Onmin_ask_dif_9699Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_max_ask_dif_9699", DbType:="Decimal(18,2)")>  _
	Public Property max_ask_dif_9699() As System.Nullable(Of Decimal)
		Get
			Return Me._max_ask_dif_9699
		End Get
		Set
			If (Me._max_ask_dif_9699.Equals(value) = false) Then
				Me.Onmax_ask_dif_9699Changing(value)
				Me.SendPropertyChanging
				Me._max_ask_dif_9699 = value
				Me.SendPropertyChanged("max_ask_dif_9699")
				Me.Onmax_ask_dif_9699Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_halt", DbType:="NChar(1)")>  _
	Public Property halt() As System.Nullable(Of Char)
		Get
			Return Me._halt
		End Get
		Set
			If (Me._halt.Equals(value) = false) Then
				Me.OnhaltChanging(value)
				Me.SendPropertyChanging
				Me._halt = value
				Me.SendPropertyChanged("halt")
				Me.OnhaltChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_range_leave_order", DbType:="Decimal(18,2)")>  _
	Public Property range_leave_order() As System.Nullable(Of Decimal)
		Get
			Return Me._range_leave_order
		End Get
		Set
			If (Me._range_leave_order.Equals(value) = false) Then
				Me.Onrange_leave_orderChanging(value)
				Me.SendPropertyChanging
				Me._range_leave_order = value
				Me.SendPropertyChanged("range_leave_order")
				Me.Onrange_leave_orderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid99_plus", DbType:="Int")>  _
	Public Property bid99_plus() As System.Nullable(Of Integer)
		Get
			Return Me._bid99_plus
		End Get
		Set
			If (Me._bid99_plus.Equals(value) = false) Then
				Me.Onbid99_plusChanging(value)
				Me.SendPropertyChanging
				Me._bid99_plus = value
				Me.SendPropertyChanged("bid99_plus")
				Me.Onbid99_plusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask99_plus", DbType:="Int")>  _
	Public Property ask99_plus() As System.Nullable(Of Integer)
		Get
			Return Me._ask99_plus
		End Get
		Set
			If (Me._ask99_plus.Equals(value) = false) Then
				Me.Onask99_plusChanging(value)
				Me.SendPropertyChanging
				Me._ask99_plus = value
				Me.SendPropertyChanged("ask99_plus")
				Me.Onask99_plusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid96_plus", DbType:="Int")>  _
	Public Property bid96_plus() As System.Nullable(Of Integer)
		Get
			Return Me._bid96_plus
		End Get
		Set
			If (Me._bid96_plus.Equals(value) = false) Then
				Me.Onbid96_plusChanging(value)
				Me.SendPropertyChanging
				Me._bid96_plus = value
				Me.SendPropertyChanged("bid96_plus")
				Me.Onbid96_plusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask96_plus", DbType:="Int")>  _
	Public Property ask96_plus() As System.Nullable(Of Integer)
		Get
			Return Me._ask96_plus
		End Get
		Set
			If (Me._ask96_plus.Equals(value) = false) Then
				Me.Onask96_plusChanging(value)
				Me.SendPropertyChanging
				Me._ask96_plus = value
				Me.SendPropertyChanged("ask96_plus")
				Me.Onask96_plusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_self_price", DbType:="Char(1)")>  _
	Public Property self_price() As System.Nullable(Of Char)
		Get
			Return Me._self_price
		End Get
		Set
			If (Me._self_price.Equals(value) = false) Then
				Me.Onself_priceChanging(value)
				Me.SendPropertyChanging
				Me._self_price = value
				Me.SendPropertyChanged("self_price")
				Me.Onself_priceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_self_halt", DbType:="Char(1)")>  _
	Public Property self_halt() As System.Nullable(Of Char)
		Get
			Return Me._self_halt
		End Get
		Set
			If (Me._self_halt.Equals(value) = false) Then
				Me.Onself_haltChanging(value)
				Me.SendPropertyChanging
				Me._self_halt = value
				Me.SendPropertyChanged("self_halt")
				Me.Onself_haltChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quantity_limit", DbType:="Decimal(18,2)")>  _
	Public Property quantity_limit() As System.Nullable(Of Decimal)
		Get
			Return Me._quantity_limit
		End Get
		Set
			If (Me._quantity_limit.Equals(value) = false) Then
				Me.Onquantity_limitChanging(value)
				Me.SendPropertyChanging
				Me._quantity_limit = value
				Me.SendPropertyChanged("quantity_limit")
				Me.Onquantity_limitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_system_halt", DbType:="Char(1)")>  _
	Public Property system_halt() As System.Nullable(Of Char)
		Get
			Return Me._system_halt
		End Get
		Set
			If (Me._system_halt.Equals(value) = false) Then
				Me.Onsystem_haltChanging(value)
				Me.SendPropertyChanging
				Me._system_halt = value
				Me.SendPropertyChanged("system_halt")
				Me.Onsystem_haltChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grt_pay", DbType:="Float")>  _
	Public Property grt_pay() As System.Nullable(Of Double)
		Get
			Return Me._grt_pay
		End Get
		Set
			If (Me._grt_pay.Equals(value) = false) Then
				Me.Ongrt_payChanging(value)
				Me.SendPropertyChanging
				Me._grt_pay = value
				Me.SendPropertyChanged("grt_pay")
				Me.Ongrt_payChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grt_trade", DbType:="Float")>  _
	Public Property grt_trade() As System.Nullable(Of Double)
		Get
			Return Me._grt_trade
		End Get
		Set
			If (Me._grt_trade.Equals(value) = false) Then
				Me.Ongrt_tradeChanging(value)
				Me.SendPropertyChanging
				Me._grt_trade = value
				Me.SendPropertyChanged("grt_trade")
				Me.Ongrt_tradeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_space_kg99", DbType:="Decimal(18,2)")>  _
	Public Property space_kg99() As System.Nullable(Of Decimal)
		Get
			Return Me._space_kg99
		End Get
		Set
			If (Me._space_kg99.Equals(value) = false) Then
				Me.Onspace_kg99Changing(value)
				Me.SendPropertyChanging
				Me._space_kg99 = value
				Me.SendPropertyChanged("space_kg99")
				Me.Onspace_kg99Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_space_bg99", DbType:="Decimal(18,2)")>  _
	Public Property space_bg99() As System.Nullable(Of Decimal)
		Get
			Return Me._space_bg99
		End Get
		Set
			If (Me._space_bg99.Equals(value) = false) Then
				Me.Onspace_bg99Changing(value)
				Me.SendPropertyChanging
				Me._space_bg99 = value
				Me.SendPropertyChanged("space_bg99")
				Me.Onspace_bg99Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_space_bg96", DbType:="Decimal(18,2)")>  _
	Public Property space_bg96() As System.Nullable(Of Decimal)
		Get
			Return Me._space_bg96
		End Get
		Set
			If (Me._space_bg96.Equals(value) = false) Then
				Me.Onspace_bg96Changing(value)
				Me.SendPropertyChanging
				Me._space_bg96 = value
				Me.SendPropertyChanged("space_bg96")
				Me.Onspace_bg96Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_premium", DbType:="Decimal(18,2)")>  _
	Public Property premium() As System.Nullable(Of Decimal)
		Get
			Return Me._premium
		End Get
		Set
			If (Me._premium.Equals(value) = false) Then
				Me.OnpremiumChanging(value)
				Me.SendPropertyChanging
				Me._premium = value
				Me.SendPropertyChanged("premium")
				Me.OnpremiumChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fx_bid", DbType:="Decimal(18,2)")>  _
	Public Property fx_bid() As System.Nullable(Of Decimal)
		Get
			Return Me._fx_bid
		End Get
		Set
			If (Me._fx_bid.Equals(value) = false) Then
				Me.Onfx_bidChanging(value)
				Me.SendPropertyChanging
				Me._fx_bid = value
				Me.SendPropertyChanged("fx_bid")
				Me.Onfx_bidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fx_ask", DbType:="Decimal(18,2)")>  _
	Public Property fx_ask() As System.Nullable(Of Decimal)
		Get
			Return Me._fx_ask
		End Get
		Set
			If (Me._fx_ask.Equals(value) = false) Then
				Me.Onfx_askChanging(value)
				Me.SendPropertyChanging
				Me._fx_ask = value
				Me.SendPropertyChanged("fx_ask")
				Me.Onfx_askChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fx_ask_thb", DbType:="Decimal(18,2)")>  _
	Public Property fx_ask_thb() As System.Nullable(Of Decimal)
		Get
			Return Me._fx_ask_thb
		End Get
		Set
			If (Me._fx_ask_thb.Equals(value) = false) Then
				Me.Onfx_ask_thbChanging(value)
				Me.SendPropertyChanging
				Me._fx_ask_thb = value
				Me.SendPropertyChanged("fx_ask_thb")
				Me.Onfx_ask_thbChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_melting_cost", DbType:="Decimal(18,2)")>  _
	Public Property melting_cost() As System.Nullable(Of Decimal)
		Get
			Return Me._melting_cost
		End Get
		Set
			If (Me._melting_cost.Equals(value) = false) Then
				Me.Onmelting_costChanging(value)
				Me.SendPropertyChanging
				Me._melting_cost = value
				Me.SendPropertyChanged("melting_cost")
				Me.Onmelting_costChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tickets")>  _
Partial Public Class ticket
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ticket_id As Integer
	
	Private _ref_no As String
	
	Private _book_no As String
	
	Private _run_no As String
	
	Private _cust_id As String
	
	Private _user_id As System.Nullable(Of Integer)
	
	Private _invoice As String
	
	Private _gold_type_id As String
	
	Private _delivery As String
	
	Private _type As String
	
	Private _quantity As System.Nullable(Of Decimal)
	
	Private _price As System.Nullable(Of Decimal)
	
	Private _amount As System.Nullable(Of Decimal)
	
	Private _delivery_date As System.Nullable(Of Date)
	
	Private _ticket_date As System.Nullable(Of Date)
	
	Private _billing As String
	
	Private _checker As String
	
	Private _authorize As String
	
	Private _remark As String
	
	Private _payment As String
	
	Private _payment_detail As String
	
	Private _payment_bank As String
	
	Private _payment_duedate As System.Nullable(Of Date)
	
	Private _payment_cheq_no As String
	
	Private _status_id As String
	
	Private _payment_date As System.Nullable(Of Date)
	
	Private _created_date As System.Nullable(Of Date)
	
	Private _created_by As String
	
	Private _modifier_date As System.Nullable(Of Date)
	
	Private _modifier_by As String
	
	Private _active As System.Nullable(Of Char)
	
	Private _gold_dep As System.Nullable(Of Char)
	
	Private _cash_receipt As System.Nullable(Of Char)
	
	Private _before_status_id As String
	
	Private _trade As System.Nullable(Of Char)
	
	Private _clearingday As System.Nullable(Of Integer)
	
	Private _gram As String
	
	Private _rows_no_split As System.Nullable(Of Integer)
	
	Private _receipt_date As System.Nullable(Of Date)
	
	Private _payment_id As System.Nullable(Of Integer)
	
	Private _payment_by As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onticket_idChanging(value As Integer)
    End Sub
    Partial Private Sub Onticket_idChanged()
    End Sub
    Partial Private Sub Onref_noChanging(value As String)
    End Sub
    Partial Private Sub Onref_noChanged()
    End Sub
    Partial Private Sub Onbook_noChanging(value As String)
    End Sub
    Partial Private Sub Onbook_noChanged()
    End Sub
    Partial Private Sub Onrun_noChanging(value As String)
    End Sub
    Partial Private Sub Onrun_noChanged()
    End Sub
    Partial Private Sub Oncust_idChanging(value As String)
    End Sub
    Partial Private Sub Oncust_idChanged()
    End Sub
    Partial Private Sub Onuser_idChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onuser_idChanged()
    End Sub
    Partial Private Sub OninvoiceChanging(value As String)
    End Sub
    Partial Private Sub OninvoiceChanged()
    End Sub
    Partial Private Sub Ongold_type_idChanging(value As String)
    End Sub
    Partial Private Sub Ongold_type_idChanged()
    End Sub
    Partial Private Sub OndeliveryChanging(value As String)
    End Sub
    Partial Private Sub OndeliveryChanged()
    End Sub
    Partial Private Sub OntypeChanging(value As String)
    End Sub
    Partial Private Sub OntypeChanged()
    End Sub
    Partial Private Sub OnquantityChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnquantityChanged()
    End Sub
    Partial Private Sub OnpriceChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnpriceChanged()
    End Sub
    Partial Private Sub OnamountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnamountChanged()
    End Sub
    Partial Private Sub Ondelivery_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Ondelivery_dateChanged()
    End Sub
    Partial Private Sub Onticket_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onticket_dateChanged()
    End Sub
    Partial Private Sub OnbillingChanging(value As String)
    End Sub
    Partial Private Sub OnbillingChanged()
    End Sub
    Partial Private Sub OncheckerChanging(value As String)
    End Sub
    Partial Private Sub OncheckerChanged()
    End Sub
    Partial Private Sub OnauthorizeChanging(value As String)
    End Sub
    Partial Private Sub OnauthorizeChanged()
    End Sub
    Partial Private Sub OnremarkChanging(value As String)
    End Sub
    Partial Private Sub OnremarkChanged()
    End Sub
    Partial Private Sub OnpaymentChanging(value As String)
    End Sub
    Partial Private Sub OnpaymentChanged()
    End Sub
    Partial Private Sub Onpayment_detailChanging(value As String)
    End Sub
    Partial Private Sub Onpayment_detailChanged()
    End Sub
    Partial Private Sub Onpayment_bankChanging(value As String)
    End Sub
    Partial Private Sub Onpayment_bankChanged()
    End Sub
    Partial Private Sub Onpayment_duedateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onpayment_duedateChanged()
    End Sub
    Partial Private Sub Onpayment_cheq_noChanging(value As String)
    End Sub
    Partial Private Sub Onpayment_cheq_noChanged()
    End Sub
    Partial Private Sub Onstatus_idChanging(value As String)
    End Sub
    Partial Private Sub Onstatus_idChanged()
    End Sub
    Partial Private Sub Onpayment_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onpayment_dateChanged()
    End Sub
    Partial Private Sub Oncreated_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncreated_dateChanged()
    End Sub
    Partial Private Sub Oncreated_byChanging(value As String)
    End Sub
    Partial Private Sub Oncreated_byChanged()
    End Sub
    Partial Private Sub Onmodifier_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onmodifier_dateChanged()
    End Sub
    Partial Private Sub Onmodifier_byChanging(value As String)
    End Sub
    Partial Private Sub Onmodifier_byChanged()
    End Sub
    Partial Private Sub OnactiveChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OnactiveChanged()
    End Sub
    Partial Private Sub Ongold_depChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Ongold_depChanged()
    End Sub
    Partial Private Sub Oncash_receiptChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub Oncash_receiptChanged()
    End Sub
    Partial Private Sub Onbefore_status_idChanging(value As String)
    End Sub
    Partial Private Sub Onbefore_status_idChanged()
    End Sub
    Partial Private Sub OntradeChanging(value As System.Nullable(Of Char))
    End Sub
    Partial Private Sub OntradeChanged()
    End Sub
    Partial Private Sub OnclearingdayChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnclearingdayChanged()
    End Sub
    Partial Private Sub OngramChanging(value As String)
    End Sub
    Partial Private Sub OngramChanged()
    End Sub
    Partial Private Sub Onrows_no_splitChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onrows_no_splitChanged()
    End Sub
    Partial Private Sub Onreceipt_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onreceipt_dateChanged()
    End Sub
    Partial Private Sub Onpayment_idChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub Onpayment_idChanged()
    End Sub
    Partial Private Sub Onpayment_byChanging(value As String)
    End Sub
    Partial Private Sub Onpayment_byChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ticket_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property ticket_id() As Integer
		Get
			Return Me._ticket_id
		End Get
		Set
			If ((Me._ticket_id = value)  _
						= false) Then
				Me.Onticket_idChanging(value)
				Me.SendPropertyChanging
				Me._ticket_id = value
				Me.SendPropertyChanged("ticket_id")
				Me.Onticket_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ref_no", DbType:="VarChar(12)")>  _
	Public Property ref_no() As String
		Get
			Return Me._ref_no
		End Get
		Set
			If (String.Equals(Me._ref_no, value) = false) Then
				Me.Onref_noChanging(value)
				Me.SendPropertyChanging
				Me._ref_no = value
				Me.SendPropertyChanged("ref_no")
				Me.Onref_noChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_book_no", DbType:="VarChar(10)")>  _
	Public Property book_no() As String
		Get
			Return Me._book_no
		End Get
		Set
			If (String.Equals(Me._book_no, value) = false) Then
				Me.Onbook_noChanging(value)
				Me.SendPropertyChanging
				Me._book_no = value
				Me.SendPropertyChanged("book_no")
				Me.Onbook_noChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_run_no", DbType:="VarChar(20)")>  _
	Public Property run_no() As String
		Get
			Return Me._run_no
		End Get
		Set
			If (String.Equals(Me._run_no, value) = false) Then
				Me.Onrun_noChanging(value)
				Me.SendPropertyChanging
				Me._run_no = value
				Me.SendPropertyChanged("run_no")
				Me.Onrun_noChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cust_id", DbType:="VarChar(5)")>  _
	Public Property cust_id() As String
		Get
			Return Me._cust_id
		End Get
		Set
			If (String.Equals(Me._cust_id, value) = false) Then
				Me.Oncust_idChanging(value)
				Me.SendPropertyChanging
				Me._cust_id = value
				Me.SendPropertyChanged("cust_id")
				Me.Oncust_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_user_id", DbType:="Int")>  _
	Public Property user_id() As System.Nullable(Of Integer)
		Get
			Return Me._user_id
		End Get
		Set
			If (Me._user_id.Equals(value) = false) Then
				Me.Onuser_idChanging(value)
				Me.SendPropertyChanging
				Me._user_id = value
				Me.SendPropertyChanged("user_id")
				Me.Onuser_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_invoice", DbType:="VarChar(50)")>  _
	Public Property invoice() As String
		Get
			Return Me._invoice
		End Get
		Set
			If (String.Equals(Me._invoice, value) = false) Then
				Me.OninvoiceChanging(value)
				Me.SendPropertyChanging
				Me._invoice = value
				Me.SendPropertyChanged("invoice")
				Me.OninvoiceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_type_id", DbType:="VarChar(4)")>  _
	Public Property gold_type_id() As String
		Get
			Return Me._gold_type_id
		End Get
		Set
			If (String.Equals(Me._gold_type_id, value) = false) Then
				Me.Ongold_type_idChanging(value)
				Me.SendPropertyChanging
				Me._gold_type_id = value
				Me.SendPropertyChanged("gold_type_id")
				Me.Ongold_type_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delivery", DbType:="VarChar(10)")>  _
	Public Property delivery() As String
		Get
			Return Me._delivery
		End Get
		Set
			If (String.Equals(Me._delivery, value) = false) Then
				Me.OndeliveryChanging(value)
				Me.SendPropertyChanging
				Me._delivery = value
				Me.SendPropertyChanged("delivery")
				Me.OndeliveryChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_type", DbType:="VarChar(5)")>  _
	Public Property type() As String
		Get
			Return Me._type
		End Get
		Set
			If (String.Equals(Me._type, value) = false) Then
				Me.OntypeChanging(value)
				Me.SendPropertyChanging
				Me._type = value
				Me.SendPropertyChanged("type")
				Me.OntypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quantity", DbType:="Decimal(18,5)")>  _
	Public Property quantity() As System.Nullable(Of Decimal)
		Get
			Return Me._quantity
		End Get
		Set
			If (Me._quantity.Equals(value) = false) Then
				Me.OnquantityChanging(value)
				Me.SendPropertyChanging
				Me._quantity = value
				Me.SendPropertyChanged("quantity")
				Me.OnquantityChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_price", DbType:="Decimal(18,2)")>  _
	Public Property price() As System.Nullable(Of Decimal)
		Get
			Return Me._price
		End Get
		Set
			If (Me._price.Equals(value) = false) Then
				Me.OnpriceChanging(value)
				Me.SendPropertyChanging
				Me._price = value
				Me.SendPropertyChanged("price")
				Me.OnpriceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amount", DbType:="Decimal(18,2)")>  _
	Public Property amount() As System.Nullable(Of Decimal)
		Get
			Return Me._amount
		End Get
		Set
			If (Me._amount.Equals(value) = false) Then
				Me.OnamountChanging(value)
				Me.SendPropertyChanging
				Me._amount = value
				Me.SendPropertyChanged("amount")
				Me.OnamountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delivery_date", DbType:="DateTime")>  _
	Public Property delivery_date() As System.Nullable(Of Date)
		Get
			Return Me._delivery_date
		End Get
		Set
			If (Me._delivery_date.Equals(value) = false) Then
				Me.Ondelivery_dateChanging(value)
				Me.SendPropertyChanging
				Me._delivery_date = value
				Me.SendPropertyChanged("delivery_date")
				Me.Ondelivery_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ticket_date", DbType:="DateTime")>  _
	Public Property ticket_date() As System.Nullable(Of Date)
		Get
			Return Me._ticket_date
		End Get
		Set
			If (Me._ticket_date.Equals(value) = false) Then
				Me.Onticket_dateChanging(value)
				Me.SendPropertyChanging
				Me._ticket_date = value
				Me.SendPropertyChanged("ticket_date")
				Me.Onticket_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_billing", DbType:="VarChar(5)")>  _
	Public Property billing() As String
		Get
			Return Me._billing
		End Get
		Set
			If (String.Equals(Me._billing, value) = false) Then
				Me.OnbillingChanging(value)
				Me.SendPropertyChanging
				Me._billing = value
				Me.SendPropertyChanged("billing")
				Me.OnbillingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_checker", DbType:="VarChar(50)")>  _
	Public Property checker() As String
		Get
			Return Me._checker
		End Get
		Set
			If (String.Equals(Me._checker, value) = false) Then
				Me.OncheckerChanging(value)
				Me.SendPropertyChanging
				Me._checker = value
				Me.SendPropertyChanged("checker")
				Me.OncheckerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_authorize", DbType:="VarChar(50)")>  _
	Public Property authorize() As String
		Get
			Return Me._authorize
		End Get
		Set
			If (String.Equals(Me._authorize, value) = false) Then
				Me.OnauthorizeChanging(value)
				Me.SendPropertyChanging
				Me._authorize = value
				Me.SendPropertyChanged("authorize")
				Me.OnauthorizeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_remark", DbType:="VarChar(4000)")>  _
	Public Property remark() As String
		Get
			Return Me._remark
		End Get
		Set
			If (String.Equals(Me._remark, value) = false) Then
				Me.OnremarkChanging(value)
				Me.SendPropertyChanging
				Me._remark = value
				Me.SendPropertyChanged("remark")
				Me.OnremarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment", DbType:="VarChar(50)")>  _
	Public Property payment() As String
		Get
			Return Me._payment
		End Get
		Set
			If (String.Equals(Me._payment, value) = false) Then
				Me.OnpaymentChanging(value)
				Me.SendPropertyChanging
				Me._payment = value
				Me.SendPropertyChanged("payment")
				Me.OnpaymentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_detail", DbType:="VarChar(500)")>  _
	Public Property payment_detail() As String
		Get
			Return Me._payment_detail
		End Get
		Set
			If (String.Equals(Me._payment_detail, value) = false) Then
				Me.Onpayment_detailChanging(value)
				Me.SendPropertyChanging
				Me._payment_detail = value
				Me.SendPropertyChanged("payment_detail")
				Me.Onpayment_detailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_bank", DbType:="VarChar(10)")>  _
	Public Property payment_bank() As String
		Get
			Return Me._payment_bank
		End Get
		Set
			If (String.Equals(Me._payment_bank, value) = false) Then
				Me.Onpayment_bankChanging(value)
				Me.SendPropertyChanging
				Me._payment_bank = value
				Me.SendPropertyChanged("payment_bank")
				Me.Onpayment_bankChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_duedate", DbType:="DateTime")>  _
	Public Property payment_duedate() As System.Nullable(Of Date)
		Get
			Return Me._payment_duedate
		End Get
		Set
			If (Me._payment_duedate.Equals(value) = false) Then
				Me.Onpayment_duedateChanging(value)
				Me.SendPropertyChanging
				Me._payment_duedate = value
				Me.SendPropertyChanged("payment_duedate")
				Me.Onpayment_duedateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_cheq_no", DbType:="VarChar(50)")>  _
	Public Property payment_cheq_no() As String
		Get
			Return Me._payment_cheq_no
		End Get
		Set
			If (String.Equals(Me._payment_cheq_no, value) = false) Then
				Me.Onpayment_cheq_noChanging(value)
				Me.SendPropertyChanging
				Me._payment_cheq_no = value
				Me.SendPropertyChanged("payment_cheq_no")
				Me.Onpayment_cheq_noChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status_id", DbType:="VarChar(5)")>  _
	Public Property status_id() As String
		Get
			Return Me._status_id
		End Get
		Set
			If (String.Equals(Me._status_id, value) = false) Then
				Me.Onstatus_idChanging(value)
				Me.SendPropertyChanging
				Me._status_id = value
				Me.SendPropertyChanged("status_id")
				Me.Onstatus_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_date", DbType:="DateTime")>  _
	Public Property payment_date() As System.Nullable(Of Date)
		Get
			Return Me._payment_date
		End Get
		Set
			If (Me._payment_date.Equals(value) = false) Then
				Me.Onpayment_dateChanging(value)
				Me.SendPropertyChanging
				Me._payment_date = value
				Me.SendPropertyChanged("payment_date")
				Me.Onpayment_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_created_date", DbType:="DateTime")>  _
	Public Property created_date() As System.Nullable(Of Date)
		Get
			Return Me._created_date
		End Get
		Set
			If (Me._created_date.Equals(value) = false) Then
				Me.Oncreated_dateChanging(value)
				Me.SendPropertyChanging
				Me._created_date = value
				Me.SendPropertyChanged("created_date")
				Me.Oncreated_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_created_by", DbType:="VarChar(10)")>  _
	Public Property created_by() As String
		Get
			Return Me._created_by
		End Get
		Set
			If (String.Equals(Me._created_by, value) = false) Then
				Me.Oncreated_byChanging(value)
				Me.SendPropertyChanging
				Me._created_by = value
				Me.SendPropertyChanged("created_by")
				Me.Oncreated_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modifier_date", DbType:="DateTime")>  _
	Public Property modifier_date() As System.Nullable(Of Date)
		Get
			Return Me._modifier_date
		End Get
		Set
			If (Me._modifier_date.Equals(value) = false) Then
				Me.Onmodifier_dateChanging(value)
				Me.SendPropertyChanging
				Me._modifier_date = value
				Me.SendPropertyChanged("modifier_date")
				Me.Onmodifier_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modifier_by", DbType:="VarChar(10)")>  _
	Public Property modifier_by() As String
		Get
			Return Me._modifier_by
		End Get
		Set
			If (String.Equals(Me._modifier_by, value) = false) Then
				Me.Onmodifier_byChanging(value)
				Me.SendPropertyChanging
				Me._modifier_by = value
				Me.SendPropertyChanged("modifier_by")
				Me.Onmodifier_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_active", DbType:="NChar(1)")>  _
	Public Property active() As System.Nullable(Of Char)
		Get
			Return Me._active
		End Get
		Set
			If (Me._active.Equals(value) = false) Then
				Me.OnactiveChanging(value)
				Me.SendPropertyChanging
				Me._active = value
				Me.SendPropertyChanged("active")
				Me.OnactiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_dep", DbType:="NChar(1)")>  _
	Public Property gold_dep() As System.Nullable(Of Char)
		Get
			Return Me._gold_dep
		End Get
		Set
			If (Me._gold_dep.Equals(value) = false) Then
				Me.Ongold_depChanging(value)
				Me.SendPropertyChanging
				Me._gold_dep = value
				Me.SendPropertyChanged("gold_dep")
				Me.Ongold_depChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash_receipt", DbType:="NChar(1)")>  _
	Public Property cash_receipt() As System.Nullable(Of Char)
		Get
			Return Me._cash_receipt
		End Get
		Set
			If (Me._cash_receipt.Equals(value) = false) Then
				Me.Oncash_receiptChanging(value)
				Me.SendPropertyChanging
				Me._cash_receipt = value
				Me.SendPropertyChanged("cash_receipt")
				Me.Oncash_receiptChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_before_status_id", DbType:="VarChar(5)")>  _
	Public Property before_status_id() As String
		Get
			Return Me._before_status_id
		End Get
		Set
			If (String.Equals(Me._before_status_id, value) = false) Then
				Me.Onbefore_status_idChanging(value)
				Me.SendPropertyChanging
				Me._before_status_id = value
				Me.SendPropertyChanged("before_status_id")
				Me.Onbefore_status_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trade", DbType:="NChar(1)")>  _
	Public Property trade() As System.Nullable(Of Char)
		Get
			Return Me._trade
		End Get
		Set
			If (Me._trade.Equals(value) = false) Then
				Me.OntradeChanging(value)
				Me.SendPropertyChanging
				Me._trade = value
				Me.SendPropertyChanged("trade")
				Me.OntradeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clearingday", DbType:="Int")>  _
	Public Property clearingday() As System.Nullable(Of Integer)
		Get
			Return Me._clearingday
		End Get
		Set
			If (Me._clearingday.Equals(value) = false) Then
				Me.OnclearingdayChanging(value)
				Me.SendPropertyChanging
				Me._clearingday = value
				Me.SendPropertyChanged("clearingday")
				Me.OnclearingdayChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gram", DbType:="VarChar(1)")>  _
	Public Property gram() As String
		Get
			Return Me._gram
		End Get
		Set
			If (String.Equals(Me._gram, value) = false) Then
				Me.OngramChanging(value)
				Me.SendPropertyChanging
				Me._gram = value
				Me.SendPropertyChanged("gram")
				Me.OngramChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rows_no_split", DbType:="Int")>  _
	Public Property rows_no_split() As System.Nullable(Of Integer)
		Get
			Return Me._rows_no_split
		End Get
		Set
			If (Me._rows_no_split.Equals(value) = false) Then
				Me.Onrows_no_splitChanging(value)
				Me.SendPropertyChanging
				Me._rows_no_split = value
				Me.SendPropertyChanged("rows_no_split")
				Me.Onrows_no_splitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_receipt_date", DbType:="Date")>  _
	Public Property receipt_date() As System.Nullable(Of Date)
		Get
			Return Me._receipt_date
		End Get
		Set
			If (Me._receipt_date.Equals(value) = false) Then
				Me.Onreceipt_dateChanging(value)
				Me.SendPropertyChanging
				Me._receipt_date = value
				Me.SendPropertyChanged("receipt_date")
				Me.Onreceipt_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_id", DbType:="Int")>  _
	Public Property payment_id() As System.Nullable(Of Integer)
		Get
			Return Me._payment_id
		End Get
		Set
			If (Me._payment_id.Equals(value) = false) Then
				Me.Onpayment_idChanging(value)
				Me.SendPropertyChanging
				Me._payment_id = value
				Me.SendPropertyChanged("payment_id")
				Me.Onpayment_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_by", DbType:="VarChar(50)")>  _
	Public Property payment_by() As String
		Get
			Return Me._payment_by
		End Get
		Set
			If (String.Equals(Me._payment_by, value) = false) Then
				Me.Onpayment_byChanging(value)
				Me.SendPropertyChanging
				Me._payment_by = value
				Me.SendPropertyChanged("payment_by")
				Me.Onpayment_byChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.v_ticket_sum_split")>  _
Partial Public Class v_ticket_sum_split
	
	Private _ticket_id As Integer
	
	Private _ref_no As String
	
	Private _book_no As String
	
	Private _run_no As String
	
	Private _cust_id As String
	
	Private _user_id As System.Nullable(Of Integer)
	
	Private _gold_type_id As String
	
	Private _delivery As String
	
	Private _type As String
	
	Private _quantity As System.Nullable(Of Decimal)
	
	Private _price As System.Nullable(Of Decimal)
	
	Private _amount As System.Nullable(Of Decimal)
	
	Private _delivery_date As System.Nullable(Of Date)
	
	Private _ticket_date As System.Nullable(Of Date)
	
	Private _billing As String
	
	Private _checker As String
	
	Private _authorize As String
	
	Private _remark As String
	
	Private _payment As String
	
	Private _payment_detail As String
	
	Private _payment_bank As String
	
	Private _payment_duedate As System.Nullable(Of Date)
	
	Private _payment_cheq_no As String
	
	Private _status_id As String
	
	Private _payment_date As System.Nullable(Of Date)
	
	Private _created_date As System.Nullable(Of Date)
	
	Private _created_by As String
	
	Private _modifier_date As System.Nullable(Of Date)
	
	Private _modifier_by As String
	
	Private _sp_quan As System.Nullable(Of Decimal)
	
	Private _sp_price As System.Nullable(Of Decimal)
	
	Private _sp_amount As System.Nullable(Of Decimal)
	
	Private _active As System.Nullable(Of Char)
	
	Private _gold_dep As System.Nullable(Of Char)
	
	Private _invoice As String
	
	Private _before_status_id As String
	
	Private _trade As System.Nullable(Of Char)
	
	Private _payment_id As System.Nullable(Of Integer)
	
	Private _payment_by As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ticket_id", DbType:="Int NOT NULL")>  _
	Public Property ticket_id() As Integer
		Get
			Return Me._ticket_id
		End Get
		Set
			If ((Me._ticket_id = value)  _
						= false) Then
				Me._ticket_id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ref_no", DbType:="VarChar(12)")>  _
	Public Property ref_no() As String
		Get
			Return Me._ref_no
		End Get
		Set
			If (String.Equals(Me._ref_no, value) = false) Then
				Me._ref_no = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_book_no", DbType:="VarChar(10)")>  _
	Public Property book_no() As String
		Get
			Return Me._book_no
		End Get
		Set
			If (String.Equals(Me._book_no, value) = false) Then
				Me._book_no = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_run_no", DbType:="VarChar(20)")>  _
	Public Property run_no() As String
		Get
			Return Me._run_no
		End Get
		Set
			If (String.Equals(Me._run_no, value) = false) Then
				Me._run_no = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cust_id", DbType:="VarChar(5)")>  _
	Public Property cust_id() As String
		Get
			Return Me._cust_id
		End Get
		Set
			If (String.Equals(Me._cust_id, value) = false) Then
				Me._cust_id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_user_id", DbType:="Int")>  _
	Public Property user_id() As System.Nullable(Of Integer)
		Get
			Return Me._user_id
		End Get
		Set
			If (Me._user_id.Equals(value) = false) Then
				Me._user_id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_type_id", DbType:="VarChar(4)")>  _
	Public Property gold_type_id() As String
		Get
			Return Me._gold_type_id
		End Get
		Set
			If (String.Equals(Me._gold_type_id, value) = false) Then
				Me._gold_type_id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delivery", DbType:="VarChar(10)")>  _
	Public Property delivery() As String
		Get
			Return Me._delivery
		End Get
		Set
			If (String.Equals(Me._delivery, value) = false) Then
				Me._delivery = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_type", DbType:="VarChar(5)")>  _
	Public Property type() As String
		Get
			Return Me._type
		End Get
		Set
			If (String.Equals(Me._type, value) = false) Then
				Me._type = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quantity", DbType:="Decimal(38,5)")>  _
	Public Property quantity() As System.Nullable(Of Decimal)
		Get
			Return Me._quantity
		End Get
		Set
			If (Me._quantity.Equals(value) = false) Then
				Me._quantity = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_price", DbType:="Decimal(18,2)")>  _
	Public Property price() As System.Nullable(Of Decimal)
		Get
			Return Me._price
		End Get
		Set
			If (Me._price.Equals(value) = false) Then
				Me._price = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amount", DbType:="Decimal(38,3)")>  _
	Public Property amount() As System.Nullable(Of Decimal)
		Get
			Return Me._amount
		End Get
		Set
			If (Me._amount.Equals(value) = false) Then
				Me._amount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_delivery_date", DbType:="DateTime")>  _
	Public Property delivery_date() As System.Nullable(Of Date)
		Get
			Return Me._delivery_date
		End Get
		Set
			If (Me._delivery_date.Equals(value) = false) Then
				Me._delivery_date = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ticket_date", DbType:="DateTime")>  _
	Public Property ticket_date() As System.Nullable(Of Date)
		Get
			Return Me._ticket_date
		End Get
		Set
			If (Me._ticket_date.Equals(value) = false) Then
				Me._ticket_date = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_billing", DbType:="VarChar(5)")>  _
	Public Property billing() As String
		Get
			Return Me._billing
		End Get
		Set
			If (String.Equals(Me._billing, value) = false) Then
				Me._billing = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_checker", DbType:="VarChar(50)")>  _
	Public Property checker() As String
		Get
			Return Me._checker
		End Get
		Set
			If (String.Equals(Me._checker, value) = false) Then
				Me._checker = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_authorize", DbType:="VarChar(50)")>  _
	Public Property authorize() As String
		Get
			Return Me._authorize
		End Get
		Set
			If (String.Equals(Me._authorize, value) = false) Then
				Me._authorize = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_remark", DbType:="VarChar(4000)")>  _
	Public Property remark() As String
		Get
			Return Me._remark
		End Get
		Set
			If (String.Equals(Me._remark, value) = false) Then
				Me._remark = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment", DbType:="VarChar(50)")>  _
	Public Property payment() As String
		Get
			Return Me._payment
		End Get
		Set
			If (String.Equals(Me._payment, value) = false) Then
				Me._payment = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_detail", DbType:="VarChar(500)")>  _
	Public Property payment_detail() As String
		Get
			Return Me._payment_detail
		End Get
		Set
			If (String.Equals(Me._payment_detail, value) = false) Then
				Me._payment_detail = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_bank", DbType:="VarChar(10)")>  _
	Public Property payment_bank() As String
		Get
			Return Me._payment_bank
		End Get
		Set
			If (String.Equals(Me._payment_bank, value) = false) Then
				Me._payment_bank = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_duedate", DbType:="DateTime")>  _
	Public Property payment_duedate() As System.Nullable(Of Date)
		Get
			Return Me._payment_duedate
		End Get
		Set
			If (Me._payment_duedate.Equals(value) = false) Then
				Me._payment_duedate = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_cheq_no", DbType:="VarChar(50)")>  _
	Public Property payment_cheq_no() As String
		Get
			Return Me._payment_cheq_no
		End Get
		Set
			If (String.Equals(Me._payment_cheq_no, value) = false) Then
				Me._payment_cheq_no = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status_id", DbType:="VarChar(5)")>  _
	Public Property status_id() As String
		Get
			Return Me._status_id
		End Get
		Set
			If (String.Equals(Me._status_id, value) = false) Then
				Me._status_id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_date", DbType:="DateTime")>  _
	Public Property payment_date() As System.Nullable(Of Date)
		Get
			Return Me._payment_date
		End Get
		Set
			If (Me._payment_date.Equals(value) = false) Then
				Me._payment_date = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_created_date", DbType:="DateTime")>  _
	Public Property created_date() As System.Nullable(Of Date)
		Get
			Return Me._created_date
		End Get
		Set
			If (Me._created_date.Equals(value) = false) Then
				Me._created_date = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_created_by", DbType:="VarChar(10)")>  _
	Public Property created_by() As String
		Get
			Return Me._created_by
		End Get
		Set
			If (String.Equals(Me._created_by, value) = false) Then
				Me._created_by = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modifier_date", DbType:="DateTime")>  _
	Public Property modifier_date() As System.Nullable(Of Date)
		Get
			Return Me._modifier_date
		End Get
		Set
			If (Me._modifier_date.Equals(value) = false) Then
				Me._modifier_date = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modifier_by", DbType:="VarChar(10)")>  _
	Public Property modifier_by() As String
		Get
			Return Me._modifier_by
		End Get
		Set
			If (String.Equals(Me._modifier_by, value) = false) Then
				Me._modifier_by = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sp_quan", DbType:="Decimal(38,5)")>  _
	Public Property sp_quan() As System.Nullable(Of Decimal)
		Get
			Return Me._sp_quan
		End Get
		Set
			If (Me._sp_quan.Equals(value) = false) Then
				Me._sp_quan = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sp_price", DbType:="Decimal(38,3)")>  _
	Public Property sp_price() As System.Nullable(Of Decimal)
		Get
			Return Me._sp_price
		End Get
		Set
			If (Me._sp_price.Equals(value) = false) Then
				Me._sp_price = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sp_amount", DbType:="Decimal(38,3)")>  _
	Public Property sp_amount() As System.Nullable(Of Decimal)
		Get
			Return Me._sp_amount
		End Get
		Set
			If (Me._sp_amount.Equals(value) = false) Then
				Me._sp_amount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_active", DbType:="NChar(1)")>  _
	Public Property active() As System.Nullable(Of Char)
		Get
			Return Me._active
		End Get
		Set
			If (Me._active.Equals(value) = false) Then
				Me._active = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_dep", DbType:="NChar(1)")>  _
	Public Property gold_dep() As System.Nullable(Of Char)
		Get
			Return Me._gold_dep
		End Get
		Set
			If (Me._gold_dep.Equals(value) = false) Then
				Me._gold_dep = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_invoice", DbType:="VarChar(50)")>  _
	Public Property invoice() As String
		Get
			Return Me._invoice
		End Get
		Set
			If (String.Equals(Me._invoice, value) = false) Then
				Me._invoice = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_before_status_id", DbType:="VarChar(5)")>  _
	Public Property before_status_id() As String
		Get
			Return Me._before_status_id
		End Get
		Set
			If (String.Equals(Me._before_status_id, value) = false) Then
				Me._before_status_id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trade", DbType:="NChar(1)")>  _
	Public Property trade() As System.Nullable(Of Char)
		Get
			Return Me._trade
		End Get
		Set
			If (Me._trade.Equals(value) = false) Then
				Me._trade = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_id", DbType:="Int")>  _
	Public Property payment_id() As System.Nullable(Of Integer)
		Get
			Return Me._payment_id
		End Get
		Set
			If (Me._payment_id.Equals(value) = false) Then
				Me._payment_id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_by", DbType:="VarChar(50)")>  _
	Public Property payment_by() As String
		Get
			Return Me._payment_by
		End Get
		Set
			If (String.Equals(Me._payment_by, value) = false) Then
				Me._payment_by = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.v_payment")>  _
Partial Public Class v_payment
	
	Private _payment_id As System.Nullable(Of Integer)
	
	Private _gold_type_id As String
	
	Private _cust_id As String
	
	Private _amount As System.Nullable(Of Decimal)
	
	Private _quantity As System.Nullable(Of Decimal)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_id", DbType:="Int")>  _
	Public Property payment_id() As System.Nullable(Of Integer)
		Get
			Return Me._payment_id
		End Get
		Set
			If (Me._payment_id.Equals(value) = false) Then
				Me._payment_id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_type_id", DbType:="VarChar(4)")>  _
	Public Property gold_type_id() As String
		Get
			Return Me._gold_type_id
		End Get
		Set
			If (String.Equals(Me._gold_type_id, value) = false) Then
				Me._gold_type_id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cust_id", DbType:="VarChar(5)")>  _
	Public Property cust_id() As String
		Get
			Return Me._cust_id
		End Get
		Set
			If (String.Equals(Me._cust_id, value) = false) Then
				Me._cust_id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amount", DbType:="Decimal(38,2)")>  _
	Public Property amount() As System.Nullable(Of Decimal)
		Get
			Return Me._amount
		End Get
		Set
			If (Me._amount.Equals(value) = false) Then
				Me._amount = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quantity", DbType:="Decimal(38,5)")>  _
	Public Property quantity() As System.Nullable(Of Decimal)
		Get
			Return Me._quantity
		End Get
		Set
			If (Me._quantity.Equals(value) = false) Then
				Me._quantity = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.stock")>  _
Partial Public Class stock
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _stock_id As Integer
	
	Private _gold_base As System.Nullable(Of Decimal)
	
	Private _gold As System.Nullable(Of Decimal)
	
	Private _gold_wait As System.Nullable(Of Decimal)
	
	Private _cash As System.Nullable(Of Decimal)
	
	Private _trans As System.Nullable(Of Decimal)
	
	Private _cheq As System.Nullable(Of Decimal)
	
	Private _cash_wait As System.Nullable(Of Decimal)
	
	Private _trans_wait As System.Nullable(Of Decimal)
	
	Private _cheq_wait As System.Nullable(Of Decimal)
	
	Private _cash_nobill As System.Nullable(Of Decimal)
	
	Private _trans_nobill As System.Nullable(Of Decimal)
	
	Private _cheq_nobill As System.Nullable(Of Decimal)
	
	Private _cash_wait_nobill As System.Nullable(Of Decimal)
	
	Private _trans_wait_nobill As System.Nullable(Of Decimal)
	
	Private _cheq_wait_nobill As System.Nullable(Of Decimal)
	
	Private _margin As System.Nullable(Of Double)
	
	Private _margin_call As System.Nullable(Of Double)
	
	Private _price_now As System.Nullable(Of Decimal)
	
	Private _bid96 As System.Nullable(Of Decimal)
	
	Private _bid99 As System.Nullable(Of Decimal)
	
	Private _ask96 As System.Nullable(Of Decimal)
	
	Private _ask99 As System.Nullable(Of Decimal)
	
	Private _pwd_auth As String
	
	Private _price_base As System.Nullable(Of Decimal)
	
	Private _G96_base As System.Nullable(Of Decimal)
	
	Private _G96G_base As System.Nullable(Of Decimal)
	
	Private _G99_base As System.Nullable(Of Decimal)
	
	Private _price_branch As System.Nullable(Of Decimal)
	
	Private _G96_branch As System.Nullable(Of Decimal)
	
	Private _G99N_branch As System.Nullable(Of Decimal)
	
	Private _G99L_branch As System.Nullable(Of Decimal)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onstock_idChanging(value As Integer)
    End Sub
    Partial Private Sub Onstock_idChanged()
    End Sub
    Partial Private Sub Ongold_baseChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ongold_baseChanged()
    End Sub
    Partial Private Sub OngoldChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OngoldChanged()
    End Sub
    Partial Private Sub Ongold_waitChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ongold_waitChanged()
    End Sub
    Partial Private Sub OncashChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OncashChanged()
    End Sub
    Partial Private Sub OntransChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OntransChanged()
    End Sub
    Partial Private Sub OncheqChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OncheqChanged()
    End Sub
    Partial Private Sub Oncash_waitChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncash_waitChanged()
    End Sub
    Partial Private Sub Ontrans_waitChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ontrans_waitChanged()
    End Sub
    Partial Private Sub Oncheq_waitChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncheq_waitChanged()
    End Sub
    Partial Private Sub Oncash_nobillChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncash_nobillChanged()
    End Sub
    Partial Private Sub Ontrans_nobillChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ontrans_nobillChanged()
    End Sub
    Partial Private Sub Oncheq_nobillChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncheq_nobillChanged()
    End Sub
    Partial Private Sub Oncash_wait_nobillChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncash_wait_nobillChanged()
    End Sub
    Partial Private Sub Ontrans_wait_nobillChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Ontrans_wait_nobillChanged()
    End Sub
    Partial Private Sub Oncheq_wait_nobillChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Oncheq_wait_nobillChanged()
    End Sub
    Partial Private Sub OnmarginChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnmarginChanged()
    End Sub
    Partial Private Sub Onmargin_callChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub Onmargin_callChanged()
    End Sub
    Partial Private Sub Onprice_nowChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onprice_nowChanged()
    End Sub
    Partial Private Sub Onbid96Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onbid96Changed()
    End Sub
    Partial Private Sub Onbid99Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onbid99Changed()
    End Sub
    Partial Private Sub Onask96Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onask96Changed()
    End Sub
    Partial Private Sub Onask99Changing(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onask99Changed()
    End Sub
    Partial Private Sub Onpwd_authChanging(value As String)
    End Sub
    Partial Private Sub Onpwd_authChanged()
    End Sub
    Partial Private Sub Onprice_baseChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onprice_baseChanged()
    End Sub
    Partial Private Sub OnG96_baseChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnG96_baseChanged()
    End Sub
    Partial Private Sub OnG96G_baseChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnG96G_baseChanged()
    End Sub
    Partial Private Sub OnG99_baseChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnG99_baseChanged()
    End Sub
    Partial Private Sub Onprice_branchChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onprice_branchChanged()
    End Sub
    Partial Private Sub OnG96_branchChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnG96_branchChanged()
    End Sub
    Partial Private Sub OnG99N_branchChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnG99N_branchChanged()
    End Sub
    Partial Private Sub OnG99L_branchChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnG99L_branchChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stock_id", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property stock_id() As Integer
		Get
			Return Me._stock_id
		End Get
		Set
			If ((Me._stock_id = value)  _
						= false) Then
				Me.Onstock_idChanging(value)
				Me.SendPropertyChanging
				Me._stock_id = value
				Me.SendPropertyChanged("stock_id")
				Me.Onstock_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_base", DbType:="Decimal(18,2)")>  _
	Public Property gold_base() As System.Nullable(Of Decimal)
		Get
			Return Me._gold_base
		End Get
		Set
			If (Me._gold_base.Equals(value) = false) Then
				Me.Ongold_baseChanging(value)
				Me.SendPropertyChanging
				Me._gold_base = value
				Me.SendPropertyChanged("gold_base")
				Me.Ongold_baseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold", DbType:="Decimal(18,2)")>  _
	Public Property gold() As System.Nullable(Of Decimal)
		Get
			Return Me._gold
		End Get
		Set
			If (Me._gold.Equals(value) = false) Then
				Me.OngoldChanging(value)
				Me.SendPropertyChanging
				Me._gold = value
				Me.SendPropertyChanged("gold")
				Me.OngoldChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_wait", DbType:="Decimal(18,2)")>  _
	Public Property gold_wait() As System.Nullable(Of Decimal)
		Get
			Return Me._gold_wait
		End Get
		Set
			If (Me._gold_wait.Equals(value) = false) Then
				Me.Ongold_waitChanging(value)
				Me.SendPropertyChanging
				Me._gold_wait = value
				Me.SendPropertyChanged("gold_wait")
				Me.Ongold_waitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash", DbType:="Decimal(18,2)")>  _
	Public Property cash() As System.Nullable(Of Decimal)
		Get
			Return Me._cash
		End Get
		Set
			If (Me._cash.Equals(value) = false) Then
				Me.OncashChanging(value)
				Me.SendPropertyChanging
				Me._cash = value
				Me.SendPropertyChanged("cash")
				Me.OncashChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trans", DbType:="Decimal(18,2)")>  _
	Public Property trans() As System.Nullable(Of Decimal)
		Get
			Return Me._trans
		End Get
		Set
			If (Me._trans.Equals(value) = false) Then
				Me.OntransChanging(value)
				Me.SendPropertyChanging
				Me._trans = value
				Me.SendPropertyChanged("trans")
				Me.OntransChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cheq", DbType:="Decimal(18,2)")>  _
	Public Property cheq() As System.Nullable(Of Decimal)
		Get
			Return Me._cheq
		End Get
		Set
			If (Me._cheq.Equals(value) = false) Then
				Me.OncheqChanging(value)
				Me.SendPropertyChanging
				Me._cheq = value
				Me.SendPropertyChanged("cheq")
				Me.OncheqChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash_wait", DbType:="Decimal(18,2)")>  _
	Public Property cash_wait() As System.Nullable(Of Decimal)
		Get
			Return Me._cash_wait
		End Get
		Set
			If (Me._cash_wait.Equals(value) = false) Then
				Me.Oncash_waitChanging(value)
				Me.SendPropertyChanging
				Me._cash_wait = value
				Me.SendPropertyChanged("cash_wait")
				Me.Oncash_waitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trans_wait", DbType:="Decimal(18,2)")>  _
	Public Property trans_wait() As System.Nullable(Of Decimal)
		Get
			Return Me._trans_wait
		End Get
		Set
			If (Me._trans_wait.Equals(value) = false) Then
				Me.Ontrans_waitChanging(value)
				Me.SendPropertyChanging
				Me._trans_wait = value
				Me.SendPropertyChanged("trans_wait")
				Me.Ontrans_waitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cheq_wait", DbType:="Decimal(18,2)")>  _
	Public Property cheq_wait() As System.Nullable(Of Decimal)
		Get
			Return Me._cheq_wait
		End Get
		Set
			If (Me._cheq_wait.Equals(value) = false) Then
				Me.Oncheq_waitChanging(value)
				Me.SendPropertyChanging
				Me._cheq_wait = value
				Me.SendPropertyChanged("cheq_wait")
				Me.Oncheq_waitChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash_nobill", DbType:="Decimal(18,2)")>  _
	Public Property cash_nobill() As System.Nullable(Of Decimal)
		Get
			Return Me._cash_nobill
		End Get
		Set
			If (Me._cash_nobill.Equals(value) = false) Then
				Me.Oncash_nobillChanging(value)
				Me.SendPropertyChanging
				Me._cash_nobill = value
				Me.SendPropertyChanged("cash_nobill")
				Me.Oncash_nobillChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trans_nobill", DbType:="Decimal(18,2)")>  _
	Public Property trans_nobill() As System.Nullable(Of Decimal)
		Get
			Return Me._trans_nobill
		End Get
		Set
			If (Me._trans_nobill.Equals(value) = false) Then
				Me.Ontrans_nobillChanging(value)
				Me.SendPropertyChanging
				Me._trans_nobill = value
				Me.SendPropertyChanged("trans_nobill")
				Me.Ontrans_nobillChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cheq_nobill", DbType:="Decimal(18,2)")>  _
	Public Property cheq_nobill() As System.Nullable(Of Decimal)
		Get
			Return Me._cheq_nobill
		End Get
		Set
			If (Me._cheq_nobill.Equals(value) = false) Then
				Me.Oncheq_nobillChanging(value)
				Me.SendPropertyChanging
				Me._cheq_nobill = value
				Me.SendPropertyChanged("cheq_nobill")
				Me.Oncheq_nobillChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash_wait_nobill", DbType:="Decimal(18,2)")>  _
	Public Property cash_wait_nobill() As System.Nullable(Of Decimal)
		Get
			Return Me._cash_wait_nobill
		End Get
		Set
			If (Me._cash_wait_nobill.Equals(value) = false) Then
				Me.Oncash_wait_nobillChanging(value)
				Me.SendPropertyChanging
				Me._cash_wait_nobill = value
				Me.SendPropertyChanged("cash_wait_nobill")
				Me.Oncash_wait_nobillChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trans_wait_nobill", DbType:="Decimal(18,2)")>  _
	Public Property trans_wait_nobill() As System.Nullable(Of Decimal)
		Get
			Return Me._trans_wait_nobill
		End Get
		Set
			If (Me._trans_wait_nobill.Equals(value) = false) Then
				Me.Ontrans_wait_nobillChanging(value)
				Me.SendPropertyChanging
				Me._trans_wait_nobill = value
				Me.SendPropertyChanged("trans_wait_nobill")
				Me.Ontrans_wait_nobillChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cheq_wait_nobill", DbType:="Decimal(18,2)")>  _
	Public Property cheq_wait_nobill() As System.Nullable(Of Decimal)
		Get
			Return Me._cheq_wait_nobill
		End Get
		Set
			If (Me._cheq_wait_nobill.Equals(value) = false) Then
				Me.Oncheq_wait_nobillChanging(value)
				Me.SendPropertyChanging
				Me._cheq_wait_nobill = value
				Me.SendPropertyChanged("cheq_wait_nobill")
				Me.Oncheq_wait_nobillChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_margin", DbType:="Float")>  _
	Public Property margin() As System.Nullable(Of Double)
		Get
			Return Me._margin
		End Get
		Set
			If (Me._margin.Equals(value) = false) Then
				Me.OnmarginChanging(value)
				Me.SendPropertyChanging
				Me._margin = value
				Me.SendPropertyChanged("margin")
				Me.OnmarginChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_margin_call", DbType:="Float")>  _
	Public Property margin_call() As System.Nullable(Of Double)
		Get
			Return Me._margin_call
		End Get
		Set
			If (Me._margin_call.Equals(value) = false) Then
				Me.Onmargin_callChanging(value)
				Me.SendPropertyChanging
				Me._margin_call = value
				Me.SendPropertyChanged("margin_call")
				Me.Onmargin_callChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_price_now", DbType:="Decimal(18,2)")>  _
	Public Property price_now() As System.Nullable(Of Decimal)
		Get
			Return Me._price_now
		End Get
		Set
			If (Me._price_now.Equals(value) = false) Then
				Me.Onprice_nowChanging(value)
				Me.SendPropertyChanging
				Me._price_now = value
				Me.SendPropertyChanged("price_now")
				Me.Onprice_nowChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid96", DbType:="Decimal(18,2)")>  _
	Public Property bid96() As System.Nullable(Of Decimal)
		Get
			Return Me._bid96
		End Get
		Set
			If (Me._bid96.Equals(value) = false) Then
				Me.Onbid96Changing(value)
				Me.SendPropertyChanging
				Me._bid96 = value
				Me.SendPropertyChanged("bid96")
				Me.Onbid96Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid99", DbType:="Decimal(18,2)")>  _
	Public Property bid99() As System.Nullable(Of Decimal)
		Get
			Return Me._bid99
		End Get
		Set
			If (Me._bid99.Equals(value) = false) Then
				Me.Onbid99Changing(value)
				Me.SendPropertyChanging
				Me._bid99 = value
				Me.SendPropertyChanged("bid99")
				Me.Onbid99Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask96", DbType:="Decimal(18,2)")>  _
	Public Property ask96() As System.Nullable(Of Decimal)
		Get
			Return Me._ask96
		End Get
		Set
			If (Me._ask96.Equals(value) = false) Then
				Me.Onask96Changing(value)
				Me.SendPropertyChanging
				Me._ask96 = value
				Me.SendPropertyChanged("ask96")
				Me.Onask96Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask99", DbType:="Decimal(18,2)")>  _
	Public Property ask99() As System.Nullable(Of Decimal)
		Get
			Return Me._ask99
		End Get
		Set
			If (Me._ask99.Equals(value) = false) Then
				Me.Onask99Changing(value)
				Me.SendPropertyChanging
				Me._ask99 = value
				Me.SendPropertyChanged("ask99")
				Me.Onask99Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pwd_auth", DbType:="VarChar(50)")>  _
	Public Property pwd_auth() As String
		Get
			Return Me._pwd_auth
		End Get
		Set
			If (String.Equals(Me._pwd_auth, value) = false) Then
				Me.Onpwd_authChanging(value)
				Me.SendPropertyChanging
				Me._pwd_auth = value
				Me.SendPropertyChanged("pwd_auth")
				Me.Onpwd_authChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_price_base", DbType:="Decimal(18,2)")>  _
	Public Property price_base() As System.Nullable(Of Decimal)
		Get
			Return Me._price_base
		End Get
		Set
			If (Me._price_base.Equals(value) = false) Then
				Me.Onprice_baseChanging(value)
				Me.SendPropertyChanging
				Me._price_base = value
				Me.SendPropertyChanged("price_base")
				Me.Onprice_baseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G96_base", DbType:="Decimal(18,2)")>  _
	Public Property G96_base() As System.Nullable(Of Decimal)
		Get
			Return Me._G96_base
		End Get
		Set
			If (Me._G96_base.Equals(value) = false) Then
				Me.OnG96_baseChanging(value)
				Me.SendPropertyChanging
				Me._G96_base = value
				Me.SendPropertyChanged("G96_base")
				Me.OnG96_baseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G96G_base", DbType:="Decimal(18,3)")>  _
	Public Property G96G_base() As System.Nullable(Of Decimal)
		Get
			Return Me._G96G_base
		End Get
		Set
			If (Me._G96G_base.Equals(value) = false) Then
				Me.OnG96G_baseChanging(value)
				Me.SendPropertyChanging
				Me._G96G_base = value
				Me.SendPropertyChanged("G96G_base")
				Me.OnG96G_baseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G99_base", DbType:="Decimal(18,2)")>  _
	Public Property G99_base() As System.Nullable(Of Decimal)
		Get
			Return Me._G99_base
		End Get
		Set
			If (Me._G99_base.Equals(value) = false) Then
				Me.OnG99_baseChanging(value)
				Me.SendPropertyChanging
				Me._G99_base = value
				Me.SendPropertyChanged("G99_base")
				Me.OnG99_baseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_price_branch", DbType:="Decimal(18,2)")>  _
	Public Property price_branch() As System.Nullable(Of Decimal)
		Get
			Return Me._price_branch
		End Get
		Set
			If (Me._price_branch.Equals(value) = false) Then
				Me.Onprice_branchChanging(value)
				Me.SendPropertyChanging
				Me._price_branch = value
				Me.SendPropertyChanged("price_branch")
				Me.Onprice_branchChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G96_branch", DbType:="Decimal(18,2)")>  _
	Public Property G96_branch() As System.Nullable(Of Decimal)
		Get
			Return Me._G96_branch
		End Get
		Set
			If (Me._G96_branch.Equals(value) = false) Then
				Me.OnG96_branchChanging(value)
				Me.SendPropertyChanging
				Me._G96_branch = value
				Me.SendPropertyChanged("G96_branch")
				Me.OnG96_branchChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G99N_branch", DbType:="Decimal(18,2)")>  _
	Public Property G99N_branch() As System.Nullable(Of Decimal)
		Get
			Return Me._G99N_branch
		End Get
		Set
			If (Me._G99N_branch.Equals(value) = false) Then
				Me.OnG99N_branchChanging(value)
				Me.SendPropertyChanging
				Me._G99N_branch = value
				Me.SendPropertyChanged("G99N_branch")
				Me.OnG99N_branchChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G99L_branch", DbType:="Decimal(18,2)")>  _
	Public Property G99L_branch() As System.Nullable(Of Decimal)
		Get
			Return Me._G99L_branch
		End Get
		Set
			If (Me._G99L_branch.Equals(value) = false) Then
				Me.OnG99L_branchChanging(value)
				Me.SendPropertyChanging
				Me._G99L_branch = value
				Me.SendPropertyChanged("G99L_branch")
				Me.OnG99L_branchChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ticket_log")>  _
Partial Public Class ticket_log
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _log_id As Integer
	
	Private _datetime As System.Nullable(Of Date)
	
	Private _ref_no As String
	
	Private _update_by As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onlog_idChanging(value As Integer)
    End Sub
    Partial Private Sub Onlog_idChanged()
    End Sub
    Partial Private Sub OndatetimeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndatetimeChanged()
    End Sub
    Partial Private Sub Onref_noChanging(value As String)
    End Sub
    Partial Private Sub Onref_noChanged()
    End Sub
    Partial Private Sub Onupdate_byChanging(value As String)
    End Sub
    Partial Private Sub Onupdate_byChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_log_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property log_id() As Integer
		Get
			Return Me._log_id
		End Get
		Set
			If ((Me._log_id = value)  _
						= false) Then
				Me.Onlog_idChanging(value)
				Me.SendPropertyChanging
				Me._log_id = value
				Me.SendPropertyChanged("log_id")
				Me.Onlog_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_datetime", DbType:="DateTime")>  _
	Public Property datetime() As System.Nullable(Of Date)
		Get
			Return Me._datetime
		End Get
		Set
			If (Me._datetime.Equals(value) = false) Then
				Me.OndatetimeChanging(value)
				Me.SendPropertyChanging
				Me._datetime = value
				Me.SendPropertyChanged("datetime")
				Me.OndatetimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ref_no", DbType:="VarChar(15)")>  _
	Public Property ref_no() As String
		Get
			Return Me._ref_no
		End Get
		Set
			If (String.Equals(Me._ref_no, value) = false) Then
				Me.Onref_noChanging(value)
				Me.SendPropertyChanging
				Me._ref_no = value
				Me.SendPropertyChanged("ref_no")
				Me.Onref_noChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_update_by", DbType:="VarChar(50)")>  _
	Public Property update_by() As String
		Get
			Return Me._update_by
		End Get
		Set
			If (String.Equals(Me._update_by, value) = false) Then
				Me.Onupdate_byChanging(value)
				Me.SendPropertyChanging
				Me._update_by = value
				Me.SendPropertyChanged("update_by")
				Me.Onupdate_byChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.payment")>  _
Partial Public Class payment
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _payment_id As Integer
	
	Private _cust_id As String
	
	Private _word As String
	
	Private _status As String
	
	Private _status_id As String
	
	Private _active As System.Nullable(Of Boolean)
	
	Private _billing As String
	
	Private _paid_cash As System.Nullable(Of Decimal)
	
	Private _paid_gold As System.Nullable(Of Decimal)
	
	Private _note As String
	
	Private _modifier_by As String
	
	Private _modifier_date As System.Nullable(Of Date)
	
	Private _created_by As String
	
	Private _created_date As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onpayment_idChanging(value As Integer)
    End Sub
    Partial Private Sub Onpayment_idChanged()
    End Sub
    Partial Private Sub Oncust_idChanging(value As String)
    End Sub
    Partial Private Sub Oncust_idChanged()
    End Sub
    Partial Private Sub OnwordChanging(value As String)
    End Sub
    Partial Private Sub OnwordChanged()
    End Sub
    Partial Private Sub OnstatusChanging(value As String)
    End Sub
    Partial Private Sub OnstatusChanged()
    End Sub
    Partial Private Sub Onstatus_idChanging(value As String)
    End Sub
    Partial Private Sub Onstatus_idChanged()
    End Sub
    Partial Private Sub OnactiveChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnactiveChanged()
    End Sub
    Partial Private Sub OnbillingChanging(value As String)
    End Sub
    Partial Private Sub OnbillingChanged()
    End Sub
    Partial Private Sub Onpaid_cashChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onpaid_cashChanged()
    End Sub
    Partial Private Sub Onpaid_goldChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub Onpaid_goldChanged()
    End Sub
    Partial Private Sub OnnoteChanging(value As String)
    End Sub
    Partial Private Sub OnnoteChanged()
    End Sub
    Partial Private Sub Onmodifier_byChanging(value As String)
    End Sub
    Partial Private Sub Onmodifier_byChanged()
    End Sub
    Partial Private Sub Onmodifier_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onmodifier_dateChanged()
    End Sub
    Partial Private Sub Oncreated_byChanging(value As String)
    End Sub
    Partial Private Sub Oncreated_byChanged()
    End Sub
    Partial Private Sub Oncreated_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Oncreated_dateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_payment_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property payment_id() As Integer
		Get
			Return Me._payment_id
		End Get
		Set
			If ((Me._payment_id = value)  _
						= false) Then
				Me.Onpayment_idChanging(value)
				Me.SendPropertyChanging
				Me._payment_id = value
				Me.SendPropertyChanged("payment_id")
				Me.Onpayment_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cust_id", DbType:="VarChar(10)")>  _
	Public Property cust_id() As String
		Get
			Return Me._cust_id
		End Get
		Set
			If (String.Equals(Me._cust_id, value) = false) Then
				Me.Oncust_idChanging(value)
				Me.SendPropertyChanging
				Me._cust_id = value
				Me.SendPropertyChanged("cust_id")
				Me.Oncust_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_word", DbType:="VarChar(5)")>  _
	Public Property word() As String
		Get
			Return Me._word
		End Get
		Set
			If (String.Equals(Me._word, value) = false) Then
				Me.OnwordChanging(value)
				Me.SendPropertyChanging
				Me._word = value
				Me.SendPropertyChanged("word")
				Me.OnwordChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status", DbType:="VarChar(50)")>  _
	Public Property status() As String
		Get
			Return Me._status
		End Get
		Set
			If (String.Equals(Me._status, value) = false) Then
				Me.OnstatusChanging(value)
				Me.SendPropertyChanging
				Me._status = value
				Me.SendPropertyChanged("status")
				Me.OnstatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status_id", DbType:="VarChar(5)")>  _
	Public Property status_id() As String
		Get
			Return Me._status_id
		End Get
		Set
			If (String.Equals(Me._status_id, value) = false) Then
				Me.Onstatus_idChanging(value)
				Me.SendPropertyChanging
				Me._status_id = value
				Me.SendPropertyChanged("status_id")
				Me.Onstatus_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_active", DbType:="Bit")>  _
	Public Property active() As System.Nullable(Of Boolean)
		Get
			Return Me._active
		End Get
		Set
			If (Me._active.Equals(value) = false) Then
				Me.OnactiveChanging(value)
				Me.SendPropertyChanging
				Me._active = value
				Me.SendPropertyChanged("active")
				Me.OnactiveChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_billing", DbType:="VarChar(5)")>  _
	Public Property billing() As String
		Get
			Return Me._billing
		End Get
		Set
			If (String.Equals(Me._billing, value) = false) Then
				Me.OnbillingChanging(value)
				Me.SendPropertyChanging
				Me._billing = value
				Me.SendPropertyChanged("billing")
				Me.OnbillingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_paid_cash", DbType:="Decimal(18,2)")>  _
	Public Property paid_cash() As System.Nullable(Of Decimal)
		Get
			Return Me._paid_cash
		End Get
		Set
			If (Me._paid_cash.Equals(value) = false) Then
				Me.Onpaid_cashChanging(value)
				Me.SendPropertyChanging
				Me._paid_cash = value
				Me.SendPropertyChanged("paid_cash")
				Me.Onpaid_cashChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_paid_gold", DbType:="Decimal(18,2)")>  _
	Public Property paid_gold() As System.Nullable(Of Decimal)
		Get
			Return Me._paid_gold
		End Get
		Set
			If (Me._paid_gold.Equals(value) = false) Then
				Me.Onpaid_goldChanging(value)
				Me.SendPropertyChanging
				Me._paid_gold = value
				Me.SendPropertyChanged("paid_gold")
				Me.Onpaid_goldChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_note", DbType:="VarChar(MAX)")>  _
	Public Property note() As String
		Get
			Return Me._note
		End Get
		Set
			If (String.Equals(Me._note, value) = false) Then
				Me.OnnoteChanging(value)
				Me.SendPropertyChanging
				Me._note = value
				Me.SendPropertyChanged("note")
				Me.OnnoteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modifier_by", DbType:="VarChar(50)")>  _
	Public Property modifier_by() As String
		Get
			Return Me._modifier_by
		End Get
		Set
			If (String.Equals(Me._modifier_by, value) = false) Then
				Me.Onmodifier_byChanging(value)
				Me.SendPropertyChanging
				Me._modifier_by = value
				Me.SendPropertyChanged("modifier_by")
				Me.Onmodifier_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modifier_date", DbType:="DateTime")>  _
	Public Property modifier_date() As System.Nullable(Of Date)
		Get
			Return Me._modifier_date
		End Get
		Set
			If (Me._modifier_date.Equals(value) = false) Then
				Me.Onmodifier_dateChanging(value)
				Me.SendPropertyChanging
				Me._modifier_date = value
				Me.SendPropertyChanged("modifier_date")
				Me.Onmodifier_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_created_by", DbType:="VarChar(50)")>  _
	Public Property created_by() As String
		Get
			Return Me._created_by
		End Get
		Set
			If (String.Equals(Me._created_by, value) = false) Then
				Me.Oncreated_byChanging(value)
				Me.SendPropertyChanging
				Me._created_by = value
				Me.SendPropertyChanged("created_by")
				Me.Oncreated_byChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_created_date", DbType:="DateTime")>  _
	Public Property created_date() As System.Nullable(Of Date)
		Get
			Return Me._created_date
		End Get
		Set
			If (Me._created_date.Equals(value) = false) Then
				Me.Oncreated_dateChanging(value)
				Me.SendPropertyChanging
				Me._created_date = value
				Me.SendPropertyChanged("created_date")
				Me.Oncreated_dateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

Partial Public Class getQuantityAcceptAdapResult
	
	Private _quantity As System.Nullable(Of Integer)
	
	Private _max As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quantity", DbType:="Int")>  _
	Public Property quantity() As System.Nullable(Of Integer)
		Get
			Return Me._quantity
		End Get
		Set
			If (Me._quantity.Equals(value) = false) Then
				Me._quantity = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_max", DbType:="VarChar(1)")>  _
	Public Property max() As String
		Get
			Return Me._max
		End Get
		Set
			If (String.Equals(Me._max, value) = false) Then
				Me._max = value
			End If
		End Set
	End Property
End Class

Partial Public Class getQuantityOrderResult
	
	Private _price As Integer
	
	Private _quantity As System.Nullable(Of Integer)
	
	Private _max As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_price", DbType:="Int NOT NULL")>  _
	Public Property price() As Integer
		Get
			Return Me._price
		End Get
		Set
			If ((Me._price = value)  _
						= false) Then
				Me._price = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quantity", DbType:="Int")>  _
	Public Property quantity() As System.Nullable(Of Integer)
		Get
			Return Me._quantity
		End Get
		Set
			If (Me._quantity.Equals(value) = false) Then
				Me._quantity = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_max", DbType:="VarChar(1)")>  _
	Public Property max() As String
		Get
			Return Me._max
		End Get
		Set
			If (String.Equals(Me._max, value) = false) Then
				Me._max = value
			End If
		End Set
	End Property
End Class

Partial Public Class getStockResult
	
	Private _gold As Decimal
	
	Private _silver As Decimal
	
	Private _gold_wait As Decimal
	
	Private _silver_wait As Decimal
	
	Private _cash As Decimal
	
	Private _trans As Decimal
	
	Private _cheq As Decimal
	
	Private _cash_wait As Decimal
	
	Private _trans_wait As Decimal
	
	Private _cheq_wait As Decimal
	
	Private _cash_nobill As Decimal
	
	Private _trans_nobill As Decimal
	
	Private _cheq_nobill As Decimal
	
	Private _cash_wait_nobill As Decimal
	
	Private _trans_wait_nobill As Decimal
	
	Private _cheq_wait_nobill As Decimal
	
	Private _money_all As System.Nullable(Of Decimal)
	
	Private _money_wait_all As System.Nullable(Of Decimal)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold() As Decimal
		Get
			Return Me._gold
		End Get
		Set
			If ((Me._gold = value)  _
						= false) Then
				Me._gold = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_silver", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property silver() As Decimal
		Get
			Return Me._silver
		End Get
		Set
			If ((Me._silver = value)  _
						= false) Then
				Me._silver = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_wait", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_wait() As Decimal
		Get
			Return Me._gold_wait
		End Get
		Set
			If ((Me._gold_wait = value)  _
						= false) Then
				Me._gold_wait = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_silver_wait", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property silver_wait() As Decimal
		Get
			Return Me._silver_wait
		End Get
		Set
			If ((Me._silver_wait = value)  _
						= false) Then
				Me._silver_wait = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash", DbType:="Decimal(38,2) NOT NULL")>  _
	Public Property cash() As Decimal
		Get
			Return Me._cash
		End Get
		Set
			If ((Me._cash = value)  _
						= false) Then
				Me._cash = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trans", DbType:="Decimal(38,2) NOT NULL")>  _
	Public Property trans() As Decimal
		Get
			Return Me._trans
		End Get
		Set
			If ((Me._trans = value)  _
						= false) Then
				Me._trans = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cheq", DbType:="Decimal(38,2) NOT NULL")>  _
	Public Property cheq() As Decimal
		Get
			Return Me._cheq
		End Get
		Set
			If ((Me._cheq = value)  _
						= false) Then
				Me._cheq = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash_wait", DbType:="Decimal(38,2) NOT NULL")>  _
	Public Property cash_wait() As Decimal
		Get
			Return Me._cash_wait
		End Get
		Set
			If ((Me._cash_wait = value)  _
						= false) Then
				Me._cash_wait = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trans_wait", DbType:="Decimal(38,2) NOT NULL")>  _
	Public Property trans_wait() As Decimal
		Get
			Return Me._trans_wait
		End Get
		Set
			If ((Me._trans_wait = value)  _
						= false) Then
				Me._trans_wait = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cheq_wait", DbType:="Decimal(38,2) NOT NULL")>  _
	Public Property cheq_wait() As Decimal
		Get
			Return Me._cheq_wait
		End Get
		Set
			If ((Me._cheq_wait = value)  _
						= false) Then
				Me._cheq_wait = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash_nobill", DbType:="Decimal(38,2) NOT NULL")>  _
	Public Property cash_nobill() As Decimal
		Get
			Return Me._cash_nobill
		End Get
		Set
			If ((Me._cash_nobill = value)  _
						= false) Then
				Me._cash_nobill = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trans_nobill", DbType:="Decimal(38,2) NOT NULL")>  _
	Public Property trans_nobill() As Decimal
		Get
			Return Me._trans_nobill
		End Get
		Set
			If ((Me._trans_nobill = value)  _
						= false) Then
				Me._trans_nobill = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cheq_nobill", DbType:="Decimal(38,2) NOT NULL")>  _
	Public Property cheq_nobill() As Decimal
		Get
			Return Me._cheq_nobill
		End Get
		Set
			If ((Me._cheq_nobill = value)  _
						= false) Then
				Me._cheq_nobill = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash_wait_nobill", DbType:="Decimal(38,2) NOT NULL")>  _
	Public Property cash_wait_nobill() As Decimal
		Get
			Return Me._cash_wait_nobill
		End Get
		Set
			If ((Me._cash_wait_nobill = value)  _
						= false) Then
				Me._cash_wait_nobill = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trans_wait_nobill", DbType:="Decimal(38,2) NOT NULL")>  _
	Public Property trans_wait_nobill() As Decimal
		Get
			Return Me._trans_wait_nobill
		End Get
		Set
			If ((Me._trans_wait_nobill = value)  _
						= false) Then
				Me._trans_wait_nobill = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cheq_wait_nobill", DbType:="Decimal(38,2) NOT NULL")>  _
	Public Property cheq_wait_nobill() As Decimal
		Get
			Return Me._cheq_wait_nobill
		End Get
		Set
			If ((Me._cheq_wait_nobill = value)  _
						= false) Then
				Me._cheq_wait_nobill = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_money_all", DbType:="Decimal(38,2)")>  _
	Public Property money_all() As System.Nullable(Of Decimal)
		Get
			Return Me._money_all
		End Get
		Set
			If (Me._money_all.Equals(value) = false) Then
				Me._money_all = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_money_wait_all", DbType:="Decimal(38,2)")>  _
	Public Property money_wait_all() As System.Nullable(Of Decimal)
		Get
			Return Me._money_wait_all
		End Get
		Set
			If (Me._money_wait_all.Equals(value) = false) Then
				Me._money_wait_all = value
			End If
		End Set
	End Property
End Class

Partial Public Class getSummaryStockResult
	
	Private _gold_ticket96 As Decimal
	
	Private _gold_ticket99N As Decimal
	
	Private _gold_ticket99L As Decimal
	
	Private _gold_base96 As Decimal
	
	Private _gold_base99N As Decimal
	
	Private _gold_base99L As Decimal
	
	Private _gold_Branch96 As Decimal
	
	Private _gold_Branch99N As Decimal
	
	Private _gold_Branch99L As Decimal
	
	Private _gold_deposit96 As Decimal
	
	Private _gold_deposit99N As Decimal
	
	Private _gold_deposit99L As Decimal
	
	Private _sumGoldCredit96 As System.Nullable(Of Decimal)
	
	Private _sumGoldCredit99N As System.Nullable(Of Decimal)
	
	Private _sumGoldCredit99L As System.Nullable(Of Decimal)
	
	Private _cash_ticket_complete As Decimal
	
	Private _cash_base As Decimal
	
	Private _cash_Branch As Decimal
	
	Private _cash_deposit As Decimal
	
	Private _cust_CreditCash As System.Nullable(Of Decimal)
	
	Private _gold_pending96 As Decimal
	
	Private _gold_pending99N As Decimal
	
	Private _gold_pending99L As Decimal
	
	Private _cash_ticket_pending As Decimal
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_ticket96", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_ticket96() As Decimal
		Get
			Return Me._gold_ticket96
		End Get
		Set
			If ((Me._gold_ticket96 = value)  _
						= false) Then
				Me._gold_ticket96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_ticket99N", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_ticket99N() As Decimal
		Get
			Return Me._gold_ticket99N
		End Get
		Set
			If ((Me._gold_ticket99N = value)  _
						= false) Then
				Me._gold_ticket99N = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_ticket99L", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_ticket99L() As Decimal
		Get
			Return Me._gold_ticket99L
		End Get
		Set
			If ((Me._gold_ticket99L = value)  _
						= false) Then
				Me._gold_ticket99L = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_base96", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_base96() As Decimal
		Get
			Return Me._gold_base96
		End Get
		Set
			If ((Me._gold_base96 = value)  _
						= false) Then
				Me._gold_base96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_base99N", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_base99N() As Decimal
		Get
			Return Me._gold_base99N
		End Get
		Set
			If ((Me._gold_base99N = value)  _
						= false) Then
				Me._gold_base99N = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_base99L", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_base99L() As Decimal
		Get
			Return Me._gold_base99L
		End Get
		Set
			If ((Me._gold_base99L = value)  _
						= false) Then
				Me._gold_base99L = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_Branch96", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_Branch96() As Decimal
		Get
			Return Me._gold_Branch96
		End Get
		Set
			If ((Me._gold_Branch96 = value)  _
						= false) Then
				Me._gold_Branch96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_Branch99N", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_Branch99N() As Decimal
		Get
			Return Me._gold_Branch99N
		End Get
		Set
			If ((Me._gold_Branch99N = value)  _
						= false) Then
				Me._gold_Branch99N = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_Branch99L", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_Branch99L() As Decimal
		Get
			Return Me._gold_Branch99L
		End Get
		Set
			If ((Me._gold_Branch99L = value)  _
						= false) Then
				Me._gold_Branch99L = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_deposit96", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_deposit96() As Decimal
		Get
			Return Me._gold_deposit96
		End Get
		Set
			If ((Me._gold_deposit96 = value)  _
						= false) Then
				Me._gold_deposit96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_deposit99N", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_deposit99N() As Decimal
		Get
			Return Me._gold_deposit99N
		End Get
		Set
			If ((Me._gold_deposit99N = value)  _
						= false) Then
				Me._gold_deposit99N = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_deposit99L", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_deposit99L() As Decimal
		Get
			Return Me._gold_deposit99L
		End Get
		Set
			If ((Me._gold_deposit99L = value)  _
						= false) Then
				Me._gold_deposit99L = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sumGoldCredit96", DbType:="Decimal(38,5)")>  _
	Public Property sumGoldCredit96() As System.Nullable(Of Decimal)
		Get
			Return Me._sumGoldCredit96
		End Get
		Set
			If (Me._sumGoldCredit96.Equals(value) = false) Then
				Me._sumGoldCredit96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sumGoldCredit99N", DbType:="Decimal(38,5)")>  _
	Public Property sumGoldCredit99N() As System.Nullable(Of Decimal)
		Get
			Return Me._sumGoldCredit99N
		End Get
		Set
			If (Me._sumGoldCredit99N.Equals(value) = false) Then
				Me._sumGoldCredit99N = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sumGoldCredit99L", DbType:="Decimal(38,5)")>  _
	Public Property sumGoldCredit99L() As System.Nullable(Of Decimal)
		Get
			Return Me._sumGoldCredit99L
		End Get
		Set
			If (Me._sumGoldCredit99L.Equals(value) = false) Then
				Me._sumGoldCredit99L = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash_ticket_complete", DbType:="Decimal(38,2) NOT NULL")>  _
	Public Property cash_ticket_complete() As Decimal
		Get
			Return Me._cash_ticket_complete
		End Get
		Set
			If ((Me._cash_ticket_complete = value)  _
						= false) Then
				Me._cash_ticket_complete = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash_base", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property cash_base() As Decimal
		Get
			Return Me._cash_base
		End Get
		Set
			If ((Me._cash_base = value)  _
						= false) Then
				Me._cash_base = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash_Branch", DbType:="Decimal(38,2) NOT NULL")>  _
	Public Property cash_Branch() As Decimal
		Get
			Return Me._cash_Branch
		End Get
		Set
			If ((Me._cash_Branch = value)  _
						= false) Then
				Me._cash_Branch = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash_deposit", DbType:="Decimal(38,2) NOT NULL")>  _
	Public Property cash_deposit() As Decimal
		Get
			Return Me._cash_deposit
		End Get
		Set
			If ((Me._cash_deposit = value)  _
						= false) Then
				Me._cash_deposit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cust_CreditCash", DbType:="Decimal(38,2)")>  _
	Public Property cust_CreditCash() As System.Nullable(Of Decimal)
		Get
			Return Me._cust_CreditCash
		End Get
		Set
			If (Me._cust_CreditCash.Equals(value) = false) Then
				Me._cust_CreditCash = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_pending96", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_pending96() As Decimal
		Get
			Return Me._gold_pending96
		End Get
		Set
			If ((Me._gold_pending96 = value)  _
						= false) Then
				Me._gold_pending96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_pending99N", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_pending99N() As Decimal
		Get
			Return Me._gold_pending99N
		End Get
		Set
			If ((Me._gold_pending99N = value)  _
						= false) Then
				Me._gold_pending99N = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_pending99L", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_pending99L() As Decimal
		Get
			Return Me._gold_pending99L
		End Get
		Set
			If ((Me._gold_pending99L = value)  _
						= false) Then
				Me._gold_pending99L = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash_ticket_pending", DbType:="Decimal(38,2) NOT NULL")>  _
	Public Property cash_ticket_pending() As Decimal
		Get
			Return Me._cash_ticket_pending
		End Get
		Set
			If ((Me._cash_ticket_pending = value)  _
						= false) Then
				Me._cash_ticket_pending = value
			End If
		End Set
	End Property
End Class

Partial Public Class getSummaryStockActualResult
	
	Private _gold_ticket96 As Decimal
	
	Private _gold_ticket99N As Decimal
	
	Private _gold_ticket99L As Decimal
	
	Private _gold_base96 As Decimal
	
	Private _gold_base99N As Decimal
	
	Private _gold_base99L As Decimal
	
	Private _gold_Branch96 As Decimal
	
	Private _gold_Branch99N As Decimal
	
	Private _gold_Branch99L As Decimal
	
	Private _gold_deposit96 As Decimal
	
	Private _gold_deposit99N As Decimal
	
	Private _gold_deposit99L As Decimal
	
	Private _sumGoldCredit96 As System.Nullable(Of Decimal)
	
	Private _sumGoldCredit99N As System.Nullable(Of Decimal)
	
	Private _sumGoldCredit99L As System.Nullable(Of Decimal)
	
	Private _cash_ticket_complete As Decimal
	
	Private _cash_base As Decimal
	
	Private _cash_Branch As Decimal
	
	Private _cash_deposit As Decimal
	
	Private _cust_CreditCash As System.Nullable(Of Decimal)
	
	Private _gold_pending96 As Decimal
	
	Private _gold_pending99N As Decimal
	
	Private _gold_pending99L As Decimal
	
	Private _cash_ticket_pending As Decimal
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_ticket96", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_ticket96() As Decimal
		Get
			Return Me._gold_ticket96
		End Get
		Set
			If ((Me._gold_ticket96 = value)  _
						= false) Then
				Me._gold_ticket96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_ticket99N", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_ticket99N() As Decimal
		Get
			Return Me._gold_ticket99N
		End Get
		Set
			If ((Me._gold_ticket99N = value)  _
						= false) Then
				Me._gold_ticket99N = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_ticket99L", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_ticket99L() As Decimal
		Get
			Return Me._gold_ticket99L
		End Get
		Set
			If ((Me._gold_ticket99L = value)  _
						= false) Then
				Me._gold_ticket99L = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_base96", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_base96() As Decimal
		Get
			Return Me._gold_base96
		End Get
		Set
			If ((Me._gold_base96 = value)  _
						= false) Then
				Me._gold_base96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_base99N", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_base99N() As Decimal
		Get
			Return Me._gold_base99N
		End Get
		Set
			If ((Me._gold_base99N = value)  _
						= false) Then
				Me._gold_base99N = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_base99L", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_base99L() As Decimal
		Get
			Return Me._gold_base99L
		End Get
		Set
			If ((Me._gold_base99L = value)  _
						= false) Then
				Me._gold_base99L = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_Branch96", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_Branch96() As Decimal
		Get
			Return Me._gold_Branch96
		End Get
		Set
			If ((Me._gold_Branch96 = value)  _
						= false) Then
				Me._gold_Branch96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_Branch99N", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_Branch99N() As Decimal
		Get
			Return Me._gold_Branch99N
		End Get
		Set
			If ((Me._gold_Branch99N = value)  _
						= false) Then
				Me._gold_Branch99N = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_Branch99L", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_Branch99L() As Decimal
		Get
			Return Me._gold_Branch99L
		End Get
		Set
			If ((Me._gold_Branch99L = value)  _
						= false) Then
				Me._gold_Branch99L = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_deposit96", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_deposit96() As Decimal
		Get
			Return Me._gold_deposit96
		End Get
		Set
			If ((Me._gold_deposit96 = value)  _
						= false) Then
				Me._gold_deposit96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_deposit99N", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_deposit99N() As Decimal
		Get
			Return Me._gold_deposit99N
		End Get
		Set
			If ((Me._gold_deposit99N = value)  _
						= false) Then
				Me._gold_deposit99N = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_deposit99L", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_deposit99L() As Decimal
		Get
			Return Me._gold_deposit99L
		End Get
		Set
			If ((Me._gold_deposit99L = value)  _
						= false) Then
				Me._gold_deposit99L = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sumGoldCredit96", DbType:="Decimal(38,5)")>  _
	Public Property sumGoldCredit96() As System.Nullable(Of Decimal)
		Get
			Return Me._sumGoldCredit96
		End Get
		Set
			If (Me._sumGoldCredit96.Equals(value) = false) Then
				Me._sumGoldCredit96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sumGoldCredit99N", DbType:="Decimal(38,5)")>  _
	Public Property sumGoldCredit99N() As System.Nullable(Of Decimal)
		Get
			Return Me._sumGoldCredit99N
		End Get
		Set
			If (Me._sumGoldCredit99N.Equals(value) = false) Then
				Me._sumGoldCredit99N = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sumGoldCredit99L", DbType:="Decimal(38,5)")>  _
	Public Property sumGoldCredit99L() As System.Nullable(Of Decimal)
		Get
			Return Me._sumGoldCredit99L
		End Get
		Set
			If (Me._sumGoldCredit99L.Equals(value) = false) Then
				Me._sumGoldCredit99L = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash_ticket_complete", DbType:="Decimal(38,3) NOT NULL")>  _
	Public Property cash_ticket_complete() As Decimal
		Get
			Return Me._cash_ticket_complete
		End Get
		Set
			If ((Me._cash_ticket_complete = value)  _
						= false) Then
				Me._cash_ticket_complete = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash_base", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property cash_base() As Decimal
		Get
			Return Me._cash_base
		End Get
		Set
			If ((Me._cash_base = value)  _
						= false) Then
				Me._cash_base = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash_Branch", DbType:="Decimal(38,3) NOT NULL")>  _
	Public Property cash_Branch() As Decimal
		Get
			Return Me._cash_Branch
		End Get
		Set
			If ((Me._cash_Branch = value)  _
						= false) Then
				Me._cash_Branch = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash_deposit", DbType:="Decimal(38,3) NOT NULL")>  _
	Public Property cash_deposit() As Decimal
		Get
			Return Me._cash_deposit
		End Get
		Set
			If ((Me._cash_deposit = value)  _
						= false) Then
				Me._cash_deposit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cust_CreditCash", DbType:="Decimal(38,2)")>  _
	Public Property cust_CreditCash() As System.Nullable(Of Decimal)
		Get
			Return Me._cust_CreditCash
		End Get
		Set
			If (Me._cust_CreditCash.Equals(value) = false) Then
				Me._cust_CreditCash = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_pending96", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_pending96() As Decimal
		Get
			Return Me._gold_pending96
		End Get
		Set
			If ((Me._gold_pending96 = value)  _
						= false) Then
				Me._gold_pending96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_pending99N", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_pending99N() As Decimal
		Get
			Return Me._gold_pending99N
		End Get
		Set
			If ((Me._gold_pending99N = value)  _
						= false) Then
				Me._gold_pending99N = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_pending99L", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_pending99L() As Decimal
		Get
			Return Me._gold_pending99L
		End Get
		Set
			If ((Me._gold_pending99L = value)  _
						= false) Then
				Me._gold_pending99L = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash_ticket_pending", DbType:="Decimal(38,3) NOT NULL")>  _
	Public Property cash_ticket_pending() As Decimal
		Get
			Return Me._cash_ticket_pending
		End Get
		Set
			If ((Me._cash_ticket_pending = value)  _
						= false) Then
				Me._cash_ticket_pending = value
			End If
		End Set
	End Property
End Class

Partial Public Class getSummaryStockPlanningResult
	
	Private _gold_ticket96 As Decimal
	
	Private _gold_ticket99N As Decimal
	
	Private _gold_ticket99L As Decimal
	
	Private _gold_base96 As Decimal
	
	Private _gold_base99N As Decimal
	
	Private _gold_base99L As Decimal
	
	Private _gold_Branch96 As Decimal
	
	Private _gold_Branch99N As Decimal
	
	Private _gold_Branch99L As Decimal
	
	Private _gold_deposit96 As Decimal
	
	Private _gold_deposit99N As Decimal
	
	Private _gold_deposit99L As Decimal
	
	Private _sumGoldCredit96 As System.Nullable(Of Decimal)
	
	Private _sumGoldCredit99N As System.Nullable(Of Decimal)
	
	Private _sumGoldCredit99L As System.Nullable(Of Decimal)
	
	Private _cash_ticket_complete As Decimal
	
	Private _cash_base As Decimal
	
	Private _cash_Branch As Decimal
	
	Private _cash_deposit As Decimal
	
	Private _cust_CreditCash As System.Nullable(Of Decimal)
	
	Private _gold_pending96 As Decimal
	
	Private _gold_pending99N As Decimal
	
	Private _gold_pending99L As Decimal
	
	Private _cash_ticket_pending As Decimal
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_ticket96", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_ticket96() As Decimal
		Get
			Return Me._gold_ticket96
		End Get
		Set
			If ((Me._gold_ticket96 = value)  _
						= false) Then
				Me._gold_ticket96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_ticket99N", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_ticket99N() As Decimal
		Get
			Return Me._gold_ticket99N
		End Get
		Set
			If ((Me._gold_ticket99N = value)  _
						= false) Then
				Me._gold_ticket99N = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_ticket99L", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_ticket99L() As Decimal
		Get
			Return Me._gold_ticket99L
		End Get
		Set
			If ((Me._gold_ticket99L = value)  _
						= false) Then
				Me._gold_ticket99L = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_base96", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_base96() As Decimal
		Get
			Return Me._gold_base96
		End Get
		Set
			If ((Me._gold_base96 = value)  _
						= false) Then
				Me._gold_base96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_base99N", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_base99N() As Decimal
		Get
			Return Me._gold_base99N
		End Get
		Set
			If ((Me._gold_base99N = value)  _
						= false) Then
				Me._gold_base99N = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_base99L", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_base99L() As Decimal
		Get
			Return Me._gold_base99L
		End Get
		Set
			If ((Me._gold_base99L = value)  _
						= false) Then
				Me._gold_base99L = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_Branch96", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_Branch96() As Decimal
		Get
			Return Me._gold_Branch96
		End Get
		Set
			If ((Me._gold_Branch96 = value)  _
						= false) Then
				Me._gold_Branch96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_Branch99N", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_Branch99N() As Decimal
		Get
			Return Me._gold_Branch99N
		End Get
		Set
			If ((Me._gold_Branch99N = value)  _
						= false) Then
				Me._gold_Branch99N = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_Branch99L", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_Branch99L() As Decimal
		Get
			Return Me._gold_Branch99L
		End Get
		Set
			If ((Me._gold_Branch99L = value)  _
						= false) Then
				Me._gold_Branch99L = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_deposit96", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_deposit96() As Decimal
		Get
			Return Me._gold_deposit96
		End Get
		Set
			If ((Me._gold_deposit96 = value)  _
						= false) Then
				Me._gold_deposit96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_deposit99N", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_deposit99N() As Decimal
		Get
			Return Me._gold_deposit99N
		End Get
		Set
			If ((Me._gold_deposit99N = value)  _
						= false) Then
				Me._gold_deposit99N = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_deposit99L", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_deposit99L() As Decimal
		Get
			Return Me._gold_deposit99L
		End Get
		Set
			If ((Me._gold_deposit99L = value)  _
						= false) Then
				Me._gold_deposit99L = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sumGoldCredit96", DbType:="Decimal(38,5)")>  _
	Public Property sumGoldCredit96() As System.Nullable(Of Decimal)
		Get
			Return Me._sumGoldCredit96
		End Get
		Set
			If (Me._sumGoldCredit96.Equals(value) = false) Then
				Me._sumGoldCredit96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sumGoldCredit99N", DbType:="Decimal(38,5)")>  _
	Public Property sumGoldCredit99N() As System.Nullable(Of Decimal)
		Get
			Return Me._sumGoldCredit99N
		End Get
		Set
			If (Me._sumGoldCredit99N.Equals(value) = false) Then
				Me._sumGoldCredit99N = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_sumGoldCredit99L", DbType:="Decimal(38,5)")>  _
	Public Property sumGoldCredit99L() As System.Nullable(Of Decimal)
		Get
			Return Me._sumGoldCredit99L
		End Get
		Set
			If (Me._sumGoldCredit99L.Equals(value) = false) Then
				Me._sumGoldCredit99L = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash_ticket_complete", DbType:="Decimal(38,3) NOT NULL")>  _
	Public Property cash_ticket_complete() As Decimal
		Get
			Return Me._cash_ticket_complete
		End Get
		Set
			If ((Me._cash_ticket_complete = value)  _
						= false) Then
				Me._cash_ticket_complete = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash_base", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property cash_base() As Decimal
		Get
			Return Me._cash_base
		End Get
		Set
			If ((Me._cash_base = value)  _
						= false) Then
				Me._cash_base = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash_Branch", DbType:="Decimal(38,3) NOT NULL")>  _
	Public Property cash_Branch() As Decimal
		Get
			Return Me._cash_Branch
		End Get
		Set
			If ((Me._cash_Branch = value)  _
						= false) Then
				Me._cash_Branch = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash_deposit", DbType:="Decimal(38,3) NOT NULL")>  _
	Public Property cash_deposit() As Decimal
		Get
			Return Me._cash_deposit
		End Get
		Set
			If ((Me._cash_deposit = value)  _
						= false) Then
				Me._cash_deposit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cust_CreditCash", DbType:="Decimal(38,2)")>  _
	Public Property cust_CreditCash() As System.Nullable(Of Decimal)
		Get
			Return Me._cust_CreditCash
		End Get
		Set
			If (Me._cust_CreditCash.Equals(value) = false) Then
				Me._cust_CreditCash = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_pending96", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_pending96() As Decimal
		Get
			Return Me._gold_pending96
		End Get
		Set
			If ((Me._gold_pending96 = value)  _
						= false) Then
				Me._gold_pending96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_pending99N", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_pending99N() As Decimal
		Get
			Return Me._gold_pending99N
		End Get
		Set
			If ((Me._gold_pending99N = value)  _
						= false) Then
				Me._gold_pending99N = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold_pending99L", DbType:="Decimal(38,5) NOT NULL")>  _
	Public Property gold_pending99L() As Decimal
		Get
			Return Me._gold_pending99L
		End Get
		Set
			If ((Me._gold_pending99L = value)  _
						= false) Then
				Me._gold_pending99L = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash_ticket_pending", DbType:="Decimal(38,3) NOT NULL")>  _
	Public Property cash_ticket_pending() As Decimal
		Get
			Return Me._cash_ticket_pending
		End Get
		Set
			If ((Me._cash_ticket_pending = value)  _
						= false) Then
				Me._cash_ticket_pending = value
			End If
		End Set
	End Property
End Class

Partial Public Class getSumPortfolioByCust_idResult
	
	Private _quan96 As System.Nullable(Of Decimal)
	
	Private _amount96 As System.Nullable(Of Decimal)
	
	Private _quan99 As System.Nullable(Of Decimal)
	
	Private _amount99 As System.Nullable(Of Decimal)
	
	Private _pwd_auth As String
	
	Private _margin As System.Nullable(Of Double)
	
	Private _trade_limit As Decimal
	
	Private _free_margin As Decimal
	
	Private _bid96 As System.Nullable(Of Decimal)
	
	Private _ask96 As System.Nullable(Of Decimal)
	
	Private _bid99 As System.Nullable(Of Decimal)
	
	Private _ask99 As System.Nullable(Of Decimal)
	
	Private _cash As Decimal
	
	Private _gold96 As Decimal
	
	Private _gold96G As Decimal
	
	Private _gold96M As Decimal
	
	Private _gold99 As Decimal
	
	Private _gold99N As Decimal
	
	Private _gold99L As Decimal
	
	Private _amount99_buy As System.Nullable(Of Decimal)
	
	Private _quan99_buy As System.Nullable(Of Decimal)
	
	Private _amount99_sell As System.Nullable(Of Decimal)
	
	Private _quan99_sell As System.Nullable(Of Decimal)
	
	Private _amount96_buy As System.Nullable(Of Decimal)
	
	Private _quan96_buy As System.Nullable(Of Decimal)
	
	Private _amount96_sell As System.Nullable(Of Decimal)
	
	Private _quan96_sell As System.Nullable(Of Decimal)
	
	Private _self_price As System.Nullable(Of Char)
	
	Private _level As System.Nullable(Of Integer)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quan96", DbType:="Decimal(38,5)")>  _
	Public Property quan96() As System.Nullable(Of Decimal)
		Get
			Return Me._quan96
		End Get
		Set
			If (Me._quan96.Equals(value) = false) Then
				Me._quan96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amount96", DbType:="Decimal(38,3)")>  _
	Public Property amount96() As System.Nullable(Of Decimal)
		Get
			Return Me._amount96
		End Get
		Set
			If (Me._amount96.Equals(value) = false) Then
				Me._amount96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quan99", DbType:="Decimal(38,5)")>  _
	Public Property quan99() As System.Nullable(Of Decimal)
		Get
			Return Me._quan99
		End Get
		Set
			If (Me._quan99.Equals(value) = false) Then
				Me._quan99 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amount99", DbType:="Decimal(38,3)")>  _
	Public Property amount99() As System.Nullable(Of Decimal)
		Get
			Return Me._amount99
		End Get
		Set
			If (Me._amount99.Equals(value) = false) Then
				Me._amount99 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pwd_auth", DbType:="VarChar(50)")>  _
	Public Property pwd_auth() As String
		Get
			Return Me._pwd_auth
		End Get
		Set
			If (String.Equals(Me._pwd_auth, value) = false) Then
				Me._pwd_auth = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_margin", DbType:="Float")>  _
	Public Property margin() As System.Nullable(Of Double)
		Get
			Return Me._margin
		End Get
		Set
			If (Me._margin.Equals(value) = false) Then
				Me._margin = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trade_limit", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property trade_limit() As Decimal
		Get
			Return Me._trade_limit
		End Get
		Set
			If ((Me._trade_limit = value)  _
						= false) Then
				Me._trade_limit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_free_margin", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property free_margin() As Decimal
		Get
			Return Me._free_margin
		End Get
		Set
			If ((Me._free_margin = value)  _
						= false) Then
				Me._free_margin = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid96", DbType:="Decimal(18,2)")>  _
	Public Property bid96() As System.Nullable(Of Decimal)
		Get
			Return Me._bid96
		End Get
		Set
			If (Me._bid96.Equals(value) = false) Then
				Me._bid96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask96", DbType:="Decimal(18,2)")>  _
	Public Property ask96() As System.Nullable(Of Decimal)
		Get
			Return Me._ask96
		End Get
		Set
			If (Me._ask96.Equals(value) = false) Then
				Me._ask96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid99", DbType:="Decimal(18,2)")>  _
	Public Property bid99() As System.Nullable(Of Decimal)
		Get
			Return Me._bid99
		End Get
		Set
			If (Me._bid99.Equals(value) = false) Then
				Me._bid99 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask99", DbType:="Decimal(18,2)")>  _
	Public Property ask99() As System.Nullable(Of Decimal)
		Get
			Return Me._ask99
		End Get
		Set
			If (Me._ask99.Equals(value) = false) Then
				Me._ask99 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash", DbType:="Decimal(38,2) NOT NULL")>  _
	Public Property cash() As Decimal
		Get
			Return Me._cash
		End Get
		Set
			If ((Me._cash = value)  _
						= false) Then
				Me._cash = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold96", DbType:="Decimal(38,3) NOT NULL")>  _
	Public Property gold96() As Decimal
		Get
			Return Me._gold96
		End Get
		Set
			If ((Me._gold96 = value)  _
						= false) Then
				Me._gold96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold96G", DbType:="Decimal(38,3) NOT NULL")>  _
	Public Property gold96G() As Decimal
		Get
			Return Me._gold96G
		End Get
		Set
			If ((Me._gold96G = value)  _
						= false) Then
				Me._gold96G = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold96M", DbType:="Decimal(38,3) NOT NULL")>  _
	Public Property gold96M() As Decimal
		Get
			Return Me._gold96M
		End Get
		Set
			If ((Me._gold96M = value)  _
						= false) Then
				Me._gold96M = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold99", DbType:="Decimal(38,3) NOT NULL")>  _
	Public Property gold99() As Decimal
		Get
			Return Me._gold99
		End Get
		Set
			If ((Me._gold99 = value)  _
						= false) Then
				Me._gold99 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold99N", DbType:="Decimal(38,3) NOT NULL")>  _
	Public Property gold99N() As Decimal
		Get
			Return Me._gold99N
		End Get
		Set
			If ((Me._gold99N = value)  _
						= false) Then
				Me._gold99N = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_gold99L", DbType:="Decimal(38,3) NOT NULL")>  _
	Public Property gold99L() As Decimal
		Get
			Return Me._gold99L
		End Get
		Set
			If ((Me._gold99L = value)  _
						= false) Then
				Me._gold99L = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amount99_buy", DbType:="Decimal(38,3)")>  _
	Public Property amount99_buy() As System.Nullable(Of Decimal)
		Get
			Return Me._amount99_buy
		End Get
		Set
			If (Me._amount99_buy.Equals(value) = false) Then
				Me._amount99_buy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quan99_buy", DbType:="Decimal(38,5)")>  _
	Public Property quan99_buy() As System.Nullable(Of Decimal)
		Get
			Return Me._quan99_buy
		End Get
		Set
			If (Me._quan99_buy.Equals(value) = false) Then
				Me._quan99_buy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amount99_sell", DbType:="Decimal(38,3)")>  _
	Public Property amount99_sell() As System.Nullable(Of Decimal)
		Get
			Return Me._amount99_sell
		End Get
		Set
			If (Me._amount99_sell.Equals(value) = false) Then
				Me._amount99_sell = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quan99_sell", DbType:="Decimal(38,5)")>  _
	Public Property quan99_sell() As System.Nullable(Of Decimal)
		Get
			Return Me._quan99_sell
		End Get
		Set
			If (Me._quan99_sell.Equals(value) = false) Then
				Me._quan99_sell = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amount96_buy", DbType:="Decimal(38,3)")>  _
	Public Property amount96_buy() As System.Nullable(Of Decimal)
		Get
			Return Me._amount96_buy
		End Get
		Set
			If (Me._amount96_buy.Equals(value) = false) Then
				Me._amount96_buy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quan96_buy", DbType:="Decimal(38,5)")>  _
	Public Property quan96_buy() As System.Nullable(Of Decimal)
		Get
			Return Me._quan96_buy
		End Get
		Set
			If (Me._quan96_buy.Equals(value) = false) Then
				Me._quan96_buy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amount96_sell", DbType:="Decimal(38,3)")>  _
	Public Property amount96_sell() As System.Nullable(Of Decimal)
		Get
			Return Me._amount96_sell
		End Get
		Set
			If (Me._amount96_sell.Equals(value) = false) Then
				Me._amount96_sell = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quan96_sell", DbType:="Decimal(38,5)")>  _
	Public Property quan96_sell() As System.Nullable(Of Decimal)
		Get
			Return Me._quan96_sell
		End Get
		Set
			If (Me._quan96_sell.Equals(value) = false) Then
				Me._quan96_sell = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_self_price", DbType:="Char(1)")>  _
	Public Property self_price() As System.Nullable(Of Char)
		Get
			Return Me._self_price
		End Get
		Set
			If (Me._self_price.Equals(value) = false) Then
				Me._self_price = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="[level]", Storage:="_level", DbType:="Int")>  _
	Public Property level() As System.Nullable(Of Integer)
		Get
			Return Me._level
		End Get
		Set
			If (Me._level.Equals(value) = false) Then
				Me._level = value
			End If
		End Set
	End Property
End Class

Partial Public Class getStockSumDepositResult
	
	Private _cash As System.Nullable(Of Decimal)
	
	Private _cheq As System.Nullable(Of Decimal)
	
	Private _trans As System.Nullable(Of Decimal)
	
	Private _price_base As System.Nullable(Of Decimal)
	
	Private _G96_base As System.Nullable(Of Decimal)
	
	Private _G96G_base As System.Nullable(Of Decimal)
	
	Private _G99_base As System.Nullable(Of Decimal)
	
	Private _priceDep As System.Nullable(Of Decimal)
	
	Private _G96Dep As System.Nullable(Of Decimal)
	
	Private _G96GDep As System.Nullable(Of Decimal)
	
	Private _G99Dep As System.Nullable(Of Decimal)
	
	Private _cashDep As System.Nullable(Of Decimal)
	
	Private _cheqDep As System.Nullable(Of Decimal)
	
	Private _transDep As System.Nullable(Of Decimal)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cash", DbType:="Decimal(18,2)")>  _
	Public Property cash() As System.Nullable(Of Decimal)
		Get
			Return Me._cash
		End Get
		Set
			If (Me._cash.Equals(value) = false) Then
				Me._cash = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cheq", DbType:="Decimal(18,2)")>  _
	Public Property cheq() As System.Nullable(Of Decimal)
		Get
			Return Me._cheq
		End Get
		Set
			If (Me._cheq.Equals(value) = false) Then
				Me._cheq = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_trans", DbType:="Decimal(18,2)")>  _
	Public Property trans() As System.Nullable(Of Decimal)
		Get
			Return Me._trans
		End Get
		Set
			If (Me._trans.Equals(value) = false) Then
				Me._trans = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_price_base", DbType:="Decimal(18,2)")>  _
	Public Property price_base() As System.Nullable(Of Decimal)
		Get
			Return Me._price_base
		End Get
		Set
			If (Me._price_base.Equals(value) = false) Then
				Me._price_base = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G96_base", DbType:="Decimal(18,2)")>  _
	Public Property G96_base() As System.Nullable(Of Decimal)
		Get
			Return Me._G96_base
		End Get
		Set
			If (Me._G96_base.Equals(value) = false) Then
				Me._G96_base = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G96G_base", DbType:="Decimal(18,5)")>  _
	Public Property G96G_base() As System.Nullable(Of Decimal)
		Get
			Return Me._G96G_base
		End Get
		Set
			If (Me._G96G_base.Equals(value) = false) Then
				Me._G96G_base = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G99_base", DbType:="Decimal(18,2)")>  _
	Public Property G99_base() As System.Nullable(Of Decimal)
		Get
			Return Me._G99_base
		End Get
		Set
			If (Me._G99_base.Equals(value) = false) Then
				Me._G99_base = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_priceDep", DbType:="Decimal(38,2)")>  _
	Public Property priceDep() As System.Nullable(Of Decimal)
		Get
			Return Me._priceDep
		End Get
		Set
			If (Me._priceDep.Equals(value) = false) Then
				Me._priceDep = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G96Dep", DbType:="Decimal(38,3)")>  _
	Public Property G96Dep() As System.Nullable(Of Decimal)
		Get
			Return Me._G96Dep
		End Get
		Set
			If (Me._G96Dep.Equals(value) = false) Then
				Me._G96Dep = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G96GDep", DbType:="Decimal(38,3)")>  _
	Public Property G96GDep() As System.Nullable(Of Decimal)
		Get
			Return Me._G96GDep
		End Get
		Set
			If (Me._G96GDep.Equals(value) = false) Then
				Me._G96GDep = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_G99Dep", DbType:="Decimal(38,3)")>  _
	Public Property G99Dep() As System.Nullable(Of Decimal)
		Get
			Return Me._G99Dep
		End Get
		Set
			If (Me._G99Dep.Equals(value) = false) Then
				Me._G99Dep = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cashDep", DbType:="Decimal(38,2)")>  _
	Public Property cashDep() As System.Nullable(Of Decimal)
		Get
			Return Me._cashDep
		End Get
		Set
			If (Me._cashDep.Equals(value) = false) Then
				Me._cashDep = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cheqDep", DbType:="Decimal(38,2)")>  _
	Public Property cheqDep() As System.Nullable(Of Decimal)
		Get
			Return Me._cheqDep
		End Get
		Set
			If (Me._cheqDep.Equals(value) = false) Then
				Me._cheqDep = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_transDep", DbType:="Decimal(38,2)")>  _
	Public Property transDep() As System.Nullable(Of Decimal)
		Get
			Return Me._transDep
		End Get
		Set
			If (Me._transDep.Equals(value) = false) Then
				Me._transDep = value
			End If
		End Set
	End Property
End Class

Partial Public Class getSummaryBuySellByCust_idResult
	
	Private _SQ96 As System.Nullable(Of Decimal)
	
	Private _SA96 As System.Nullable(Of Decimal)
	
	Private _SQ99 As System.Nullable(Of Decimal)
	
	Private _SA99 As System.Nullable(Of Decimal)
	
	Private _BQ96 As System.Nullable(Of Decimal)
	
	Private _BA96 As System.Nullable(Of Decimal)
	
	Private _BQ99 As System.Nullable(Of Decimal)
	
	Private _BA99 As System.Nullable(Of Decimal)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SQ96", DbType:="Decimal(38,5)")>  _
	Public Property SQ96() As System.Nullable(Of Decimal)
		Get
			Return Me._SQ96
		End Get
		Set
			If (Me._SQ96.Equals(value) = false) Then
				Me._SQ96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SA96", DbType:="Decimal(38,3)")>  _
	Public Property SA96() As System.Nullable(Of Decimal)
		Get
			Return Me._SA96
		End Get
		Set
			If (Me._SA96.Equals(value) = false) Then
				Me._SA96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SQ99", DbType:="Decimal(38,5)")>  _
	Public Property SQ99() As System.Nullable(Of Decimal)
		Get
			Return Me._SQ99
		End Get
		Set
			If (Me._SQ99.Equals(value) = false) Then
				Me._SQ99 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SA99", DbType:="Decimal(38,3)")>  _
	Public Property SA99() As System.Nullable(Of Decimal)
		Get
			Return Me._SA99
		End Get
		Set
			If (Me._SA99.Equals(value) = false) Then
				Me._SA99 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BQ96", DbType:="Decimal(38,5)")>  _
	Public Property BQ96() As System.Nullable(Of Decimal)
		Get
			Return Me._BQ96
		End Get
		Set
			If (Me._BQ96.Equals(value) = false) Then
				Me._BQ96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BA96", DbType:="Decimal(38,3)")>  _
	Public Property BA96() As System.Nullable(Of Decimal)
		Get
			Return Me._BA96
		End Get
		Set
			If (Me._BA96.Equals(value) = false) Then
				Me._BA96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BQ99", DbType:="Decimal(38,5)")>  _
	Public Property BQ99() As System.Nullable(Of Decimal)
		Get
			Return Me._BQ99
		End Get
		Set
			If (Me._BQ99.Equals(value) = false) Then
				Me._BQ99 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BA99", DbType:="Decimal(38,3)")>  _
	Public Property BA99() As System.Nullable(Of Decimal)
		Get
			Return Me._BA99
		End Get
		Set
			If (Me._BA99.Equals(value) = false) Then
				Me._BA99 = value
			End If
		End Set
	End Property
End Class

Partial Public Class getSpotResult
	
	Private _spot_id As Integer
	
	Private _bid As System.Nullable(Of Decimal)
	
	Private _bid_1 As System.Nullable(Of Decimal)
	
	Private _ask As System.Nullable(Of Decimal)
	
	Private _ask_1 As System.Nullable(Of Decimal)
	
	Private _bid_thb As System.Nullable(Of Decimal)
	
	Private _ask_thb As System.Nullable(Of Decimal)
	
	Private _datetime As System.Nullable(Of Date)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_spot_id", DbType:="Int NOT NULL")>  _
	Public Property spot_id() As Integer
		Get
			Return Me._spot_id
		End Get
		Set
			If ((Me._spot_id = value)  _
						= false) Then
				Me._spot_id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid", DbType:="Decimal(18,2)")>  _
	Public Property bid() As System.Nullable(Of Decimal)
		Get
			Return Me._bid
		End Get
		Set
			If (Me._bid.Equals(value) = false) Then
				Me._bid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid_1", DbType:="Decimal(18,2)")>  _
	Public Property bid_1() As System.Nullable(Of Decimal)
		Get
			Return Me._bid_1
		End Get
		Set
			If (Me._bid_1.Equals(value) = false) Then
				Me._bid_1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask", DbType:="Decimal(18,2)")>  _
	Public Property ask() As System.Nullable(Of Decimal)
		Get
			Return Me._ask
		End Get
		Set
			If (Me._ask.Equals(value) = false) Then
				Me._ask = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask_1", DbType:="Decimal(18,2)")>  _
	Public Property ask_1() As System.Nullable(Of Decimal)
		Get
			Return Me._ask_1
		End Get
		Set
			If (Me._ask_1.Equals(value) = false) Then
				Me._ask_1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid_thb", DbType:="Decimal(18,2)")>  _
	Public Property bid_thb() As System.Nullable(Of Decimal)
		Get
			Return Me._bid_thb
		End Get
		Set
			If (Me._bid_thb.Equals(value) = false) Then
				Me._bid_thb = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask_thb", DbType:="Decimal(18,2)")>  _
	Public Property ask_thb() As System.Nullable(Of Decimal)
		Get
			Return Me._ask_thb
		End Get
		Set
			If (Me._ask_thb.Equals(value) = false) Then
				Me._ask_thb = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_datetime", DbType:="DateTime")>  _
	Public Property datetime() As System.Nullable(Of Date)
		Get
			Return Me._datetime
		End Get
		Set
			If (Me._datetime.Equals(value) = false) Then
				Me._datetime = value
			End If
		End Set
	End Property
End Class

Partial Public Class getStockOnlineResult
	
	Private _stock_id As Integer
	
	Private _price As System.Nullable(Of Decimal)
	
	Private _bid99_1 As System.Nullable(Of Decimal)
	
	Private _ask99_1 As System.Nullable(Of Decimal)
	
	Private _bid99_2 As System.Nullable(Of Decimal)
	
	Private _ask99_2 As System.Nullable(Of Decimal)
	
	Private _bid99_3 As System.Nullable(Of Decimal)
	
	Private _ask99_3 As System.Nullable(Of Decimal)
	
	Private _bid96_1 As System.Nullable(Of Decimal)
	
	Private _ask96_1 As System.Nullable(Of Decimal)
	
	Private _bid96_2 As System.Nullable(Of Decimal)
	
	Private _ask96_2 As System.Nullable(Of Decimal)
	
	Private _bid96_3 As System.Nullable(Of Decimal)
	
	Private _ask96_3 As System.Nullable(Of Decimal)
	
	Private _time As System.Nullable(Of Double)
	
	Private _time_update As System.Nullable(Of Date)
	
	Private _purity99_default As String
	
	Private _min As System.Nullable(Of Decimal)
	
	Private _max As System.Nullable(Of Decimal)
	
	Private _max_baht As System.Nullable(Of Decimal)
	
	Private _max_kg As System.Nullable(Of Decimal)
	
	Private _max_mini As System.Nullable(Of Decimal)
	
	Private _msg As String
	
	Private _pwd_auth As String
	
	Private _modifier_by As String
	
	Private _order_timeout As System.Nullable(Of Integer)
	
	Private _max_per As System.Nullable(Of Decimal)
	
	Private _min_ask_dif_9699 As System.Nullable(Of Decimal)
	
	Private _max_ask_dif_9699 As System.Nullable(Of Decimal)
	
	Private _halt As System.Nullable(Of Char)
	
	Private _range_leave_order As System.Nullable(Of Decimal)
	
	Private _bid99_plus As System.Nullable(Of Integer)
	
	Private _ask99_plus As System.Nullable(Of Integer)
	
	Private _bid96_plus As System.Nullable(Of Integer)
	
	Private _ask96_plus As System.Nullable(Of Integer)
	
	Private _self_price As System.Nullable(Of Char)
	
	Private _self_halt As System.Nullable(Of Char)
	
	Private _quantity_limit As System.Nullable(Of Decimal)
	
	Private _system_halt As System.Nullable(Of Char)
	
	Private _grt_pay As System.Nullable(Of Double)
	
	Private _grt_trade As System.Nullable(Of Double)
	
	Private _space_kg99 As System.Nullable(Of Decimal)
	
	Private _space_bg99 As System.Nullable(Of Decimal)
	
	Private _space_bg96 As System.Nullable(Of Decimal)
	
	Private _premium As System.Nullable(Of Decimal)
	
	Private _fx_bid As System.Nullable(Of Decimal)
	
	Private _fx_ask As System.Nullable(Of Decimal)
	
	Private _fx_ask_thb As System.Nullable(Of Decimal)
	
	Private _melting_cost As System.Nullable(Of Decimal)
	
	Private _time_end As System.Nullable(Of Date)
	
	Private _time_trade As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stock_id", DbType:="Int NOT NULL")>  _
	Public Property stock_id() As Integer
		Get
			Return Me._stock_id
		End Get
		Set
			If ((Me._stock_id = value)  _
						= false) Then
				Me._stock_id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_price", DbType:="Decimal(18,2)")>  _
	Public Property price() As System.Nullable(Of Decimal)
		Get
			Return Me._price
		End Get
		Set
			If (Me._price.Equals(value) = false) Then
				Me._price = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid99_1", DbType:="Decimal(18,2)")>  _
	Public Property bid99_1() As System.Nullable(Of Decimal)
		Get
			Return Me._bid99_1
		End Get
		Set
			If (Me._bid99_1.Equals(value) = false) Then
				Me._bid99_1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask99_1", DbType:="Decimal(18,2)")>  _
	Public Property ask99_1() As System.Nullable(Of Decimal)
		Get
			Return Me._ask99_1
		End Get
		Set
			If (Me._ask99_1.Equals(value) = false) Then
				Me._ask99_1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid99_2", DbType:="Decimal(18,2)")>  _
	Public Property bid99_2() As System.Nullable(Of Decimal)
		Get
			Return Me._bid99_2
		End Get
		Set
			If (Me._bid99_2.Equals(value) = false) Then
				Me._bid99_2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask99_2", DbType:="Decimal(18,2)")>  _
	Public Property ask99_2() As System.Nullable(Of Decimal)
		Get
			Return Me._ask99_2
		End Get
		Set
			If (Me._ask99_2.Equals(value) = false) Then
				Me._ask99_2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid99_3", DbType:="Decimal(18,2)")>  _
	Public Property bid99_3() As System.Nullable(Of Decimal)
		Get
			Return Me._bid99_3
		End Get
		Set
			If (Me._bid99_3.Equals(value) = false) Then
				Me._bid99_3 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask99_3", DbType:="Decimal(18,2)")>  _
	Public Property ask99_3() As System.Nullable(Of Decimal)
		Get
			Return Me._ask99_3
		End Get
		Set
			If (Me._ask99_3.Equals(value) = false) Then
				Me._ask99_3 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid96_1", DbType:="Decimal(18,2)")>  _
	Public Property bid96_1() As System.Nullable(Of Decimal)
		Get
			Return Me._bid96_1
		End Get
		Set
			If (Me._bid96_1.Equals(value) = false) Then
				Me._bid96_1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask96_1", DbType:="Decimal(18,2)")>  _
	Public Property ask96_1() As System.Nullable(Of Decimal)
		Get
			Return Me._ask96_1
		End Get
		Set
			If (Me._ask96_1.Equals(value) = false) Then
				Me._ask96_1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid96_2", DbType:="Decimal(18,2)")>  _
	Public Property bid96_2() As System.Nullable(Of Decimal)
		Get
			Return Me._bid96_2
		End Get
		Set
			If (Me._bid96_2.Equals(value) = false) Then
				Me._bid96_2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask96_2", DbType:="Decimal(18,2)")>  _
	Public Property ask96_2() As System.Nullable(Of Decimal)
		Get
			Return Me._ask96_2
		End Get
		Set
			If (Me._ask96_2.Equals(value) = false) Then
				Me._ask96_2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid96_3", DbType:="Decimal(18,2)")>  _
	Public Property bid96_3() As System.Nullable(Of Decimal)
		Get
			Return Me._bid96_3
		End Get
		Set
			If (Me._bid96_3.Equals(value) = false) Then
				Me._bid96_3 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask96_3", DbType:="Decimal(18,2)")>  _
	Public Property ask96_3() As System.Nullable(Of Decimal)
		Get
			Return Me._ask96_3
		End Get
		Set
			If (Me._ask96_3.Equals(value) = false) Then
				Me._ask96_3 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_time", DbType:="Float")>  _
	Public Property time() As System.Nullable(Of Double)
		Get
			Return Me._time
		End Get
		Set
			If (Me._time.Equals(value) = false) Then
				Me._time = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_time_update", DbType:="DateTime")>  _
	Public Property time_update() As System.Nullable(Of Date)
		Get
			Return Me._time_update
		End Get
		Set
			If (Me._time_update.Equals(value) = false) Then
				Me._time_update = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_purity99_default", DbType:="NChar(3)")>  _
	Public Property purity99_default() As String
		Get
			Return Me._purity99_default
		End Get
		Set
			If (String.Equals(Me._purity99_default, value) = false) Then
				Me._purity99_default = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_min", DbType:="Decimal(18,2)")>  _
	Public Property min() As System.Nullable(Of Decimal)
		Get
			Return Me._min
		End Get
		Set
			If (Me._min.Equals(value) = false) Then
				Me._min = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_max", DbType:="Decimal(18,2)")>  _
	Public Property max() As System.Nullable(Of Decimal)
		Get
			Return Me._max
		End Get
		Set
			If (Me._max.Equals(value) = false) Then
				Me._max = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_max_baht", DbType:="Decimal(18,2)")>  _
	Public Property max_baht() As System.Nullable(Of Decimal)
		Get
			Return Me._max_baht
		End Get
		Set
			If (Me._max_baht.Equals(value) = false) Then
				Me._max_baht = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_max_kg", DbType:="Decimal(18,2)")>  _
	Public Property max_kg() As System.Nullable(Of Decimal)
		Get
			Return Me._max_kg
		End Get
		Set
			If (Me._max_kg.Equals(value) = false) Then
				Me._max_kg = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_max_mini", DbType:="Decimal(18,2)")>  _
	Public Property max_mini() As System.Nullable(Of Decimal)
		Get
			Return Me._max_mini
		End Get
		Set
			If (Me._max_mini.Equals(value) = false) Then
				Me._max_mini = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_msg", DbType:="VarChar(MAX)")>  _
	Public Property msg() As String
		Get
			Return Me._msg
		End Get
		Set
			If (String.Equals(Me._msg, value) = false) Then
				Me._msg = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pwd_auth", DbType:="VarChar(50)")>  _
	Public Property pwd_auth() As String
		Get
			Return Me._pwd_auth
		End Get
		Set
			If (String.Equals(Me._pwd_auth, value) = false) Then
				Me._pwd_auth = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modifier_by", DbType:="VarChar(50)")>  _
	Public Property modifier_by() As String
		Get
			Return Me._modifier_by
		End Get
		Set
			If (String.Equals(Me._modifier_by, value) = false) Then
				Me._modifier_by = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_order_timeout", DbType:="Int")>  _
	Public Property order_timeout() As System.Nullable(Of Integer)
		Get
			Return Me._order_timeout
		End Get
		Set
			If (Me._order_timeout.Equals(value) = false) Then
				Me._order_timeout = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_max_per", DbType:="Decimal(18,2)")>  _
	Public Property max_per() As System.Nullable(Of Decimal)
		Get
			Return Me._max_per
		End Get
		Set
			If (Me._max_per.Equals(value) = false) Then
				Me._max_per = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_min_ask_dif_9699", DbType:="Decimal(18,2)")>  _
	Public Property min_ask_dif_9699() As System.Nullable(Of Decimal)
		Get
			Return Me._min_ask_dif_9699
		End Get
		Set
			If (Me._min_ask_dif_9699.Equals(value) = false) Then
				Me._min_ask_dif_9699 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_max_ask_dif_9699", DbType:="Decimal(18,2)")>  _
	Public Property max_ask_dif_9699() As System.Nullable(Of Decimal)
		Get
			Return Me._max_ask_dif_9699
		End Get
		Set
			If (Me._max_ask_dif_9699.Equals(value) = false) Then
				Me._max_ask_dif_9699 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_halt", DbType:="NChar(1)")>  _
	Public Property halt() As System.Nullable(Of Char)
		Get
			Return Me._halt
		End Get
		Set
			If (Me._halt.Equals(value) = false) Then
				Me._halt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_range_leave_order", DbType:="Decimal(18,2)")>  _
	Public Property range_leave_order() As System.Nullable(Of Decimal)
		Get
			Return Me._range_leave_order
		End Get
		Set
			If (Me._range_leave_order.Equals(value) = false) Then
				Me._range_leave_order = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid99_plus", DbType:="Int")>  _
	Public Property bid99_plus() As System.Nullable(Of Integer)
		Get
			Return Me._bid99_plus
		End Get
		Set
			If (Me._bid99_plus.Equals(value) = false) Then
				Me._bid99_plus = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask99_plus", DbType:="Int")>  _
	Public Property ask99_plus() As System.Nullable(Of Integer)
		Get
			Return Me._ask99_plus
		End Get
		Set
			If (Me._ask99_plus.Equals(value) = false) Then
				Me._ask99_plus = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid96_plus", DbType:="Int")>  _
	Public Property bid96_plus() As System.Nullable(Of Integer)
		Get
			Return Me._bid96_plus
		End Get
		Set
			If (Me._bid96_plus.Equals(value) = false) Then
				Me._bid96_plus = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask96_plus", DbType:="Int")>  _
	Public Property ask96_plus() As System.Nullable(Of Integer)
		Get
			Return Me._ask96_plus
		End Get
		Set
			If (Me._ask96_plus.Equals(value) = false) Then
				Me._ask96_plus = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_self_price", DbType:="Char(1)")>  _
	Public Property self_price() As System.Nullable(Of Char)
		Get
			Return Me._self_price
		End Get
		Set
			If (Me._self_price.Equals(value) = false) Then
				Me._self_price = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_self_halt", DbType:="Char(1)")>  _
	Public Property self_halt() As System.Nullable(Of Char)
		Get
			Return Me._self_halt
		End Get
		Set
			If (Me._self_halt.Equals(value) = false) Then
				Me._self_halt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quantity_limit", DbType:="Decimal(18,2)")>  _
	Public Property quantity_limit() As System.Nullable(Of Decimal)
		Get
			Return Me._quantity_limit
		End Get
		Set
			If (Me._quantity_limit.Equals(value) = false) Then
				Me._quantity_limit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_system_halt", DbType:="Char(1)")>  _
	Public Property system_halt() As System.Nullable(Of Char)
		Get
			Return Me._system_halt
		End Get
		Set
			If (Me._system_halt.Equals(value) = false) Then
				Me._system_halt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grt_pay", DbType:="Float")>  _
	Public Property grt_pay() As System.Nullable(Of Double)
		Get
			Return Me._grt_pay
		End Get
		Set
			If (Me._grt_pay.Equals(value) = false) Then
				Me._grt_pay = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grt_trade", DbType:="Float")>  _
	Public Property grt_trade() As System.Nullable(Of Double)
		Get
			Return Me._grt_trade
		End Get
		Set
			If (Me._grt_trade.Equals(value) = false) Then
				Me._grt_trade = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_space_kg99", DbType:="Decimal(18,2)")>  _
	Public Property space_kg99() As System.Nullable(Of Decimal)
		Get
			Return Me._space_kg99
		End Get
		Set
			If (Me._space_kg99.Equals(value) = false) Then
				Me._space_kg99 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_space_bg99", DbType:="Decimal(18,2)")>  _
	Public Property space_bg99() As System.Nullable(Of Decimal)
		Get
			Return Me._space_bg99
		End Get
		Set
			If (Me._space_bg99.Equals(value) = false) Then
				Me._space_bg99 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_space_bg96", DbType:="Decimal(18,2)")>  _
	Public Property space_bg96() As System.Nullable(Of Decimal)
		Get
			Return Me._space_bg96
		End Get
		Set
			If (Me._space_bg96.Equals(value) = false) Then
				Me._space_bg96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_premium", DbType:="Decimal(18,2)")>  _
	Public Property premium() As System.Nullable(Of Decimal)
		Get
			Return Me._premium
		End Get
		Set
			If (Me._premium.Equals(value) = false) Then
				Me._premium = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fx_bid", DbType:="Decimal(18,2)")>  _
	Public Property fx_bid() As System.Nullable(Of Decimal)
		Get
			Return Me._fx_bid
		End Get
		Set
			If (Me._fx_bid.Equals(value) = false) Then
				Me._fx_bid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fx_ask", DbType:="Decimal(18,2)")>  _
	Public Property fx_ask() As System.Nullable(Of Decimal)
		Get
			Return Me._fx_ask
		End Get
		Set
			If (Me._fx_ask.Equals(value) = false) Then
				Me._fx_ask = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fx_ask_thb", DbType:="Decimal(18,2)")>  _
	Public Property fx_ask_thb() As System.Nullable(Of Decimal)
		Get
			Return Me._fx_ask_thb
		End Get
		Set
			If (Me._fx_ask_thb.Equals(value) = false) Then
				Me._fx_ask_thb = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_melting_cost", DbType:="Decimal(18,2)")>  _
	Public Property melting_cost() As System.Nullable(Of Decimal)
		Get
			Return Me._melting_cost
		End Get
		Set
			If (Me._melting_cost.Equals(value) = false) Then
				Me._melting_cost = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_time_end", DbType:="DateTime")>  _
	Public Property time_end() As System.Nullable(Of Date)
		Get
			Return Me._time_end
		End Get
		Set
			If (Me._time_end.Equals(value) = false) Then
				Me._time_end = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_time_trade", DbType:="VarChar(1) NOT NULL", CanBeNull:=false)>  _
	Public Property time_trade() As String
		Get
			Return Me._time_trade
		End Get
		Set
			If (String.Equals(Me._time_trade, value) = false) Then
				Me._time_trade = value
			End If
		End Set
	End Property
End Class

Partial Public Class getStockOnlineForPriceResult
	
	Private _stock_id As Integer
	
	Private _price As System.Nullable(Of Decimal)
	
	Private _bid99_1 As System.Nullable(Of Decimal)
	
	Private _ask99_1 As System.Nullable(Of Decimal)
	
	Private _bid99_2 As System.Nullable(Of Decimal)
	
	Private _ask99_2 As System.Nullable(Of Decimal)
	
	Private _bid99_3 As System.Nullable(Of Decimal)
	
	Private _ask99_3 As System.Nullable(Of Decimal)
	
	Private _bid96_1 As System.Nullable(Of Decimal)
	
	Private _ask96_1 As System.Nullable(Of Decimal)
	
	Private _bid96_2 As System.Nullable(Of Decimal)
	
	Private _ask96_2 As System.Nullable(Of Decimal)
	
	Private _bid96_3 As System.Nullable(Of Decimal)
	
	Private _ask96_3 As System.Nullable(Of Decimal)
	
	Private _time As System.Nullable(Of Double)
	
	Private _time_update As System.Nullable(Of Date)
	
	Private _purity99_default As String
	
	Private _min As System.Nullable(Of Decimal)
	
	Private _max As System.Nullable(Of Decimal)
	
	Private _max_baht As System.Nullable(Of Decimal)
	
	Private _max_kg As System.Nullable(Of Decimal)
	
	Private _max_mini As System.Nullable(Of Decimal)
	
	Private _msg As String
	
	Private _pwd_auth As String
	
	Private _modifier_by As String
	
	Private _order_timeout As System.Nullable(Of Integer)
	
	Private _max_per As System.Nullable(Of Decimal)
	
	Private _min_ask_dif_9699 As System.Nullable(Of Decimal)
	
	Private _max_ask_dif_9699 As System.Nullable(Of Decimal)
	
	Private _halt As System.Nullable(Of Char)
	
	Private _range_leave_order As System.Nullable(Of Decimal)
	
	Private _bid99_plus As System.Nullable(Of Integer)
	
	Private _ask99_plus As System.Nullable(Of Integer)
	
	Private _bid96_plus As System.Nullable(Of Integer)
	
	Private _ask96_plus As System.Nullable(Of Integer)
	
	Private _self_price As System.Nullable(Of Char)
	
	Private _self_halt As System.Nullable(Of Char)
	
	Private _quantity_limit As System.Nullable(Of Decimal)
	
	Private _system_halt As System.Nullable(Of Char)
	
	Private _grt_pay As System.Nullable(Of Double)
	
	Private _grt_trade As System.Nullable(Of Double)
	
	Private _space_kg99 As System.Nullable(Of Decimal)
	
	Private _space_bg99 As System.Nullable(Of Decimal)
	
	Private _space_bg96 As System.Nullable(Of Decimal)
	
	Private _premium As System.Nullable(Of Decimal)
	
	Private _fx_bid As System.Nullable(Of Decimal)
	
	Private _fx_ask As System.Nullable(Of Decimal)
	
	Private _fx_ask_thb As System.Nullable(Of Decimal)
	
	Private _melting_cost As System.Nullable(Of Decimal)
	
	Private _time_end As System.Nullable(Of Date)
	
	Private _time_trade As String
	
	Private _admin_halt As System.Nullable(Of Char)
	
	Private _discount_buy As System.Nullable(Of Double)
	
	Private _discount_sell As System.Nullable(Of Double)
	
	Private _cust_halt As String
	
	Private _cust_level As Integer
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_stock_id", DbType:="Int NOT NULL")>  _
	Public Property stock_id() As Integer
		Get
			Return Me._stock_id
		End Get
		Set
			If ((Me._stock_id = value)  _
						= false) Then
				Me._stock_id = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_price", DbType:="Decimal(18,2)")>  _
	Public Property price() As System.Nullable(Of Decimal)
		Get
			Return Me._price
		End Get
		Set
			If (Me._price.Equals(value) = false) Then
				Me._price = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid99_1", DbType:="Decimal(18,2)")>  _
	Public Property bid99_1() As System.Nullable(Of Decimal)
		Get
			Return Me._bid99_1
		End Get
		Set
			If (Me._bid99_1.Equals(value) = false) Then
				Me._bid99_1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask99_1", DbType:="Decimal(18,2)")>  _
	Public Property ask99_1() As System.Nullable(Of Decimal)
		Get
			Return Me._ask99_1
		End Get
		Set
			If (Me._ask99_1.Equals(value) = false) Then
				Me._ask99_1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid99_2", DbType:="Decimal(18,2)")>  _
	Public Property bid99_2() As System.Nullable(Of Decimal)
		Get
			Return Me._bid99_2
		End Get
		Set
			If (Me._bid99_2.Equals(value) = false) Then
				Me._bid99_2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask99_2", DbType:="Decimal(18,2)")>  _
	Public Property ask99_2() As System.Nullable(Of Decimal)
		Get
			Return Me._ask99_2
		End Get
		Set
			If (Me._ask99_2.Equals(value) = false) Then
				Me._ask99_2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid99_3", DbType:="Decimal(18,2)")>  _
	Public Property bid99_3() As System.Nullable(Of Decimal)
		Get
			Return Me._bid99_3
		End Get
		Set
			If (Me._bid99_3.Equals(value) = false) Then
				Me._bid99_3 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask99_3", DbType:="Decimal(18,2)")>  _
	Public Property ask99_3() As System.Nullable(Of Decimal)
		Get
			Return Me._ask99_3
		End Get
		Set
			If (Me._ask99_3.Equals(value) = false) Then
				Me._ask99_3 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid96_1", DbType:="Decimal(18,2)")>  _
	Public Property bid96_1() As System.Nullable(Of Decimal)
		Get
			Return Me._bid96_1
		End Get
		Set
			If (Me._bid96_1.Equals(value) = false) Then
				Me._bid96_1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask96_1", DbType:="Decimal(18,2)")>  _
	Public Property ask96_1() As System.Nullable(Of Decimal)
		Get
			Return Me._ask96_1
		End Get
		Set
			If (Me._ask96_1.Equals(value) = false) Then
				Me._ask96_1 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid96_2", DbType:="Decimal(18,2)")>  _
	Public Property bid96_2() As System.Nullable(Of Decimal)
		Get
			Return Me._bid96_2
		End Get
		Set
			If (Me._bid96_2.Equals(value) = false) Then
				Me._bid96_2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask96_2", DbType:="Decimal(18,2)")>  _
	Public Property ask96_2() As System.Nullable(Of Decimal)
		Get
			Return Me._ask96_2
		End Get
		Set
			If (Me._ask96_2.Equals(value) = false) Then
				Me._ask96_2 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid96_3", DbType:="Decimal(18,2)")>  _
	Public Property bid96_3() As System.Nullable(Of Decimal)
		Get
			Return Me._bid96_3
		End Get
		Set
			If (Me._bid96_3.Equals(value) = false) Then
				Me._bid96_3 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask96_3", DbType:="Decimal(18,2)")>  _
	Public Property ask96_3() As System.Nullable(Of Decimal)
		Get
			Return Me._ask96_3
		End Get
		Set
			If (Me._ask96_3.Equals(value) = false) Then
				Me._ask96_3 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_time", DbType:="Float")>  _
	Public Property time() As System.Nullable(Of Double)
		Get
			Return Me._time
		End Get
		Set
			If (Me._time.Equals(value) = false) Then
				Me._time = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_time_update", DbType:="DateTime")>  _
	Public Property time_update() As System.Nullable(Of Date)
		Get
			Return Me._time_update
		End Get
		Set
			If (Me._time_update.Equals(value) = false) Then
				Me._time_update = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_purity99_default", DbType:="NChar(3)")>  _
	Public Property purity99_default() As String
		Get
			Return Me._purity99_default
		End Get
		Set
			If (String.Equals(Me._purity99_default, value) = false) Then
				Me._purity99_default = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_min", DbType:="Decimal(18,2)")>  _
	Public Property min() As System.Nullable(Of Decimal)
		Get
			Return Me._min
		End Get
		Set
			If (Me._min.Equals(value) = false) Then
				Me._min = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_max", DbType:="Decimal(18,2)")>  _
	Public Property max() As System.Nullable(Of Decimal)
		Get
			Return Me._max
		End Get
		Set
			If (Me._max.Equals(value) = false) Then
				Me._max = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_max_baht", DbType:="Decimal(18,2)")>  _
	Public Property max_baht() As System.Nullable(Of Decimal)
		Get
			Return Me._max_baht
		End Get
		Set
			If (Me._max_baht.Equals(value) = false) Then
				Me._max_baht = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_max_kg", DbType:="Decimal(18,2)")>  _
	Public Property max_kg() As System.Nullable(Of Decimal)
		Get
			Return Me._max_kg
		End Get
		Set
			If (Me._max_kg.Equals(value) = false) Then
				Me._max_kg = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_max_mini", DbType:="Decimal(18,2)")>  _
	Public Property max_mini() As System.Nullable(Of Decimal)
		Get
			Return Me._max_mini
		End Get
		Set
			If (Me._max_mini.Equals(value) = false) Then
				Me._max_mini = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_msg", DbType:="VarChar(MAX)")>  _
	Public Property msg() As String
		Get
			Return Me._msg
		End Get
		Set
			If (String.Equals(Me._msg, value) = false) Then
				Me._msg = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_pwd_auth", DbType:="VarChar(50)")>  _
	Public Property pwd_auth() As String
		Get
			Return Me._pwd_auth
		End Get
		Set
			If (String.Equals(Me._pwd_auth, value) = false) Then
				Me._pwd_auth = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_modifier_by", DbType:="VarChar(50)")>  _
	Public Property modifier_by() As String
		Get
			Return Me._modifier_by
		End Get
		Set
			If (String.Equals(Me._modifier_by, value) = false) Then
				Me._modifier_by = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_order_timeout", DbType:="Int")>  _
	Public Property order_timeout() As System.Nullable(Of Integer)
		Get
			Return Me._order_timeout
		End Get
		Set
			If (Me._order_timeout.Equals(value) = false) Then
				Me._order_timeout = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_max_per", DbType:="Decimal(18,2)")>  _
	Public Property max_per() As System.Nullable(Of Decimal)
		Get
			Return Me._max_per
		End Get
		Set
			If (Me._max_per.Equals(value) = false) Then
				Me._max_per = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_min_ask_dif_9699", DbType:="Decimal(18,2)")>  _
	Public Property min_ask_dif_9699() As System.Nullable(Of Decimal)
		Get
			Return Me._min_ask_dif_9699
		End Get
		Set
			If (Me._min_ask_dif_9699.Equals(value) = false) Then
				Me._min_ask_dif_9699 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_max_ask_dif_9699", DbType:="Decimal(18,2)")>  _
	Public Property max_ask_dif_9699() As System.Nullable(Of Decimal)
		Get
			Return Me._max_ask_dif_9699
		End Get
		Set
			If (Me._max_ask_dif_9699.Equals(value) = false) Then
				Me._max_ask_dif_9699 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_halt", DbType:="NChar(1)")>  _
	Public Property halt() As System.Nullable(Of Char)
		Get
			Return Me._halt
		End Get
		Set
			If (Me._halt.Equals(value) = false) Then
				Me._halt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_range_leave_order", DbType:="Decimal(18,2)")>  _
	Public Property range_leave_order() As System.Nullable(Of Decimal)
		Get
			Return Me._range_leave_order
		End Get
		Set
			If (Me._range_leave_order.Equals(value) = false) Then
				Me._range_leave_order = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid99_plus", DbType:="Int")>  _
	Public Property bid99_plus() As System.Nullable(Of Integer)
		Get
			Return Me._bid99_plus
		End Get
		Set
			If (Me._bid99_plus.Equals(value) = false) Then
				Me._bid99_plus = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask99_plus", DbType:="Int")>  _
	Public Property ask99_plus() As System.Nullable(Of Integer)
		Get
			Return Me._ask99_plus
		End Get
		Set
			If (Me._ask99_plus.Equals(value) = false) Then
				Me._ask99_plus = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bid96_plus", DbType:="Int")>  _
	Public Property bid96_plus() As System.Nullable(Of Integer)
		Get
			Return Me._bid96_plus
		End Get
		Set
			If (Me._bid96_plus.Equals(value) = false) Then
				Me._bid96_plus = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ask96_plus", DbType:="Int")>  _
	Public Property ask96_plus() As System.Nullable(Of Integer)
		Get
			Return Me._ask96_plus
		End Get
		Set
			If (Me._ask96_plus.Equals(value) = false) Then
				Me._ask96_plus = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_self_price", DbType:="Char(1)")>  _
	Public Property self_price() As System.Nullable(Of Char)
		Get
			Return Me._self_price
		End Get
		Set
			If (Me._self_price.Equals(value) = false) Then
				Me._self_price = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_self_halt", DbType:="Char(1)")>  _
	Public Property self_halt() As System.Nullable(Of Char)
		Get
			Return Me._self_halt
		End Get
		Set
			If (Me._self_halt.Equals(value) = false) Then
				Me._self_halt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_quantity_limit", DbType:="Decimal(18,2)")>  _
	Public Property quantity_limit() As System.Nullable(Of Decimal)
		Get
			Return Me._quantity_limit
		End Get
		Set
			If (Me._quantity_limit.Equals(value) = false) Then
				Me._quantity_limit = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_system_halt", DbType:="Char(1)")>  _
	Public Property system_halt() As System.Nullable(Of Char)
		Get
			Return Me._system_halt
		End Get
		Set
			If (Me._system_halt.Equals(value) = false) Then
				Me._system_halt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grt_pay", DbType:="Float")>  _
	Public Property grt_pay() As System.Nullable(Of Double)
		Get
			Return Me._grt_pay
		End Get
		Set
			If (Me._grt_pay.Equals(value) = false) Then
				Me._grt_pay = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_grt_trade", DbType:="Float")>  _
	Public Property grt_trade() As System.Nullable(Of Double)
		Get
			Return Me._grt_trade
		End Get
		Set
			If (Me._grt_trade.Equals(value) = false) Then
				Me._grt_trade = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_space_kg99", DbType:="Decimal(18,2)")>  _
	Public Property space_kg99() As System.Nullable(Of Decimal)
		Get
			Return Me._space_kg99
		End Get
		Set
			If (Me._space_kg99.Equals(value) = false) Then
				Me._space_kg99 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_space_bg99", DbType:="Decimal(18,2)")>  _
	Public Property space_bg99() As System.Nullable(Of Decimal)
		Get
			Return Me._space_bg99
		End Get
		Set
			If (Me._space_bg99.Equals(value) = false) Then
				Me._space_bg99 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_space_bg96", DbType:="Decimal(18,2)")>  _
	Public Property space_bg96() As System.Nullable(Of Decimal)
		Get
			Return Me._space_bg96
		End Get
		Set
			If (Me._space_bg96.Equals(value) = false) Then
				Me._space_bg96 = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_premium", DbType:="Decimal(18,2)")>  _
	Public Property premium() As System.Nullable(Of Decimal)
		Get
			Return Me._premium
		End Get
		Set
			If (Me._premium.Equals(value) = false) Then
				Me._premium = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fx_bid", DbType:="Decimal(18,2)")>  _
	Public Property fx_bid() As System.Nullable(Of Decimal)
		Get
			Return Me._fx_bid
		End Get
		Set
			If (Me._fx_bid.Equals(value) = false) Then
				Me._fx_bid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fx_ask", DbType:="Decimal(18,2)")>  _
	Public Property fx_ask() As System.Nullable(Of Decimal)
		Get
			Return Me._fx_ask
		End Get
		Set
			If (Me._fx_ask.Equals(value) = false) Then
				Me._fx_ask = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_fx_ask_thb", DbType:="Decimal(18,2)")>  _
	Public Property fx_ask_thb() As System.Nullable(Of Decimal)
		Get
			Return Me._fx_ask_thb
		End Get
		Set
			If (Me._fx_ask_thb.Equals(value) = false) Then
				Me._fx_ask_thb = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_melting_cost", DbType:="Decimal(18,2)")>  _
	Public Property melting_cost() As System.Nullable(Of Decimal)
		Get
			Return Me._melting_cost
		End Get
		Set
			If (Me._melting_cost.Equals(value) = false) Then
				Me._melting_cost = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_time_end", DbType:="DateTime")>  _
	Public Property time_end() As System.Nullable(Of Date)
		Get
			Return Me._time_end
		End Get
		Set
			If (Me._time_end.Equals(value) = false) Then
				Me._time_end = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_time_trade", DbType:="VarChar(1) NOT NULL", CanBeNull:=false)>  _
	Public Property time_trade() As String
		Get
			Return Me._time_trade
		End Get
		Set
			If (String.Equals(Me._time_trade, value) = false) Then
				Me._time_trade = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_admin_halt", DbType:="NChar(1)")>  _
	Public Property admin_halt() As System.Nullable(Of Char)
		Get
			Return Me._admin_halt
		End Get
		Set
			If (Me._admin_halt.Equals(value) = false) Then
				Me._admin_halt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_discount_buy", DbType:="Float")>  _
	Public Property discount_buy() As System.Nullable(Of Double)
		Get
			Return Me._discount_buy
		End Get
		Set
			If (Me._discount_buy.Equals(value) = false) Then
				Me._discount_buy = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_discount_sell", DbType:="Float")>  _
	Public Property discount_sell() As System.Nullable(Of Double)
		Get
			Return Me._discount_sell
		End Get
		Set
			If (Me._discount_sell.Equals(value) = false) Then
				Me._discount_sell = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cust_halt", DbType:="VarChar(1) NOT NULL", CanBeNull:=false)>  _
	Public Property cust_halt() As String
		Get
			Return Me._cust_halt
		End Get
		Set
			If (String.Equals(Me._cust_halt, value) = false) Then
				Me._cust_halt = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cust_level", DbType:="Int NOT NULL")>  _
	Public Property cust_level() As Integer
		Get
			Return Me._cust_level
		End Get
		Set
			If ((Me._cust_level = value)  _
						= false) Then
				Me._cust_level = value
			End If
		End Set
	End Property
End Class
